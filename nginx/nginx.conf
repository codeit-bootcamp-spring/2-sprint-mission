worker_processes auto; # CPU 코어 수에 맞게 자동으로 조절
daemon off;

events {
  worker_connections 1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  keepalive_timeout 65;

  # 1. API 서버 그룹: 최소 연결(least_conn) 방식으로 분산
  upstream api_servers {
    least_conn;
    server backend:8080;
  }

  # 2. WebSocket 서버 그룹: IP 해시(ip_hash) 방식으로 분산하여 세션 유지
  upstream websocket_servers {
    ip_hash;
    server backend:8080;
  }

  # WebSocket 헤더 설정을 위한 map
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  server {
    listen 80;

    # 1. 정적 파일 서빙
    location / {
      root /usr/share/nginx/html/;
      index index.html;
      try_files $uri $uri/ /index.html;
    }

    # 2. API 프록시
    location /api/ {
      proxy_pass http://api_servers;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_connect_timeout 60s;
      proxy_send_timeout 60s;
      proxy_read_timeout 60s;
    }

     # 3. WebSocket 프록시
    location /ws/ {
      proxy_pass http://websocket_servers;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_connect_timeout 60s;
      proxy_send_timeout 60s;
      proxy_read_timeout 60s;
    }
  }
}
