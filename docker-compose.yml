version: "3.8"

services:
  #  app:
  #    build:
  #      context: .
  #      dockerfile: Dockerfile
  #    container_name: discodeit-app-dev
  #    ports:
  #      - "8080:8080"
  #    environment:
  #      - PROJECT_NAME=${PROJECT_NAME}
  #      - PROJECT_VERSION=${PROJECT_VERSION}
  #      - JVM_OPTS=${JVM_OPTS}
  #      - SPRING_PROFILES_ACTIVE=dev
  #      - SPRING_DATASOURCE_URL=${DEV_SPRING_DATASOURCE_URL}
  #      - SPRING_DATASOURCE_USERNAME=${DEV_SPRING_DATASOURCE_USERNAME}
  #      - SPRING_DATASOURCE_PASSWORD=${DEV_SPRING_DATASOURCE_PASSWORD}
  #    depends_on:
  #      - db
  #    volumes:
  #      - type: bind
  #        source: ${LOCAL_STORAGE_PATH}
  #        target: /app/storage
  #
  #  db:
  #    image: postgres:15
  #    container_name: discodeit-db-dev
  #    environment:
  #      POSTGRES_DB: ${DEV_SPRING_DATASOURCE_DBNAME}
  #      POSTGRES_USER: ${DEV_SPRING_DATASOURCE_USERNAME}
  #      POSTGRES_PASSWORD: ${DEV_SPRING_DATASOURCE_PASSWORD}
  #    volumes:
  #      - pg_data:/var/lib/postgresql/data
  #      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
  #    ports:
  #      - "5432:5432"

  broker:
    image: apache/kafka:latest
    hostname: broker
    container_name: broker
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk

  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes


volumes:
  redis-data:
#  pg_data: