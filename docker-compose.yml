version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: discodeit-db
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  discodeit-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: discodeit-app
    volumes:
      - discodeit-binary-data:/.discodeit
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE} # prod or dev
      # DB
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      # 스토리지
      STORAGE_TYPE: ${STORAGE_TYPE}  # local | s3 (기본값: local)
      STORAGE_LOCAL_ROOT_PATH: ${STORAGE_LOCAL_ROOT_PATH}
      # AWS
      AWS_S3_ACCESS_KEY: ${AWS_S3_ACCESS_KEY}
      AWS_S3_SECRET_KEY: ${AWS_S3_SECRET_KEY}
      AWS_S3_REGION: ${AWS_S3_REGION}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      AWS_S3_PRESIGNED_URL_EXPIRATION: ${AWS_S3_PRESIGNED_URL_EXPIRATION} # (기본값: 10분)
    ports:
      - "8081:80" # prod-8081:80 or dev-8081:8080
    depends_on:
      - postgres
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
volumes:
  postgres-data:
  discodeit-binary-data: