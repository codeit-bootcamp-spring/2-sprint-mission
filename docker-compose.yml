version: '3.8'

services:
  
  postgres:
    image: postgres:15
    container_name: local-postgres
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    expose:
      - 5432
    networks:
      - discodeit-network
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./src/main/resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    restart: unless-stopped

  broker:
    image: apache/kafka:4.0.0
    hostname: broker
    container_name: broker
    expose:
      - 29092
    environment:
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
    networks:
      - discodeit-network

  redis:
    image: redis:7.2-alpine
    container_name: redis
    expose:
      - 6379
    networks:
      - discodeit-network
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      - postgres
      - redis
      - broker
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/discodeit
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - STORAGE_TYPE=local
      - STORAGE_LOCAL_ROOT_PATH=.discodeit/storage
      - DISCODEIT_ADMIN_USERNAME=${DISCODEIT_ADMIN_USERNAME}
      - DISCODEIT_ADMIN_EMAIL=${DISCODEIT_ADMIN_EMAIL}
      - DISCODEIT_ADMIN_PASSWORD=${DISCODEIT_ADMIN_PASSWORD}
      - SECURITY_JWT_SECRET=${SECURITY_JWT_SECRET}
      - SECURITY_JWT_ACCESS_TOKEN_VALIDITY_SECONDS=${SECURITY_JWT_ACCESS_TOKEN_VALIDITY_SECONDS}
      - SECURITY_JWT_REFRESH_TOKEN_VALIDITY_SECONDS=${SECURITY_JWT_REFRESH_TOKEN_VALIDITY_SECONDS}
      - KAFKA_BOOTSTRAP_SERVERS=broker:29092
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    expose:
      - 8080
    networks:
      - discodeit-network
    volumes:
      - binary-content-storage:/app/.discodeit/storage

  reverse-proxy:
    image: nginx:1.28.0
    container_name: reverse-proxy
    depends_on:
      - backend
    ports:
      - "3000:80"
    networks:
      - discodeit-network
    volumes:
      - ./src/main/resources/static:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf

volumes:
  pgdata:
  binary-content-storage:
  redis-data:

networks:
  discodeit-network:
    driver: bridge