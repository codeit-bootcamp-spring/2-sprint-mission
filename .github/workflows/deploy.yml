name: AWS Deploy Pipeline

on:
  push:
    branches:
      - part2-황지환

env:
  ECR_REPOSITORY_URI: ${{ vars.ECR_REPOSITORY_URI }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  ECS_CLUSTER: ${{ vars.ECS_CLUSTER }}
  ECS_SERVICE: ${{ vars.ECS_SERVICE }}
  ECS_TASK_DEFINITION: ${{ vars.ECS_TASK_DEFINITION }}
  CONTAINER_NAME: ${{ vars.CONTAINER_NAME }}

# 생성한 이미지에 문제 있음, 자동 종료됨 추후 수정
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: 소스 체크아웃
        uses: actions/checkout@v4

      - name: QEMU 설치 (멀티 플랫폼 지원)
        uses: docker/setup-qemu-action@v3

      - name: Buildx 설치
        uses: docker/setup-buildx-action@v3

      - name: AWS CLI 인증
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: 이미지 태그 생성
        run: echo "IMAGE_TAG=$(date +'%Y%m%d%H%M%S')-${GITHUB_SHA::8}" >> $GITHUB_ENV

      - name: ECR 로그인
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - name: Docker 이미지 빌드 및 ECR 푸시
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --tag ${{ env.ECR_REPOSITORY_URI }}:${{ env.IMAGE_TAG }} \
            --tag ${{ env.ECR_REPOSITORY_URI }}:latest \
            --push .

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: AWS CLI 인증
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 타켓 태스크-def 다운로드
        run: |
          aws ecs describe-task-definition \
            --task-definition ${{ env.ECS_TASK_DEFINITION }} \
            --query taskDefinition > task-def.json

      - name: 새로운 태스크 정의 생성
        id: render-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-def.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ env.ECR_REPOSITORY_URI }}:${{ env.IMAGE_TAG }}

      - name: ECS 서비스에 무중단 배포
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.render-task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true