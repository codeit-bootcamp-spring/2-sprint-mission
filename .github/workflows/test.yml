name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - part2-양성준-sprint8

jobs:
  test-and-coverage:
    name: test
    runs-on: ubuntu-latest

    steps:
      # 현재 워크플로우가 실행되는 가상 머신(러너)에 해당 저장소의 소스 코드를 다운로드
      - name: checkout code
        uses: actions/checkout@v4

      # 테스트가 이뤄질 JDK 환경 설정
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      # Gradle 의존성을 github Actions에 캐싱 -> 재배포 시에 의존성을 다시 다운로드 받지 않아도 됨
      - name: cache gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 테스트 + 빌드 과정 두가지 테스트
      - name: build with gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build  # test 포함
        env:
          GRADLE_OPTS: "-Xmx256m -Xms256m -XX:MaxMetaspaceSize=128m"

      # 빌드 과정에서 생성된 코드 커버리지 리포트를 Codecov 서비스로 업로드 -> 추후 Readme에 추가 가능
      # Codecov에 접속하여, GitHub 저장소와 연동된 프로젝트 페이지로 이동 -> Badge URL을 Readme에 첨부
      - name: upload coverage report to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.CODECOV_TOKEN }}