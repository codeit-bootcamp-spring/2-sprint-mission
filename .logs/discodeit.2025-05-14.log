25-05-14 00:05:55.914 [main] INFO  c.s.m.d.r.ChannelRepositoryTest      - Starting ChannelRepositoryTest using Java 17.0.14 with PID 28608 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 00:05:55.920 [main] DEBUG c.s.m.d.r.ChannelRepositoryTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 00:05:55.921 [main] INFO  c.s.m.d.r.ChannelRepositoryTest      - The following 1 profile is active: "test"
25-05-14 00:05:56.404 [main] WARN  o.s.c.a.AnnotationConfigApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'jpaAuditingHandler' defined in null: Cannot register bean definition [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] for bean 'jpaAuditingHandler' since there is already [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] bound.
25-05-14 00:05:56.412 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
25-05-14 00:05:56.436 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'jpaAuditingHandler' could not be registered. A bean with that name has already been defined and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

25-05-14 00:05:56.442 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.repository.ChannelRepositoryTest@25ad4f71]
java.lang.IllegalStateException: Failed to load ApplicationContext for [MergedContextConfiguration@7ceb4478 testClass = com.sprint.mission.discodeit.repository.ChannelRepositoryTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2b30a42c, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@43df23d3, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@34be3d80, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@ad2fb15d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@3ad83a66, [ImportsContextCustomizer@7fdab70c key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, excludeAutoConfiguration={}, excludeFilters={}, includeFilters={}, properties={}, showSql=true, useDefaultFilters=true), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(skip=NO, value="spring.test.database"), @org.springframework.context.annotation.Import(value={org.springframework.data.jpa.repository.config.JpaAuditingRegistrar.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.transaction.annotation.Transactional(isolation=DEFAULT, label={}, noRollbackFor={}, noRollbackForClassName={}, propagation=REQUIRED, readOnly=false, rollbackFor={}, rollbackForClassName={}, timeout=-1, timeoutString="", transactionManager="", value=""), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value={org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.data.jpa.repository.config.EnableJpaAuditing(auditorAwareRef="", setDates=true, modifyOnCreate=true, dateTimeProviderRef=""), @org.springframework.aot.hint.annotation.Reflective(processors={org.springframework.aot.hint.annotation.SimpleReflectiveProcessor.class}, value={org.springframework.aot.hint.annotation.SimpleReflectiveProcessor.class}), @org.apiguardian.api.API(consumers={"*"}, since="5.0", status=STABLE), @org.springframework.test.context.ActiveProfiles(inheritProfiles=true, profiles={"test"}, resolver=org.springframework.test.context.ActiveProfilesResolver.class, value={"test"}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(connection=NONE, replace=NON_TEST), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(classes={}, exclude={}, value={}), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a4927d6, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@97e93f1, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@7dfd3c81, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@abf4a032], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'jpaAuditingHandler' defined in null: Cannot register bean definition [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] for bean 'jpaAuditingHandler' since there is already [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] bound.
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:1151)
	at org.springframework.data.auditing.config.AuditingBeanDefinitionRegistrarSupport.registerAuditHandlerBeanDefinition(AuditingBeanDefinitionRegistrarSupport.java:79)
	at org.springframework.data.auditing.config.AuditingBeanDefinitionRegistrarSupport.registerBeanDefinitions(AuditingBeanDefinitionRegistrarSupport.java:59)
	at org.springframework.data.jpa.repository.config.JpaAuditingRegistrar.registerBeanDefinitions(JpaAuditingRegistrar.java:67)
	at org.springframework.context.annotation.ImportBeanDefinitionRegistrar.registerBeanDefinitions(ImportBeanDefinitionRegistrar.java:86)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.lambda$loadBeanDefinitionsFromRegistrars$1(ConfigurationClassBeanDefinitionReader.java:387)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:721)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsFromRegistrars(ConfigurationClassBeanDefinitionReader.java:386)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:149)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:121)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:430)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:290)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:791)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:609)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 74 common frames omitted
25-05-14 00:05:56.469 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.repository.ChannelRepositoryTest@ec8f4b9]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [MergedContextConfiguration@7ceb4478 testClass = com.sprint.mission.discodeit.repository.ChannelRepositoryTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2b30a42c, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@43df23d3, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@34be3d80, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@ad2fb15d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@3ad83a66, [ImportsContextCustomizer@7fdab70c key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, excludeAutoConfiguration={}, excludeFilters={}, includeFilters={}, properties={}, showSql=true, useDefaultFilters=true), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(skip=NO, value="spring.test.database"), @org.springframework.context.annotation.Import(value={org.springframework.data.jpa.repository.config.JpaAuditingRegistrar.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.transaction.annotation.Transactional(isolation=DEFAULT, label={}, noRollbackFor={}, noRollbackForClassName={}, propagation=REQUIRED, readOnly=false, rollbackFor={}, rollbackForClassName={}, timeout=-1, timeoutString="", transactionManager="", value=""), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value={org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.data.jpa.repository.config.EnableJpaAuditing(auditorAwareRef="", setDates=true, modifyOnCreate=true, dateTimeProviderRef=""), @org.springframework.aot.hint.annotation.Reflective(processors={org.springframework.aot.hint.annotation.SimpleReflectiveProcessor.class}, value={org.springframework.aot.hint.annotation.SimpleReflectiveProcessor.class}), @org.apiguardian.api.API(consumers={"*"}, since="5.0", status=STABLE), @org.springframework.test.context.ActiveProfiles(inheritProfiles=true, profiles={"test"}, resolver=org.springframework.test.context.ActiveProfilesResolver.class, value={"test"}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(connection=NONE, replace=NON_TEST), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(classes={}, exclude={}, value={}), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a4927d6, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@97e93f1, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@7dfd3c81, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@abf4a032], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 00:05:56.476 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.repository.ChannelRepositoryTest@5484117b]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [MergedContextConfiguration@7ceb4478 testClass = com.sprint.mission.discodeit.repository.ChannelRepositoryTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2b30a42c, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@43df23d3, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@34be3d80, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@ad2fb15d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@3ad83a66, [ImportsContextCustomizer@7fdab70c key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, excludeAutoConfiguration={}, excludeFilters={}, includeFilters={}, properties={}, showSql=true, useDefaultFilters=true), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(skip=NO, value="spring.test.database"), @org.springframework.context.annotation.Import(value={org.springframework.data.jpa.repository.config.JpaAuditingRegistrar.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.transaction.annotation.Transactional(isolation=DEFAULT, label={}, noRollbackFor={}, noRollbackForClassName={}, propagation=REQUIRED, readOnly=false, rollbackFor={}, rollbackForClassName={}, timeout=-1, timeoutString="", transactionManager="", value=""), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value={org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.data.jpa.repository.config.EnableJpaAuditing(auditorAwareRef="", setDates=true, modifyOnCreate=true, dateTimeProviderRef=""), @org.springframework.aot.hint.annotation.Reflective(processors={org.springframework.aot.hint.annotation.SimpleReflectiveProcessor.class}, value={org.springframework.aot.hint.annotation.SimpleReflectiveProcessor.class}), @org.apiguardian.api.API(consumers={"*"}, since="5.0", status=STABLE), @org.springframework.test.context.ActiveProfiles(inheritProfiles=true, profiles={"test"}, resolver=org.springframework.test.context.ActiveProfilesResolver.class, value={"test"}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(connection=NONE, replace=NON_TEST), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(classes={}, exclude={}, value={}), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a4927d6, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@97e93f1, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@7dfd3c81, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@abf4a032], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 00:05:56.484 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.repository.ChannelRepositoryTest@7efb53af]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [MergedContextConfiguration@7ceb4478 testClass = com.sprint.mission.discodeit.repository.ChannelRepositoryTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2b30a42c, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@43df23d3, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@34be3d80, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@ad2fb15d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@3ad83a66, [ImportsContextCustomizer@7fdab70c key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, excludeAutoConfiguration={}, excludeFilters={}, includeFilters={}, properties={}, showSql=true, useDefaultFilters=true), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(skip=NO, value="spring.test.database"), @org.springframework.context.annotation.Import(value={org.springframework.data.jpa.repository.config.JpaAuditingRegistrar.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.transaction.annotation.Transactional(isolation=DEFAULT, label={}, noRollbackFor={}, noRollbackForClassName={}, propagation=REQUIRED, readOnly=false, rollbackFor={}, rollbackForClassName={}, timeout=-1, timeoutString="", transactionManager="", value=""), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value={org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.data.jpa.repository.config.EnableJpaAuditing(auditorAwareRef="", setDates=true, modifyOnCreate=true, dateTimeProviderRef=""), @org.springframework.aot.hint.annotation.Reflective(processors={org.springframework.aot.hint.annotation.SimpleReflectiveProcessor.class}, value={org.springframework.aot.hint.annotation.SimpleReflectiveProcessor.class}), @org.apiguardian.api.API(consumers={"*"}, since="5.0", status=STABLE), @org.springframework.test.context.ActiveProfiles(inheritProfiles=true, profiles={"test"}, resolver=org.springframework.test.context.ActiveProfilesResolver.class, value={"test"}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(connection=NONE, replace=NON_TEST), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(classes={}, exclude={}, value={}), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a4927d6, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@97e93f1, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@7dfd3c81, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@abf4a032], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 00:05:56.490 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.repository.ChannelRepositoryTest@3dfa819]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [MergedContextConfiguration@7ceb4478 testClass = com.sprint.mission.discodeit.repository.ChannelRepositoryTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2b30a42c, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@43df23d3, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@34be3d80, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@ad2fb15d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@3ad83a66, [ImportsContextCustomizer@7fdab70c key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, excludeAutoConfiguration={}, excludeFilters={}, includeFilters={}, properties={}, showSql=true, useDefaultFilters=true), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(skip=NO, value="spring.test.database"), @org.springframework.context.annotation.Import(value={org.springframework.data.jpa.repository.config.JpaAuditingRegistrar.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.transaction.annotation.Transactional(isolation=DEFAULT, label={}, noRollbackFor={}, noRollbackForClassName={}, propagation=REQUIRED, readOnly=false, rollbackFor={}, rollbackForClassName={}, timeout=-1, timeoutString="", transactionManager="", value=""), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value={org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.data.jpa.repository.config.EnableJpaAuditing(auditorAwareRef="", setDates=true, modifyOnCreate=true, dateTimeProviderRef=""), @org.springframework.aot.hint.annotation.Reflective(processors={org.springframework.aot.hint.annotation.SimpleReflectiveProcessor.class}, value={org.springframework.aot.hint.annotation.SimpleReflectiveProcessor.class}), @org.apiguardian.api.API(consumers={"*"}, since="5.0", status=STABLE), @org.springframework.test.context.ActiveProfiles(inheritProfiles=true, profiles={"test"}, resolver=org.springframework.test.context.ActiveProfilesResolver.class, value={"test"}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(connection=NONE, replace=NON_TEST), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(classes={}, exclude={}, value={}), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a4927d6, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@97e93f1, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@7dfd3c81, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@abf4a032], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 00:05:56.497 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.repository.ChannelRepositoryTest@68ab0936]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [MergedContextConfiguration@7ceb4478 testClass = com.sprint.mission.discodeit.repository.ChannelRepositoryTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2b30a42c, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@43df23d3, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@34be3d80, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@ad2fb15d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@3ad83a66, [ImportsContextCustomizer@7fdab70c key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, excludeAutoConfiguration={}, excludeFilters={}, includeFilters={}, properties={}, showSql=true, useDefaultFilters=true), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(skip=NO, value="spring.test.database"), @org.springframework.context.annotation.Import(value={org.springframework.data.jpa.repository.config.JpaAuditingRegistrar.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.transaction.annotation.Transactional(isolation=DEFAULT, label={}, noRollbackFor={}, noRollbackForClassName={}, propagation=REQUIRED, readOnly=false, rollbackFor={}, rollbackForClassName={}, timeout=-1, timeoutString="", transactionManager="", value=""), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value={org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.data.jpa.repository.config.EnableJpaAuditing(auditorAwareRef="", setDates=true, modifyOnCreate=true, dateTimeProviderRef=""), @org.springframework.aot.hint.annotation.Reflective(processors={org.springframework.aot.hint.annotation.SimpleReflectiveProcessor.class}, value={org.springframework.aot.hint.annotation.SimpleReflectiveProcessor.class}), @org.apiguardian.api.API(consumers={"*"}, since="5.0", status=STABLE), @org.springframework.test.context.ActiveProfiles(inheritProfiles=true, profiles={"test"}, resolver=org.springframework.test.context.ActiveProfilesResolver.class, value={"test"}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(connection=NONE, replace=NON_TEST), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(classes={}, exclude={}, value={}), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a4927d6, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@97e93f1, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@7dfd3c81, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@abf4a032], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 00:05:56.501 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.repository.ChannelRepositoryTest@42b84286]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [MergedContextConfiguration@7ceb4478 testClass = com.sprint.mission.discodeit.repository.ChannelRepositoryTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2b30a42c, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@43df23d3, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@34be3d80, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@ad2fb15d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@3ad83a66, [ImportsContextCustomizer@7fdab70c key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, excludeAutoConfiguration={}, excludeFilters={}, includeFilters={}, properties={}, showSql=true, useDefaultFilters=true), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(skip=NO, value="spring.test.database"), @org.springframework.context.annotation.Import(value={org.springframework.data.jpa.repository.config.JpaAuditingRegistrar.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.transaction.annotation.Transactional(isolation=DEFAULT, label={}, noRollbackFor={}, noRollbackForClassName={}, propagation=REQUIRED, readOnly=false, rollbackFor={}, rollbackForClassName={}, timeout=-1, timeoutString="", transactionManager="", value=""), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value={org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.data.jpa.repository.config.EnableJpaAuditing(auditorAwareRef="", setDates=true, modifyOnCreate=true, dateTimeProviderRef=""), @org.springframework.aot.hint.annotation.Reflective(processors={org.springframework.aot.hint.annotation.SimpleReflectiveProcessor.class}, value={org.springframework.aot.hint.annotation.SimpleReflectiveProcessor.class}), @org.apiguardian.api.API(consumers={"*"}, since="5.0", status=STABLE), @org.springframework.test.context.ActiveProfiles(inheritProfiles=true, profiles={"test"}, resolver=org.springframework.test.context.ActiveProfilesResolver.class, value={"test"}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(connection=NONE, replace=NON_TEST), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(classes={}, exclude={}, value={}), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a4927d6, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@97e93f1, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@7dfd3c81, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@abf4a032], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 00:05:56.506 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.repository.ChannelRepositoryTest@74ecacc3]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [MergedContextConfiguration@7ceb4478 testClass = com.sprint.mission.discodeit.repository.ChannelRepositoryTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2b30a42c, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@43df23d3, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@34be3d80, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@ad2fb15d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@3ad83a66, [ImportsContextCustomizer@7fdab70c key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(bootstrapMode=DEFAULT, excludeAutoConfiguration={}, excludeFilters={}, includeFilters={}, properties={}, showSql=true, useDefaultFilters=true), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(skip=NO, value="spring.test.database"), @org.springframework.context.annotation.Import(value={org.springframework.data.jpa.repository.config.JpaAuditingRegistrar.class}), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.transaction.annotation.Transactional(isolation=DEFAULT, label={}, noRollbackFor={}, noRollbackForClassName={}, propagation=REQUIRED, readOnly=false, rollbackFor={}, rollbackForClassName={}, timeout=-1, timeoutString="", transactionManager="", value=""), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value={org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter.class}), @org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper.class), @org.springframework.data.jpa.repository.config.EnableJpaAuditing(auditorAwareRef="", setDates=true, modifyOnCreate=true, dateTimeProviderRef=""), @org.springframework.aot.hint.annotation.Reflective(processors={org.springframework.aot.hint.annotation.SimpleReflectiveProcessor.class}, value={org.springframework.aot.hint.annotation.SimpleReflectiveProcessor.class}), @org.apiguardian.api.API(consumers={"*"}, since="5.0", status=STABLE), @org.springframework.test.context.ActiveProfiles(inheritProfiles=true, profiles={"test"}, resolver=org.springframework.test.context.ActiveProfilesResolver.class, value={"test"}), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(connection=NONE, replace=NON_TEST), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(classes={}, exclude={}, value={}), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1a4927d6, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@97e93f1, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@7dfd3c81, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@abf4a032], contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 00:08:33.444 [main] INFO  c.s.m.d.r.ChannelRepositoryTest      - Starting ChannelRepositoryTest using Java 17.0.14 with PID 15576 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 00:08:33.446 [main] DEBUG c.s.m.d.r.ChannelRepositoryTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 00:08:33.446 [main] INFO  c.s.m.d.r.ChannelRepositoryTest      - The following 1 profile is active: "test"
25-05-14 00:08:33.874 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:08:33.874 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:08:33.875 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:08:33.920 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 00:08:33.989 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 62 ms. Found 6 JPA repository interfaces.
25-05-14 00:08:34.038 [main] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
25-05-14 00:08:34.224 [main] INFO  o.s.j.d.e.EmbeddedDatabaseFactory    - Starting embedded database: url='jdbc:h2:mem:5529b444-7698-44b9-bd71-d1ec4901a03d;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-05-14 00:08:34.581 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 00:08:34.650 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 00:08:34.703 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 00:08:35.025 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 00:08:35.068 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 00:08:35.084 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@79d4ff58']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 00:08:35.908 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 00:08:35.919 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 00:08:35.921 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 00:08:35.923 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 00:08:35.924 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 00:08:35.925 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 00:08:35.925 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 00:08:35.926 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 00:08:35.930 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 00:08:35.932 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 00:08:35.932 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 00:08:35.934 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 00:08:35.935 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 00:08:35.936 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 00:08:35.937 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 00:08:35.938 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 00:08:35.939 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 00:08:35.940 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 00:08:35.941 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 00:08:35.941 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 00:08:35.942 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 00:08:35.943 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 00:08:35.944 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 00:08:35.949 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 00:08:36.423 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 00:08:36.889 [main] INFO  c.s.m.d.r.ChannelRepositoryTest      - Started ChannelRepositoryTest in 4.028 seconds (process running for 5.212)
25-05-14 00:08:36.890 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 00:08:36.891 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 00:08:36.892 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 00:08:36.893 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 00:08:36.895 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 00:08:36.895 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 00:08:36.897 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 00:08:36.897 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 00:08:42.137 [main] INFO  c.s.m.d.r.ChannelRepositoryTest      - Starting ChannelRepositoryTest using Java 17.0.14 with PID 17828 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 00:08:42.138 [main] DEBUG c.s.m.d.r.ChannelRepositoryTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 00:08:42.139 [main] INFO  c.s.m.d.r.ChannelRepositoryTest      - The following 1 profile is active: "test"
25-05-14 00:08:42.549 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:08:42.550 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:08:42.550 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:08:42.601 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 00:08:42.687 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 75 ms. Found 6 JPA repository interfaces.
25-05-14 00:08:42.760 [main] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
25-05-14 00:08:42.899 [main] INFO  o.s.j.d.e.EmbeddedDatabaseFactory    - Starting embedded database: url='jdbc:h2:mem:17d780f6-8a91-42f6-af00-ae608768bf8d;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-05-14 00:08:43.271 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 00:08:43.336 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 00:08:43.375 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 00:08:43.717 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 00:08:43.778 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 00:08:43.800 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@3bab95ca']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 00:08:44.739 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 00:08:44.755 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 00:08:44.758 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 00:08:44.760 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 00:08:44.760 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 00:08:44.761 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 00:08:44.762 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 00:08:44.763 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 00:08:44.768 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 00:08:44.770 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 00:08:44.772 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 00:08:44.772 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 00:08:44.774 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 00:08:44.774 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 00:08:44.775 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 00:08:44.776 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 00:08:44.777 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 00:08:44.778 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 00:08:44.779 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 00:08:44.780 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 00:08:44.781 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 00:08:44.782 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 00:08:44.784 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 00:08:44.788 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 00:08:45.224 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 00:08:45.578 [main] INFO  c.s.m.d.r.ChannelRepositoryTest      - Started ChannelRepositoryTest in 3.945 seconds (process running for 5.07)
25-05-14 00:08:46.044 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:08:46.065 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.066 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.066 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.067 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.068 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.068 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.069 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.069 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:08:46.164 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id in (?) 
        and c1_0.type=?
25-05-14 00:08:46.249 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:08:46.251 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.251 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.252 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.252 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.253 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.254 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.254 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.255 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:08:46.258 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 00:08:46.268 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:08:46.270 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.271 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.272 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.272 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.273 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.275 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.276 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.277 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:08:46.292 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    order by
        c1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
25-05-14 00:08:46.302 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(c1_0.id) 
    from
        channels c1_0
25-05-14 00:08:46.321 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:08:46.323 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.324 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.325 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.325 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.325 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.325 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.326 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.326 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:08:46.332 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        read_statuses rs1_0 
    join
        channels c1_0 
            on c1_0.id=rs1_0.channel_id 
    where
        rs1_0.user_id=?
25-05-14 00:08:46.345 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:08:46.346 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.348 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.348 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.349 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.349 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.349 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.349 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.350 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:08:46.352 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id in (?) 
        and c1_0.type=?
25-05-14 00:08:46.362 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:08:46.364 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.366 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.367 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.368 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.369 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.369 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.370 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.370 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:08:46.373 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        read_statuses rs1_0 
    join
        channels c1_0 
            on c1_0.id=rs1_0.channel_id 
    where
        rs1_0.user_id=?
25-05-14 00:08:46.385 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:08:46.387 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.388 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.388 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.389 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.389 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.390 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.390 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.390 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:08:46.392 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 00:08:46.404 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:08:46.405 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.406 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.407 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.408 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.408 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.409 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.409 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:08:46.409 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:08:46.413 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.type=?
25-05-14 00:08:46.416 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.type=?
25-05-14 00:08:46.426 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 00:08:46.427 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 00:08:46.428 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 00:08:46.429 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 00:08:46.429 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 00:08:46.430 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 00:08:46.430 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 00:08:46.430 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 00:09:56.260 [main] INFO  c.s.m.d.r.ChannelRepositoryTest      - Starting ChannelRepositoryTest using Java 17.0.14 with PID 25928 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 00:09:56.261 [main] DEBUG c.s.m.d.r.ChannelRepositoryTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 00:09:56.262 [main] INFO  c.s.m.d.r.ChannelRepositoryTest      - The following 1 profile is active: "test"
25-05-14 00:09:56.678 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:09:56.678 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:09:56.679 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:09:56.756 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 00:09:56.856 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 87 ms. Found 6 JPA repository interfaces.
25-05-14 00:09:56.929 [main] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
25-05-14 00:09:57.081 [main] INFO  o.s.j.d.e.EmbeddedDatabaseFactory    - Starting embedded database: url='jdbc:h2:mem:2a71c323-dc55-40f9-a8c5-88cc15138a60;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-05-14 00:09:57.406 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 00:09:57.462 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 00:09:57.494 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 00:09:57.796 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 00:09:57.842 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 00:09:57.867 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@297bd171']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 00:09:58.774 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 00:09:58.787 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 00:09:58.789 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 00:09:58.790 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 00:09:58.790 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 00:09:58.791 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 00:09:58.791 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 00:09:58.792 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 00:09:58.797 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 00:09:58.799 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 00:09:58.800 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 00:09:58.801 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 00:09:58.802 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 00:09:58.802 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 00:09:58.803 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 00:09:58.805 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 00:09:58.806 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 00:09:58.807 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 00:09:58.809 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 00:09:58.810 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 00:09:58.811 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 00:09:58.812 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 00:09:58.813 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 00:09:58.817 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 00:09:59.280 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 00:09:59.628 [main] INFO  c.s.m.d.r.ChannelRepositoryTest      - Started ChannelRepositoryTest in 3.89 seconds (process running for 5.019)
25-05-14 00:10:00.148 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:10:00.170 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.171 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.171 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.171 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.172 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.172 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.172 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.173 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:00.226 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id in (?) 
        and c1_0.type=?
25-05-14 00:10:00.306 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:10:00.307 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.308 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.309 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.309 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.310 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.310 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.311 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.311 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:00.316 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 00:10:00.329 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:10:00.331 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.331 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.332 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.332 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.333 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.333 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.334 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.334 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:00.350 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    order by
        c1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
25-05-14 00:10:00.361 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(c1_0.id) 
    from
        channels c1_0
25-05-14 00:10:00.383 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:10:00.386 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.387 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.388 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.389 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.390 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.391 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.392 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.393 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:00.400 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        read_statuses rs1_0 
    join
        channels c1_0 
            on c1_0.id=rs1_0.channel_id 
    where
        rs1_0.user_id=?
25-05-14 00:10:00.412 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:10:00.414 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.415 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.416 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.417 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.417 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.418 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.419 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.420 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:00.422 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id in (?) 
        and c1_0.type=?
25-05-14 00:10:00.433 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:10:00.435 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.437 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.438 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.438 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.438 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.439 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.439 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.439 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:00.442 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        read_statuses rs1_0 
    join
        channels c1_0 
            on c1_0.id=rs1_0.channel_id 
    where
        rs1_0.user_id=?
25-05-14 00:10:00.453 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:10:00.455 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.456 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.457 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.458 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.459 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.459 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.460 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.460 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:00.463 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 00:10:00.470 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:10:00.471 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.471 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.471 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.472 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.472 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.472 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.472 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:00.472 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:00.475 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.type=?
25-05-14 00:10:00.477 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.type=?
25-05-14 00:10:00.484 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 00:10:00.485 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 00:10:00.486 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 00:10:00.486 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 00:10:00.486 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 00:10:00.487 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 00:10:00.487 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 00:10:00.488 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 00:10:09.482 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - Starting MessageRepositoryTest using Java 17.0.14 with PID 28240 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 00:10:09.483 [main] DEBUG c.s.m.d.r.MessageRepositoryTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 00:10:09.483 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - The following 1 profile is active: "test"
25-05-14 00:10:09.939 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:10:09.939 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:10:09.939 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:10:10.022 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 00:10:10.101 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 72 ms. Found 6 JPA repository interfaces.
25-05-14 00:10:10.159 [main] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
25-05-14 00:10:10.293 [main] INFO  o.s.j.d.e.EmbeddedDatabaseFactory    - Starting embedded database: url='jdbc:h2:mem:db3b3edf-8b01-4475-9002-743b1e9f2645;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-05-14 00:10:10.623 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 00:10:10.682 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 00:10:10.717 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 00:10:11.014 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 00:10:11.060 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 00:10:11.081 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@2e8b24a1']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 00:10:11.962 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 00:10:11.975 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 00:10:11.977 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 00:10:11.978 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 00:10:11.978 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 00:10:11.979 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 00:10:11.979 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 00:10:11.980 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 00:10:11.984 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 00:10:11.986 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 00:10:11.987 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 00:10:11.988 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 00:10:11.989 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 00:10:11.990 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 00:10:11.990 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 00:10:11.992 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 00:10:11.993 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 00:10:11.994 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 00:10:11.995 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 00:10:11.996 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 00:10:11.997 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 00:10:11.998 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 00:10:11.999 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 00:10:12.004 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 00:10:12.389 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 00:10:12.814 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - Started MessageRepositoryTest in 3.894 seconds (process running for 5.083)
25-05-14 00:10:13.357 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.380 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:13.381 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.384 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.385 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.457 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 00:10:13.540 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.542 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:13.542 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.543 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.543 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.546 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 00:10:13.569 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.571 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:13.572 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.574 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.575 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.579 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.author_id=?
25-05-14 00:10:13.600 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.601 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:13.601 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.602 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.602 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.604 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.author_id=?
25-05-14 00:10:13.621 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.623 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:13.625 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.626 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.627 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.640 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
        and m1_0.created_at<? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 00:10:13.653 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.655 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:13.656 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.657 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.657 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.660 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 00:10:13.673 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.675 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:10:13.677 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.678 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.678 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:10:13.684 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=?
25-05-14 00:10:13.690 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        messages 
    where
        id=?
25-05-14 00:10:13.694 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        messages 
    where
        id=?
25-05-14 00:10:13.695 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        messages 
    where
        id=?
25-05-14 00:10:13.697 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 00:10:13.710 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 00:10:13.711 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 00:10:13.712 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 00:10:13.712 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 00:10:13.713 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 00:10:13.715 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 00:10:13.716 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 00:10:13.716 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 00:11:51.161 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - Starting MessageRepositoryTest using Java 17.0.14 with PID 26276 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 00:11:51.163 [main] DEBUG c.s.m.d.r.MessageRepositoryTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 00:11:51.164 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - The following 1 profile is active: "test"
25-05-14 00:11:51.542 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:11:51.542 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:11:51.543 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:11:51.603 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 00:11:51.684 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 70 ms. Found 6 JPA repository interfaces.
25-05-14 00:11:51.744 [main] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
25-05-14 00:11:51.909 [main] INFO  o.s.j.d.e.EmbeddedDatabaseFactory    - Starting embedded database: url='jdbc:h2:mem:ef35d0fa-deec-4801-86c3-faca61aac81e;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-05-14 00:11:52.275 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 00:11:52.349 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 00:11:52.400 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 00:11:52.722 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 00:11:52.767 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 00:11:52.785 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@38d42ab7']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 00:11:53.752 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 00:11:53.766 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 00:11:53.768 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 00:11:53.769 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 00:11:53.769 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 00:11:53.769 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 00:11:53.770 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 00:11:53.771 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 00:11:53.777 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 00:11:53.780 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 00:11:53.782 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 00:11:53.783 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 00:11:53.784 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 00:11:53.785 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 00:11:53.786 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 00:11:53.787 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 00:11:53.789 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 00:11:53.789 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 00:11:53.791 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 00:11:53.793 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 00:11:53.794 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 00:11:53.796 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 00:11:53.797 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 00:11:53.801 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 00:11:54.299 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 00:11:54.742 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - Started MessageRepositoryTest in 4.126 seconds (process running for 5.371)
25-05-14 00:11:55.264 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.281 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:11:55.281 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.308 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.323 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.384 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 00:11:55.477 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.479 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:11:55.479 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.494 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.521 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.525 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 00:11:55.540 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.543 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:11:55.544 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.567 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.582 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.585 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.author_id=?
25-05-14 00:11:55.606 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.609 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:11:55.610 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.627 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.643 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.645 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.author_id=?
25-05-14 00:11:55.655 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.657 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:11:55.659 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.672 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.688 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.697 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
        and m1_0.created_at<? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 00:11:55.709 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.710 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:11:55.710 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.734 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.749 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.752 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 00:11:55.760 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.761 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:11:55.762 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.779 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.794 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 00:11:55.801 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=?
25-05-14 00:11:55.812 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        messages 
    where
        id=?
25-05-14 00:11:55.816 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        messages 
    where
        id=?
25-05-14 00:11:55.817 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        messages 
    where
        id=?
25-05-14 00:11:55.819 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 00:11:55.830 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 00:11:55.831 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 00:11:55.832 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 00:11:55.833 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 00:11:55.834 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 00:11:55.835 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 00:11:55.836 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 00:11:55.837 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 00:12:04.071 [main] INFO  c.s.m.d.r.UserRepositoryTest         - Starting UserRepositoryTest using Java 17.0.14 with PID 4660 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 00:12:04.072 [main] DEBUG c.s.m.d.r.UserRepositoryTest         - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 00:12:04.073 [main] INFO  c.s.m.d.r.UserRepositoryTest         - The following 1 profile is active: "test"
25-05-14 00:12:04.474 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:12:04.474 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:12:04.474 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:12:04.528 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 00:12:04.604 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 68 ms. Found 6 JPA repository interfaces.
25-05-14 00:12:04.652 [main] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
25-05-14 00:12:04.854 [main] INFO  o.s.j.d.e.EmbeddedDatabaseFactory    - Starting embedded database: url='jdbc:h2:mem:2588ab45-d61d-4113-9761-72e02ff62b6a;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-05-14 00:12:05.200 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 00:12:05.268 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 00:12:05.317 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 00:12:05.637 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 00:12:05.674 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 00:12:05.699 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@6451a288']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 00:12:06.713 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 00:12:06.724 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 00:12:06.727 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 00:12:06.728 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 00:12:06.729 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 00:12:06.729 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 00:12:06.730 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 00:12:06.731 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 00:12:06.735 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 00:12:06.737 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 00:12:06.739 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 00:12:06.739 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 00:12:06.740 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 00:12:06.741 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 00:12:06.741 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 00:12:06.743 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 00:12:06.743 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 00:12:06.744 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 00:12:06.745 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 00:12:06.746 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 00:12:06.746 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 00:12:06.747 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 00:12:06.747 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 00:12:06.753 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 00:12:07.127 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 00:12:07.606 [main] INFO  c.s.m.d.r.UserRepositoryTest         - Started UserRepositoryTest in 4.063 seconds (process running for 5.262)
25-05-14 00:12:08.171 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 00:12:08.335 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:12:08.355 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
25-05-14 00:12:08.375 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:12:08.379 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 00:12:08.392 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 00:12:08.400 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.username=?
25-05-14 00:12:08.407 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:12:08.410 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 00:12:08.422 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 00:12:08.423 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 00:12:08.425 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 00:12:08.426 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 00:12:08.426 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 00:12:08.429 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 00:12:08.430 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 00:12:08.431 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 00:12:16.625 [main] INFO  c.s.m.d.c.UserControllerTest         - Starting UserControllerTest using Java 17.0.14 with PID 32232 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 00:12:16.627 [main] DEBUG c.s.m.d.c.UserControllerTest         - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 00:12:16.628 [main] INFO  c.s.m.d.c.UserControllerTest         - The following 1 profile is active: "dev"
25-05-14 00:12:18.265 [main] WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaAuditingHandler': Cannot resolve reference to bean 'jpaMappingContext' while setting constructor argument
25-05-14 00:12:18.273 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
25-05-14 00:12:18.295 [main] ERROR o.s.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaAuditingHandler': Cannot resolve reference to bean 'jpaMappingContext' while setting constructor argument
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1351)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.injectFields(BeanOverrideTestExecutionListener.java:87)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.prepareTestInstance(BeanOverrideTestExecutionListener.java:58)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaMappingContext': JPA metamodel must not be empty
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 102 common frames omitted
Caused by: java.lang.IllegalArgumentException: JPA metamodel must not be empty
	at org.springframework.util.Assert.notEmpty(Assert.java:398)
	at org.springframework.data.jpa.mapping.JpaMetamodelMappingContext.<init>(JpaMetamodelMappingContext.java:57)
	at org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean.createInstance(JpaMetamodelMappingContextFactoryBean.java:68)
	at org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean.createInstance(JpaMetamodelMappingContextFactoryBean.java:1)
	at org.springframework.beans.factory.config.AbstractFactoryBean.afterPropertiesSet(AbstractFactoryBean.java:142)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	... 109 common frames omitted
25-05-14 00:12:18.304 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.UserControllerTest@21be14c2]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@77ccded4 testClass = com.sprint.mission.discodeit.controller.UserControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@15888343, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@6e2829c7, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6e7d0b23, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17578692, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7d322cad, [ImportsContextCustomizer@64c8fcfb key = [org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@35a3d49f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@478db956, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@791d1f8b, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@630aac2f, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@8deb9255], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.injectFields(BeanOverrideTestExecutionListener.java:87)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.prepareTestInstance(BeanOverrideTestExecutionListener.java:58)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaAuditingHandler': Cannot resolve reference to bean 'jpaMappingContext' while setting constructor argument
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1351)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 74 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaMappingContext': JPA metamodel must not be empty
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 102 common frames omitted
Caused by: java.lang.IllegalArgumentException: JPA metamodel must not be empty
	at org.springframework.util.Assert.notEmpty(Assert.java:398)
	at org.springframework.data.jpa.mapping.JpaMetamodelMappingContext.<init>(JpaMetamodelMappingContext.java:57)
	at org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean.createInstance(JpaMetamodelMappingContextFactoryBean.java:68)
	at org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean.createInstance(JpaMetamodelMappingContextFactoryBean.java:1)
	at org.springframework.beans.factory.config.AbstractFactoryBean.afterPropertiesSet(AbstractFactoryBean.java:142)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	... 109 common frames omitted
25-05-14 00:12:18.324 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.UserControllerTest@6164e137]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@77ccded4 testClass = com.sprint.mission.discodeit.controller.UserControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@15888343, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@6e2829c7, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6e7d0b23, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17578692, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7d322cad, [ImportsContextCustomizer@64c8fcfb key = [org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@35a3d49f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@478db956, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@791d1f8b, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@630aac2f, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@8deb9255], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.injectFields(BeanOverrideTestExecutionListener.java:87)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.prepareTestInstance(BeanOverrideTestExecutionListener.java:58)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 00:12:18.329 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.UserControllerTest@3d8d970e]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@77ccded4 testClass = com.sprint.mission.discodeit.controller.UserControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@15888343, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@6e2829c7, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6e7d0b23, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17578692, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7d322cad, [ImportsContextCustomizer@64c8fcfb key = [org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@35a3d49f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@478db956, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@791d1f8b, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@630aac2f, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@8deb9255], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.injectFields(BeanOverrideTestExecutionListener.java:87)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.prepareTestInstance(BeanOverrideTestExecutionListener.java:58)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 00:12:18.334 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.UserControllerTest@6987a133]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@77ccded4 testClass = com.sprint.mission.discodeit.controller.UserControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@15888343, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@6e2829c7, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6e7d0b23, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17578692, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7d322cad, [ImportsContextCustomizer@64c8fcfb key = [org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@35a3d49f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@478db956, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@791d1f8b, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@630aac2f, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@8deb9255], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.injectFields(BeanOverrideTestExecutionListener.java:87)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.prepareTestInstance(BeanOverrideTestExecutionListener.java:58)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 00:12:18.339 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.UserControllerTest@1934339]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@77ccded4 testClass = com.sprint.mission.discodeit.controller.UserControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@15888343, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@6e2829c7, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6e7d0b23, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17578692, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7d322cad, [ImportsContextCustomizer@64c8fcfb key = [org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@35a3d49f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@478db956, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@791d1f8b, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@630aac2f, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@8deb9255], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.injectFields(BeanOverrideTestExecutionListener.java:87)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.prepareTestInstance(BeanOverrideTestExecutionListener.java:58)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 00:12:18.343 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.UserControllerTest@69ffdaa8]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@77ccded4 testClass = com.sprint.mission.discodeit.controller.UserControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@15888343, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@6e2829c7, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@6e7d0b23, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@17578692, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7d322cad, [ImportsContextCustomizer@64c8fcfb key = [org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@35a3d49f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@478db956, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@791d1f8b, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@630aac2f, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@8deb9255], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.injectFields(BeanOverrideTestExecutionListener.java:87)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.prepareTestInstance(BeanOverrideTestExecutionListener.java:58)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 00:12:35.398 [main] INFO  c.s.m.d.c.UserControllerTest         - Starting UserControllerTest using Java 17.0.14 with PID 7224 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 00:12:35.400 [main] DEBUG c.s.m.d.c.UserControllerTest         - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 00:12:35.400 [main] INFO  c.s.m.d.c.UserControllerTest         - The following 1 profile is active: "dev"
25-05-14 00:12:36.863 [main] WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaAuditingHandler': Cannot resolve reference to bean 'jpaMappingContext' while setting constructor argument
25-05-14 00:12:36.870 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
25-05-14 00:12:36.892 [main] ERROR o.s.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaAuditingHandler': Cannot resolve reference to bean 'jpaMappingContext' while setting constructor argument
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1351)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.injectFields(BeanOverrideTestExecutionListener.java:87)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.prepareTestInstance(BeanOverrideTestExecutionListener.java:58)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaMappingContext': JPA metamodel must not be empty
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 102 common frames omitted
Caused by: java.lang.IllegalArgumentException: JPA metamodel must not be empty
	at org.springframework.util.Assert.notEmpty(Assert.java:398)
	at org.springframework.data.jpa.mapping.JpaMetamodelMappingContext.<init>(JpaMetamodelMappingContext.java:57)
	at org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean.createInstance(JpaMetamodelMappingContextFactoryBean.java:68)
	at org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean.createInstance(JpaMetamodelMappingContextFactoryBean.java:1)
	at org.springframework.beans.factory.config.AbstractFactoryBean.afterPropertiesSet(AbstractFactoryBean.java:142)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	... 109 common frames omitted
25-05-14 00:12:36.898 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.UserControllerTest@7afe0e67]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@83b0d0f testClass = com.sprint.mission.discodeit.controller.UserControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@7e990ed7, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4d15107f, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@e7c44cce, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e52980, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@3bcd05cb, [ImportsContextCustomizer@2bb717d7 key = [org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@456d6c1e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@452e19ca, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@26adfd2d, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@895b4343, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@836688ab], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.injectFields(BeanOverrideTestExecutionListener.java:87)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.prepareTestInstance(BeanOverrideTestExecutionListener.java:58)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaAuditingHandler': Cannot resolve reference to bean 'jpaMappingContext' while setting constructor argument
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:377)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:691)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:513)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1351)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 74 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaMappingContext': JPA metamodel must not be empty
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	... 102 common frames omitted
Caused by: java.lang.IllegalArgumentException: JPA metamodel must not be empty
	at org.springframework.util.Assert.notEmpty(Assert.java:398)
	at org.springframework.data.jpa.mapping.JpaMetamodelMappingContext.<init>(JpaMetamodelMappingContext.java:57)
	at org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean.createInstance(JpaMetamodelMappingContextFactoryBean.java:68)
	at org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean.createInstance(JpaMetamodelMappingContextFactoryBean.java:1)
	at org.springframework.beans.factory.config.AbstractFactoryBean.afterPropertiesSet(AbstractFactoryBean.java:142)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	... 109 common frames omitted
25-05-14 00:12:36.924 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.UserControllerTest@6987a133]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@83b0d0f testClass = com.sprint.mission.discodeit.controller.UserControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@7e990ed7, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4d15107f, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@e7c44cce, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e52980, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@3bcd05cb, [ImportsContextCustomizer@2bb717d7 key = [org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@456d6c1e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@452e19ca, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@26adfd2d, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@895b4343, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@836688ab], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.injectFields(BeanOverrideTestExecutionListener.java:87)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.prepareTestInstance(BeanOverrideTestExecutionListener.java:58)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 00:12:36.929 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.UserControllerTest@1934339]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@83b0d0f testClass = com.sprint.mission.discodeit.controller.UserControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@7e990ed7, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4d15107f, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@e7c44cce, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e52980, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@3bcd05cb, [ImportsContextCustomizer@2bb717d7 key = [org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@456d6c1e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@452e19ca, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@26adfd2d, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@895b4343, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@836688ab], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.injectFields(BeanOverrideTestExecutionListener.java:87)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.prepareTestInstance(BeanOverrideTestExecutionListener.java:58)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 00:12:36.934 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.UserControllerTest@1eab8437]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@83b0d0f testClass = com.sprint.mission.discodeit.controller.UserControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@7e990ed7, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4d15107f, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@e7c44cce, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e52980, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@3bcd05cb, [ImportsContextCustomizer@2bb717d7 key = [org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@456d6c1e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@452e19ca, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@26adfd2d, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@895b4343, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@836688ab], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.injectFields(BeanOverrideTestExecutionListener.java:87)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.prepareTestInstance(BeanOverrideTestExecutionListener.java:58)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 00:12:36.938 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.UserControllerTest@69ffdaa8]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@83b0d0f testClass = com.sprint.mission.discodeit.controller.UserControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@7e990ed7, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4d15107f, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@e7c44cce, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e52980, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@3bcd05cb, [ImportsContextCustomizer@2bb717d7 key = [org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@456d6c1e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@452e19ca, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@26adfd2d, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@895b4343, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@836688ab], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.injectFields(BeanOverrideTestExecutionListener.java:87)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.prepareTestInstance(BeanOverrideTestExecutionListener.java:58)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 00:12:36.944 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.UserControllerTest@7babed9e]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@83b0d0f testClass = com.sprint.mission.discodeit.controller.UserControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@7e990ed7, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4d15107f, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@e7c44cce, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e52980, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@3bcd05cb, [ImportsContextCustomizer@2bb717d7 key = [org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration, org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration, org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration, org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration, org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration, org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.thymeleaf.ThymeleafAutoConfiguration, org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration, org.springframework.boot.autoconfigure.jsonb.JsonbAutoConfiguration, org.springframework.boot.autoconfigure.freemarker.FreeMarkerAutoConfiguration, org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAutoConfiguration, org.springframework.boot.autoconfigure.mustache.MustacheAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@456d6c1e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@452e19ca, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@26adfd2d, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@895b4343, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@836688ab], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.injectFields(BeanOverrideTestExecutionListener.java:87)
	at org.springframework.test.context.bean.override.BeanOverrideTestExecutionListener.prepareTestInstance(BeanOverrideTestExecutionListener.java:58)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 00:16:15.790 [main] INFO  c.s.m.d.c.UserControllerTest         - Starting UserControllerTest using Java 17.0.14 with PID 31536 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 00:16:15.792 [main] DEBUG c.s.m.d.c.UserControllerTest         - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 00:16:15.793 [main] INFO  c.s.m.d.c.UserControllerTest         - The following 1 profile is active: "dev"
25-05-14 00:16:17.313 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 00:16:17.701 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 00:16:17.701 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 00:16:17.702 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 1 ms
25-05-14 00:16:17.732 [main] INFO  c.s.m.d.c.UserControllerTest         - Started UserControllerTest in 2.402 seconds (process running for 3.528)
25-05-14 00:52:21.040 [main] INFO  c.s.m.d.c.UserControllerTest         - Starting UserControllerTest using Java 17.0.14 with PID 19932 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 00:52:21.042 [main] DEBUG c.s.m.d.c.UserControllerTest         - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 00:52:21.042 [main] INFO  c.s.m.d.c.UserControllerTest         - The following 1 profile is active: "dev"
25-05-14 00:52:22.599 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 00:52:22.935 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 00:52:22.935 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 00:52:22.936 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 1 ms
25-05-14 00:52:22.966 [main] INFO  c.s.m.d.c.UserControllerTest         - Started UserControllerTest in 2.461 seconds (process running for 3.713)
25-05-14 00:52:33.689 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 7952 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 00:52:33.690 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 00:52:33.690 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 00:52:34.426 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 00:52:34.469 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34 ms. Found 6 JPA repository interfaces.
25-05-14 00:52:34.471 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:52:34.472 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:52:34.472 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:52:35.507 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 00:52:35.678 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 00:52:35.679 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 00:52:35.810 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 00:52:35.843 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 00:52:35.916 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 00:52:35.974 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 00:52:36.297 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 00:52:36.333 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 00:52:36.355 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 00:52:37.355 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 00:52:37.369 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 00:52:37.371 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 00:52:37.372 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 00:52:37.372 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 00:52:37.373 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 00:52:37.373 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 00:52:37.374 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 00:52:37.378 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 00:52:37.380 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 00:52:37.383 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 00:52:37.383 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 00:52:37.384 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 00:52:37.385 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 00:52:37.385 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 00:52:37.386 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 00:52:37.388 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 00:52:37.389 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 00:52:37.390 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 00:52:37.392 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 00:52:37.393 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 00:52:37.394 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 00:52:37.395 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 00:52:37.399 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 00:52:37.831 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 00:52:37.882 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 00:52:38.779 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 00:52:38.822 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 00:52:39.794 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 00:52:39.857 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 00:52:39.857 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 00:52:39.872 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 00:52:39.893 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 35 ms
25-05-14 00:52:39.981 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 6.78 seconds (process running for 8.085)
25-05-14 00:52:40.644 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 00:52:40.646 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 00:52:40.647 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 00:52:40.648 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 00:52:40.649 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 00:52:40.651 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 00:52:40.653 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 00:52:40.653 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 00:52:40.655 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 00:52:40.659 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 00:56:13.599 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 21052 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 00:56:13.599 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 00:56:13.600 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 00:56:14.290 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 00:56:14.338 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 40 ms. Found 6 JPA repository interfaces.
25-05-14 00:56:14.341 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:56:14.342 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:56:14.342 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:56:15.405 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 00:56:15.594 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 00:56:15.596 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 00:56:15.734 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 00:56:15.764 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 00:56:15.831 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 00:56:15.873 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 00:56:16.187 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 00:56:16.223 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 00:56:16.238 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 00:56:17.249 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 00:56:17.262 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 00:56:17.264 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 00:56:17.265 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 00:56:17.266 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 00:56:17.267 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 00:56:17.267 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 00:56:17.267 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 00:56:17.271 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 00:56:17.273 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 00:56:17.275 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 00:56:17.275 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 00:56:17.276 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 00:56:17.277 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 00:56:17.277 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 00:56:17.278 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 00:56:17.279 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 00:56:17.280 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 00:56:17.280 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 00:56:17.281 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 00:56:17.282 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 00:56:17.282 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 00:56:17.283 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 00:56:17.290 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 00:56:17.710 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 00:56:17.778 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 00:56:18.591 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 00:56:18.623 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 00:56:19.458 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 00:56:19.529 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 00:56:19.529 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 00:56:19.536 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 00:56:19.550 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 20 ms
25-05-14 00:56:19.613 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 6.447 seconds (process running for 7.641)
25-05-14 00:56:20.243 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 00:56:20.244 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 00:56:20.245 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 00:56:20.245 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 00:56:20.246 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 00:56:20.247 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 00:56:20.247 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 00:56:20.248 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 00:56:20.250 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 00:56:20.253 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 00:58:11.919 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 1892 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 00:58:11.921 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 00:58:11.921 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 00:58:12.605 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 00:58:12.671 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 53 ms. Found 6 JPA repository interfaces.
25-05-14 00:58:12.673 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:58:12.674 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:58:12.674 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 00:58:13.760 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 00:58:13.972 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 00:58:13.975 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 00:58:14.109 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 00:58:14.137 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 00:58:14.207 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 00:58:14.248 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 00:58:14.537 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 00:58:14.580 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 00:58:14.609 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 00:58:15.671 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 00:58:15.684 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 00:58:15.689 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 00:58:15.691 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 00:58:15.692 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 00:58:15.692 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 00:58:15.693 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 00:58:15.694 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 00:58:15.700 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 00:58:15.703 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 00:58:15.705 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 00:58:15.706 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 00:58:15.707 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 00:58:15.708 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 00:58:15.710 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 00:58:15.711 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 00:58:15.712 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 00:58:15.714 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 00:58:15.716 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 00:58:15.717 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 00:58:15.718 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 00:58:15.720 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 00:58:15.722 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 00:58:15.728 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 00:58:16.206 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 00:58:16.262 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 00:58:17.123 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 00:58:17.168 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 00:58:18.066 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 00:58:18.114 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 00:58:18.114 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 00:58:18.120 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 00:58:18.136 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 21 ms
25-05-14 00:58:18.215 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 6.748 seconds (process running for 7.954)
25-05-14 00:58:18.910 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 00:58:18.989 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 00:58:19.036 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 00:58:19.103 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 7b26b9a2-1652-4b90-9cd5-c76c73a4b48d
25-05-14 00:58:19.107 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 7b26b9a2-1652-4b90-9cd5-c76c73a4b48d
25-05-14 00:58:19.109 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 7b26b9a2-1652-4b90-9cd5-c76c73a4b48d
25-05-14 00:58:19.143 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 00:58:19.163 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:58:19.172 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:58:19.172 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 00:58:19.172 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 00:58:19.172 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 2acf9914-175d-4db8-ad2a-8b94f4332caa
25-05-14 00:58:19.172 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 2acf9914-175d-4db8-ad2a-8b94f4332caa
25-05-14 00:58:19.172 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 2acf9914-175d-4db8-ad2a-8b94f4332caa
25-05-14 00:58:19.179 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Channel to Delete'
25-05-14 00:58:19.179 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 00:58:19.200 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '0c91798b-d445-4c11-8632-bdf3c03eb623', 채널명: 'Channel to Delete'
25-05-14 00:58:19.211 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 00:58:19.229 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 00:58:19.245 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 시작. ID: '0c91798b-d445-4c11-8632-bdf3c03eb623'
25-05-14 00:58:19.300 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:58:19.302 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:58:19.302 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:58:19.304 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 00:58:19.310 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ID '0c91798b-d445-4c11-8632-bdf3c03eb623' 관련 메시지 삭제 시작
25-05-14 00:58:19.310 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=?
25-05-14 00:58:19.310 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ID '0c91798b-d445-4c11-8632-bdf3c03eb623' 관련 메시지 삭제 완료
25-05-14 00:58:19.310 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ID '0c91798b-d445-4c11-8632-bdf3c03eb623' 관련 ReadStatus 삭제 시작
25-05-14 00:58:19.310 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 00:58:19.310 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ID '0c91798b-d445-4c11-8632-bdf3c03eb623' 관련 ReadStatus 삭제 완료
25-05-14 00:58:19.322 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 완료. ID: '0c91798b-d445-4c11-8632-bdf3c03eb623'
25-05-14 00:58:19.368 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 00:58:19.370 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 00:58:19.375 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 00:58:19.377 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 4d77ca91-5809-40f9-8806-480ef3d15691
25-05-14 00:58:19.377 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 4d77ca91-5809-40f9-8806-480ef3d15691
25-05-14 00:58:19.377 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 4d77ca91-5809-40f9-8806-480ef3d15691
25-05-14 00:58:19.385 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 00:58:19.385 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:58:19.388 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:58:19.388 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 00:58:19.390 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 00:58:19.392 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 969a7837-d58e-4aca-80ac-4aac9b082ffc
25-05-14 00:58:19.394 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 969a7837-d58e-4aca-80ac-4aac9b082ffc
25-05-14 00:58:19.394 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 969a7837-d58e-4aca-80ac-4aac9b082ffc
25-05-14 00:58:19.400 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 시작. ID: '849b208b-c832-465a-bb7d-ded4d25ccfe1'
25-05-14 00:58:19.401 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 00:58:19.403 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 업데이트할 채널 ID '849b208b-c832-465a-bb7d-ded4d25ccfe1'에 해당하는 채널을 찾을 수 없습니다.
25-05-14 00:58:19.429 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 00:58:19.431 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 00:58:19.433 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 00:58:19.435 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 736cc68d-f738-4757-bb3d-fd10b547d21e
25-05-14 00:58:19.437 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 736cc68d-f738-4757-bb3d-fd10b547d21e
25-05-14 00:58:19.437 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 736cc68d-f738-4757-bb3d-fd10b547d21e
25-05-14 00:58:19.443 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 00:58:19.443 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:58:19.443 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:58:19.443 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 00:58:19.443 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 00:58:19.452 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 4de4f39e-63e4-48c0-87d0-6d95256ef412
25-05-14 00:58:19.454 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 4de4f39e-63e4-48c0-87d0-6d95256ef412
25-05-14 00:58:19.454 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 4de4f39e-63e4-48c0-87d0-6d95256ef412
25-05-14 00:58:19.460 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 시작. 요청된 참여자 수: 2
25-05-14 00:58:19.460 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료. 채널 ID: 'ce558e71-0ca6-467e-ae32-142e10116e3e'
25-05-14 00:58:19.476 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:58:19.476 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:58:19.476 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:58:19.476 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 00:58:19.476 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "name"; SQL statement:
insert into channels (created_at,description,name,type,id) values (?,?,?,?,?) [23502-232]
25-05-14 00:58:19.514 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 00:58:19.514 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 00:58:19.514 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 00:58:19.514 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 46849339-7418-4bcd-8060-3ad046307794
25-05-14 00:58:19.514 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 46849339-7418-4bcd-8060-3ad046307794
25-05-14 00:58:19.514 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 46849339-7418-4bcd-8060-3ad046307794
25-05-14 00:58:19.514 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 00:58:19.514 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:58:19.514 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:58:19.514 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 00:58:19.514 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 00:58:19.514 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 5532666c-0d5e-43a6-8f68-a7c75dd8925e
25-05-14 00:58:19.514 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 5532666c-0d5e-43a6-8f68-a7c75dd8925e
25-05-14 00:58:19.514 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 5532666c-0d5e-43a6-8f68-a7c75dd8925e
25-05-14 00:58:19.530 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Initial Channel'
25-05-14 00:58:19.530 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 00:58:19.530 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'fe123f91-03ea-4c10-9d76-b1f5e5443aa5', 채널명: 'Initial Channel'
25-05-14 00:58:19.538 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 00:58:19.542 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 00:58:19.545 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 시작. ID: 'fe123f91-03ea-4c10-9d76-b1f5e5443aa5'
25-05-14 00:58:19.545 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 완료. ID: 'fe123f91-03ea-4c10-9d76-b1f5e5443aa5'. 이전 이름: 'Initial Channel', 새 이름: 'Updated Channel Name'. 이전 설명: 'Initial Desc', 새 설명: 'Updated Description'
25-05-14 00:58:19.545 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 00:58:19.545 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 00:58:19.596 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 00:58:19.600 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 00:58:19.600 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 00:58:19.600 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: c836f7b0-3976-4d48-9bc8-a0a1cfb37879
25-05-14 00:58:19.600 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: c836f7b0-3976-4d48-9bc8-a0a1cfb37879
25-05-14 00:58:19.600 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: c836f7b0-3976-4d48-9bc8-a0a1cfb37879
25-05-14 00:58:19.600 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 00:58:19.600 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:58:19.611 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:58:19.613 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 00:58:19.615 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 00:58:19.617 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: a2e670a8-18e7-47cd-a9e5-2f5a4990b511
25-05-14 00:58:19.617 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: a2e670a8-18e7-47cd-a9e5-2f5a4990b511
25-05-14 00:58:19.617 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: a2e670a8-18e7-47cd-a9e5-2f5a4990b511
25-05-14 00:58:19.621 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 시작. ID: 'a3338d6a-06f5-4409-813f-dc2689aa37dd'
25-05-14 00:58:19.623 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 00:58:19.625 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 실패: ID 'a3338d6a-06f5-4409-813f-dc2689aa37dd'에 해당하는 채널을 찾을 수 없습니다.
25-05-14 00:58:19.639 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 00:58:19.640 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 00:58:19.642 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 00:58:19.645 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: e55dc506-9a39-4b1b-804a-98aeeb7efe48
25-05-14 00:58:19.645 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: e55dc506-9a39-4b1b-804a-98aeeb7efe48
25-05-14 00:58:19.645 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: e55dc506-9a39-4b1b-804a-98aeeb7efe48
25-05-14 00:58:19.648 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 00:58:19.650 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:58:19.650 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:58:19.651 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 00:58:19.652 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 00:58:19.653 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 0b144c48-f02f-495c-8f0a-2ee81deaa9c0
25-05-14 00:58:19.653 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 0b144c48-f02f-495c-8f0a-2ee81deaa9c0
25-05-14 00:58:19.653 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 0b144c48-f02f-495c-8f0a-2ee81deaa9c0
25-05-14 00:58:19.656 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 시작. 요청된 참여자 수: 2
25-05-14 00:58:19.656 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료. 채널 ID: '7b3e8af0-176d-4e0f-9c63-a76f04f847a0'
25-05-14 00:58:19.658 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:58:19.659 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:58:19.660 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:58:19.661 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 00:58:19.661 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "name"; SQL statement:
insert into channels (created_at,description,name,type,id) values (?,?,?,?,?) [23502-232]
25-05-14 00:58:19.675 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 00:58:19.677 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 00:58:19.679 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 00:58:19.681 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 6541272c-5283-43b0-80ea-b786925a9b4c
25-05-14 00:58:19.682 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 6541272c-5283-43b0-80ea-b786925a9b4c
25-05-14 00:58:19.682 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 6541272c-5283-43b0-80ea-b786925a9b4c
25-05-14 00:58:19.685 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 00:58:19.687 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:58:19.688 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:58:19.689 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 00:58:19.691 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 00:58:19.693 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 44401b3d-7715-476d-aa18-e84ed2522b7f
25-05-14 00:58:19.694 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 44401b3d-7715-476d-aa18-e84ed2522b7f
25-05-14 00:58:19.694 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 44401b3d-7715-476d-aa18-e84ed2522b7f
25-05-14 00:58:19.697 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'User1 Public'
25-05-14 00:58:19.698 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 00:58:19.701 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '0c9f5d8a-9f1c-4c79-a94c-08cfab431210', 채널명: 'User1 Public'
25-05-14 00:58:19.703 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 00:58:19.706 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 00:58:19.710 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 시작. 요청된 참여자 수: 2
25-05-14 00:58:19.711 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료. 채널 ID: 'b1f5048e-9553-4da6-a854-3eb5964fe37a'
25-05-14 00:58:19.714 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:58:19.715 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:58:19.715 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:58:19.716 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:58:19.717 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 00:58:19.717 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "name"; SQL statement:
insert into channels (created_at,description,name,type,id) values (?,?,?,?,?) [23502-232]
25-05-14 00:58:19.729 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 00:58:19.731 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 00:58:19.734 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 00:58:19.736 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 7bb7a923-9554-4f14-b5fe-8a410e5b3acc
25-05-14 00:58:19.737 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 7bb7a923-9554-4f14-b5fe-8a410e5b3acc
25-05-14 00:58:19.737 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 7bb7a923-9554-4f14-b5fe-8a410e5b3acc
25-05-14 00:58:19.744 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 00:58:19.746 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:58:19.748 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:58:19.749 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 00:58:19.751 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 00:58:19.752 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 4f0dbf6e-7c47-4a36-b391-073dea967ec6
25-05-14 00:58:19.753 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 4f0dbf6e-7c47-4a36-b391-073dea967ec6
25-05-14 00:58:19.753 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 4f0dbf6e-7c47-4a36-b391-073dea967ec6
25-05-14 00:58:19.774 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 00:58:19.776 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 00:58:19.778 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 00:58:19.780 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: a5c95da7-8b9f-44ef-951d-23b00f3d344c
25-05-14 00:58:19.780 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: a5c95da7-8b9f-44ef-951d-23b00f3d344c
25-05-14 00:58:19.780 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: a5c95da7-8b9f-44ef-951d-23b00f3d344c
25-05-14 00:58:19.784 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 00:58:19.785 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 00:58:19.785 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 00:58:19.786 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 00:58:19.787 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 00:58:19.787 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 71b805f3-60c6-4e46-a62b-6eb433e98830
25-05-14 00:58:19.787 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 71b805f3-60c6-4e46-a62b-6eb433e98830
25-05-14 00:58:19.787 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 71b805f3-60c6-4e46-a62b-6eb433e98830
25-05-14 00:58:19.791 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Public Channel'
25-05-14 00:58:19.791 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 00:58:19.792 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '9f0002db-fdc5-414c-b79d-d678517ddaa6', 채널명: 'Public Channel'
25-05-14 00:58:19.795 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 00:58:19.799 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 00:58:19.820 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 00:58:19.821 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 00:58:19.822 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 00:58:19.823 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 00:58:19.824 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 00:58:19.827 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 00:58:19.828 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 00:58:19.828 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 00:58:19.832 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 00:58:19.835 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 01:01:05.942 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 30912 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:01:05.943 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:01:05.944 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 01:01:06.647 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:01:06.706 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 6 JPA repository interfaces.
25-05-14 01:01:06.707 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:01:06.707 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:01:06.707 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:01:07.832 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:01:08.067 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 01:01:08.069 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 01:01:08.171 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 01:01:08.204 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:01:08.256 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:01:08.302 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:01:08.643 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:01:08.717 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:01:08.747 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:01:09.743 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:01:09.762 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:01:09.765 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:01:09.765 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:01:09.766 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:01:09.766 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:01:09.767 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:01:09.768 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:01:09.773 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:01:09.774 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:01:09.776 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:01:09.776 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:01:09.777 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:01:09.777 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:01:09.778 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:01:09.780 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:01:09.780 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:01:09.781 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:01:09.783 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:01:09.785 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:01:09.787 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:01:09.788 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:01:09.789 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:01:09.794 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:01:10.183 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 01:01:10.246 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:01:11.026 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 01:01:11.062 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:01:11.964 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 01:01:12.038 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:01:12.038 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:01:12.046 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 01:01:12.060 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 22 ms
25-05-14 01:01:12.137 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 6.682 seconds (process running for 7.856)
25-05-14 01:01:12.743 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:01:12.834 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:01:12.862 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:01:12.904 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 38c38c35-58f6-4bb1-b800-86607654be88
25-05-14 01:01:12.909 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 38c38c35-58f6-4bb1-b800-86607654be88
25-05-14 01:01:12.910 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 38c38c35-58f6-4bb1-b800-86607654be88
25-05-14 01:01:12.949 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:01:12.972 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:01:12.987 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:01:12.989 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:01:12.992 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:01:12.995 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 5c364baf-3587-4397-943e-01888e213c93
25-05-14 01:01:12.997 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 5c364baf-3587-4397-943e-01888e213c93
25-05-14 01:01:12.997 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 5c364baf-3587-4397-943e-01888e213c93
25-05-14 01:01:13.014 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Channel to Delete'
25-05-14 01:01:13.017 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:01:13.023 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '402c518c-5fd7-4bfe-9095-80fe93af73c2', 채널명: 'Channel to Delete'
25-05-14 01:01:13.034 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:01:13.055 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:01:13.076 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 시작. ID: '402c518c-5fd7-4bfe-9095-80fe93af73c2'
25-05-14 01:01:13.140 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:01:13.141 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:01:13.142 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:01:13.144 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:01:13.151 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ID '402c518c-5fd7-4bfe-9095-80fe93af73c2' 관련 메시지 삭제 시작
25-05-14 01:01:13.154 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=?
25-05-14 01:01:13.156 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ID '402c518c-5fd7-4bfe-9095-80fe93af73c2' 관련 메시지 삭제 완료
25-05-14 01:01:13.157 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ID '402c518c-5fd7-4bfe-9095-80fe93af73c2' 관련 ReadStatus 삭제 시작
25-05-14 01:01:13.159 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:01:13.161 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ID '402c518c-5fd7-4bfe-9095-80fe93af73c2' 관련 ReadStatus 삭제 완료
25-05-14 01:01:13.175 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 완료. ID: '402c518c-5fd7-4bfe-9095-80fe93af73c2'
25-05-14 01:01:13.204 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:01:13.206 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:01:13.208 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:01:13.210 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: a6f76231-34e4-4ebd-957e-b3655181cf1f
25-05-14 01:01:13.212 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: a6f76231-34e4-4ebd-957e-b3655181cf1f
25-05-14 01:01:13.212 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: a6f76231-34e4-4ebd-957e-b3655181cf1f
25-05-14 01:01:13.218 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:01:13.220 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:01:13.222 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:01:13.223 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:01:13.226 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:01:13.228 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 64263ec1-66c4-4705-8b57-fa59a60546a4
25-05-14 01:01:13.230 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 64263ec1-66c4-4705-8b57-fa59a60546a4
25-05-14 01:01:13.230 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 64263ec1-66c4-4705-8b57-fa59a60546a4
25-05-14 01:01:13.237 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 시작. ID: 'd7e9d89e-c6a4-4fb9-8be2-e819ce1a2498'
25-05-14 01:01:13.240 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:01:13.243 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 업데이트할 채널 ID 'd7e9d89e-c6a4-4fb9-8be2-e819ce1a2498'에 해당하는 채널을 찾을 수 없습니다.
25-05-14 01:01:13.275 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:01:13.277 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:01:13.279 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:01:13.281 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 7eb887c3-f286-41aa-afbe-dfd15b7cd1b9
25-05-14 01:01:13.282 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 7eb887c3-f286-41aa-afbe-dfd15b7cd1b9
25-05-14 01:01:13.282 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 7eb887c3-f286-41aa-afbe-dfd15b7cd1b9
25-05-14 01:01:13.286 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:01:13.288 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:01:13.290 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:01:13.290 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:01:13.292 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:01:13.294 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 67d04f7a-5ff1-41ee-9c72-8e227fd1e2e2
25-05-14 01:01:13.295 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 67d04f7a-5ff1-41ee-9c72-8e227fd1e2e2
25-05-14 01:01:13.295 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 67d04f7a-5ff1-41ee-9c72-8e227fd1e2e2
25-05-14 01:01:13.304 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 시작. 요청된 참여자 수: 2
25-05-14 01:01:13.305 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료. 채널 ID: '98de0ee7-782c-4ad7-95c7-3d9b2ed5ee93'
25-05-14 01:01:13.314 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:01:13.315 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:01:13.315 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:01:13.316 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:01:13.316 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "name"; SQL statement:
insert into channels (created_at,description,name,type,id) values (?,?,?,?,?) [23502-232]
25-05-14 01:01:13.343 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:01:13.345 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:01:13.347 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:01:13.349 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 963c0f45-339a-4133-86ac-19fbc5a136ce
25-05-14 01:01:13.351 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 963c0f45-339a-4133-86ac-19fbc5a136ce
25-05-14 01:01:13.351 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 963c0f45-339a-4133-86ac-19fbc5a136ce
25-05-14 01:01:13.355 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:01:13.358 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:01:13.359 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:01:13.360 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:01:13.362 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:01:13.364 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 937090ba-6c7e-44fb-859e-b62de367168e
25-05-14 01:01:13.365 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 937090ba-6c7e-44fb-859e-b62de367168e
25-05-14 01:01:13.365 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 937090ba-6c7e-44fb-859e-b62de367168e
25-05-14 01:01:13.369 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Initial Channel'
25-05-14 01:01:13.371 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:01:13.373 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '92cd28b3-7ea0-4091-bbc5-42dc87698744', 채널명: 'Initial Channel'
25-05-14 01:01:13.375 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:01:13.377 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:01:13.380 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 시작. ID: '92cd28b3-7ea0-4091-bbc5-42dc87698744'
25-05-14 01:01:13.382 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 완료. ID: '92cd28b3-7ea0-4091-bbc5-42dc87698744'. 이전 이름: 'Initial Channel', 새 이름: 'Updated Channel Name'. 이전 설명: 'Initial Desc', 새 설명: 'Updated Description'
25-05-14 01:01:13.384 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:01:13.386 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:01:13.436 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:01:13.438 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:01:13.440 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:01:13.442 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 8475baa9-d6b1-468e-a85d-9ecce92dd5e9
25-05-14 01:01:13.443 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 8475baa9-d6b1-468e-a85d-9ecce92dd5e9
25-05-14 01:01:13.443 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 8475baa9-d6b1-468e-a85d-9ecce92dd5e9
25-05-14 01:01:13.447 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:01:13.449 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:01:13.450 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:01:13.451 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:01:13.453 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:01:13.454 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 70374388-5fdc-4824-bfc7-374fad5bbe99
25-05-14 01:01:13.454 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 70374388-5fdc-4824-bfc7-374fad5bbe99
25-05-14 01:01:13.454 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 70374388-5fdc-4824-bfc7-374fad5bbe99
25-05-14 01:01:13.456 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 시작. ID: 'f687df8e-0208-4617-892b-e2adac465d47'
25-05-14 01:01:13.458 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:01:13.458 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 실패: ID 'f687df8e-0208-4617-892b-e2adac465d47'에 해당하는 채널을 찾을 수 없습니다.
25-05-14 01:01:13.472 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:01:13.473 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:01:13.475 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:01:13.477 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 790c71b9-e5e2-4f5b-80a3-dc7851f5f694
25-05-14 01:01:13.478 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 790c71b9-e5e2-4f5b-80a3-dc7851f5f694
25-05-14 01:01:13.478 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 790c71b9-e5e2-4f5b-80a3-dc7851f5f694
25-05-14 01:01:13.481 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:01:13.483 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:01:13.484 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:01:13.485 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:01:13.487 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:01:13.489 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: b5afb344-36e1-40d7-adac-097888288cef
25-05-14 01:01:13.490 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: b5afb344-36e1-40d7-adac-097888288cef
25-05-14 01:01:13.490 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: b5afb344-36e1-40d7-adac-097888288cef
25-05-14 01:01:13.493 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 시작. 요청된 참여자 수: 2
25-05-14 01:01:13.494 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료. 채널 ID: '8b9fc926-d1cc-476c-9433-d4ecd4cb20fd'
25-05-14 01:01:13.496 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:01:13.497 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:01:13.497 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:01:13.498 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:01:13.498 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "name"; SQL statement:
insert into channels (created_at,description,name,type,id) values (?,?,?,?,?) [23502-232]
25-05-14 01:01:13.508 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:01:13.510 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:01:13.512 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:01:13.514 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: ee8c5641-b933-4dc0-b799-4a5c1a00e86f
25-05-14 01:01:13.515 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: ee8c5641-b933-4dc0-b799-4a5c1a00e86f
25-05-14 01:01:13.515 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: ee8c5641-b933-4dc0-b799-4a5c1a00e86f
25-05-14 01:01:13.518 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:01:13.520 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:01:13.521 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:01:13.522 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:01:13.524 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:01:13.525 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 17512da4-c8d1-4fab-a4cc-b72c62116a08
25-05-14 01:01:13.526 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 17512da4-c8d1-4fab-a4cc-b72c62116a08
25-05-14 01:01:13.527 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 17512da4-c8d1-4fab-a4cc-b72c62116a08
25-05-14 01:01:13.530 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'User1 Public'
25-05-14 01:01:13.531 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:01:13.532 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'cbdb8096-103e-47cc-85f5-f068653e9b07', 채널명: 'User1 Public'
25-05-14 01:01:13.533 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:01:13.535 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:01:13.538 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 시작. 요청된 참여자 수: 2
25-05-14 01:01:13.539 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료. 채널 ID: '2db26897-31a0-4da6-a8d0-50a59a5caf47'
25-05-14 01:01:13.541 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:01:13.541 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:01:13.542 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:01:13.542 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:01:13.543 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:01:13.543 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "name"; SQL statement:
insert into channels (created_at,description,name,type,id) values (?,?,?,?,?) [23502-232]
25-05-14 01:01:13.557 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:01:13.559 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:01:13.561 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:01:13.564 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 39f58542-b9eb-418f-8b34-aba9c94ac0d6
25-05-14 01:01:13.565 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 39f58542-b9eb-418f-8b34-aba9c94ac0d6
25-05-14 01:01:13.565 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 39f58542-b9eb-418f-8b34-aba9c94ac0d6
25-05-14 01:01:13.569 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:01:13.571 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:01:13.571 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:01:13.572 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:01:13.573 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:01:13.574 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 53361271-649a-4292-9bdf-018d53abd391
25-05-14 01:01:13.574 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 53361271-649a-4292-9bdf-018d53abd391
25-05-14 01:01:13.574 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 53361271-649a-4292-9bdf-018d53abd391
25-05-14 01:01:13.594 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:01:13.596 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:01:13.598 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:01:13.600 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: d45a1c04-ad1b-4ec2-9bc6-88927c25dd83
25-05-14 01:01:13.601 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: d45a1c04-ad1b-4ec2-9bc6-88927c25dd83
25-05-14 01:01:13.601 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: d45a1c04-ad1b-4ec2-9bc6-88927c25dd83
25-05-14 01:01:13.606 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:01:13.608 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:01:13.609 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:01:13.610 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:01:13.613 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:01:13.614 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 06bd4e88-34a9-4af5-b0d2-c166fd8ef6b3
25-05-14 01:01:13.615 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 06bd4e88-34a9-4af5-b0d2-c166fd8ef6b3
25-05-14 01:01:13.615 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 06bd4e88-34a9-4af5-b0d2-c166fd8ef6b3
25-05-14 01:01:13.619 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Public Channel'
25-05-14 01:01:13.620 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:01:13.622 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '191eac62-9204-4438-a00f-f3b5d162c345', 채널명: 'Public Channel'
25-05-14 01:01:13.623 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:01:13.625 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:01:13.640 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:01:13.641 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:01:13.642 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:01:13.643 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:01:13.644 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:01:13.645 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:01:13.646 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:01:13.647 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:01:13.650 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 01:01:13.654 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 01:02:45.083 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 5940 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:02:45.085 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:02:45.087 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 01:02:46.521 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:02:46.636 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 94 ms. Found 6 JPA repository interfaces.
25-05-14 01:02:46.640 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:02:46.641 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:02:46.642 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:02:48.331 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:02:48.659 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 01:02:48.662 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 01:02:48.854 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 01:02:48.908 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:02:49.001 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:02:49.069 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:02:49.498 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:02:49.576 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:02:49.606 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:02:50.761 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:02:50.778 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:02:50.780 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:02:50.781 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:02:50.783 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:02:50.783 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:02:50.784 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:02:50.785 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:02:50.789 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:02:50.792 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:02:50.794 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:02:50.795 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:02:50.797 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:02:50.797 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:02:50.798 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:02:50.800 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:02:50.801 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:02:50.803 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:02:50.804 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:02:50.806 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:02:50.807 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:02:50.808 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:02:50.809 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:02:50.816 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:02:51.385 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 01:02:51.476 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:02:52.574 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 01:02:52.630 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:02:53.929 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 01:02:54.010 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:02:54.011 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:02:54.024 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 01:02:54.047 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 36 ms
25-05-14 01:02:54.167 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 10.239 seconds (process running for 13.144)
25-05-14 01:02:55.044 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:02:55.152 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:02:55.212 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:02:55.291 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 475e7f5a-8780-45a6-bdb9-c4e2e6d78e8c
25-05-14 01:02:55.299 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 475e7f5a-8780-45a6-bdb9-c4e2e6d78e8c
25-05-14 01:02:55.299 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 475e7f5a-8780-45a6-bdb9-c4e2e6d78e8c
25-05-14 01:02:55.362 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:02:55.389 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:02:55.401 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:02:55.402 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:02:55.404 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:02:55.406 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 207baadc-eb60-450f-98ac-a1840a0fa0be
25-05-14 01:02:55.407 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 207baadc-eb60-450f-98ac-a1840a0fa0be
25-05-14 01:02:55.408 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 207baadc-eb60-450f-98ac-a1840a0fa0be
25-05-14 01:02:55.422 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 시작. 요청된 참여자 수: 2
25-05-14 01:02:55.427 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료. 채널 ID: '89c35074-d750-4dcd-8bac-4fde08d2d05f'
25-05-14 01:02:55.443 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:02:55.444 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:02:55.445 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:02:55.446 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:02:55.447 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "name"; SQL statement:
insert into channels (created_at,description,name,type,id) values (?,?,?,?,?) [23502-232]
25-05-14 01:02:55.508 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:02:55.509 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:02:55.511 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:02:55.512 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:02:55.513 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:02:55.515 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:02:55.516 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:02:55.517 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:02:55.521 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 01:02:55.526 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 01:12:19.547 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 17976 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:12:19.548 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:12:19.549 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 01:12:20.282 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:12:20.334 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 45 ms. Found 6 JPA repository interfaces.
25-05-14 01:12:20.336 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:12:20.337 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:12:20.337 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:12:21.393 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:12:21.579 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 01:12:21.580 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 01:12:21.684 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 01:12:21.717 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:12:21.797 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:12:21.836 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:12:22.161 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:12:22.202 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:12:22.220 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:12:23.316 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:12:23.327 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:12:23.331 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:12:23.332 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:12:23.332 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:12:23.333 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:12:23.334 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:12:23.335 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:12:23.341 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:12:23.344 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:12:23.346 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:12:23.347 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:12:23.348 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:12:23.349 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:12:23.350 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:12:23.352 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:12:23.353 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:12:23.354 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:12:23.355 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:12:23.356 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:12:23.358 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:12:23.359 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:12:23.360 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:12:23.366 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:12:23.779 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 01:12:23.832 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:12:24.611 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 01:12:24.646 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:12:25.538 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 01:12:25.592 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:12:25.592 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:12:25.599 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 01:12:25.614 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 22 ms
25-05-14 01:12:25.678 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 6.555 seconds (process running for 7.764)
25-05-14 01:12:26.336 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:12:26.413 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:12:26.454 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:12:26.521 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 730eb4b2-7d19-4bed-8b91-a25c3f7a5058
25-05-14 01:12:26.527 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 730eb4b2-7d19-4bed-8b91-a25c3f7a5058
25-05-14 01:12:26.528 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 730eb4b2-7d19-4bed-8b91-a25c3f7a5058
25-05-14 01:12:26.582 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:12:26.606 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:12:26.622 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:26.624 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:12:26.627 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:12:26.630 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: f298363f-60c3-4971-b8f1-aad1389aca27
25-05-14 01:12:26.631 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: f298363f-60c3-4971-b8f1-aad1389aca27
25-05-14 01:12:26.631 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: f298363f-60c3-4971-b8f1-aad1389aca27
25-05-14 01:12:26.645 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 시작. 요청된 참여자 수: 2
25-05-14 01:12:26.651 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료. 채널 ID: '0fba852f-2094-46e4-86e4-e767837fb249'
25-05-14 01:12:26.664 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:12:26.665 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:26.666 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:26.667 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-14 01:12:26.686 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 2개의 ReadStatus 저장 완료. 채널 ID: '0fba852f-2094-46e4-86e4-e767837fb249'
25-05-14 01:12:26.687 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 및 ReadStatus 설정 완료. 채널 ID: '0fba852f-2094-46e4-86e4-e767837fb249'
25-05-14 01:12:26.695 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:12:26.703 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:12:26.704 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:12:26.704 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:12:26.751 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:12:26.752 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:12:26.753 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:12:26.753 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:12:26.754 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:12:26.755 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:12:26.755 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:12:26.755 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:12:26.757 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 01:12:26.760 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 01:12:40.099 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 29448 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:12:40.101 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:12:40.102 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 01:12:40.877 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:12:40.930 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 6 JPA repository interfaces.
25-05-14 01:12:40.932 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:12:40.933 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:12:40.933 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:12:42.048 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:12:42.267 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 01:12:42.269 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 01:12:42.393 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 01:12:42.421 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:12:42.493 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:12:42.550 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:12:42.830 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:12:42.871 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:12:42.897 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:12:43.902 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:12:43.924 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:12:43.927 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:12:43.928 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:12:43.928 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:12:43.929 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:12:43.931 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:12:43.932 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:12:43.939 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:12:43.942 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:12:43.946 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:12:43.948 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:12:43.950 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:12:43.951 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:12:43.952 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:12:43.954 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:12:43.955 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:12:43.957 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:12:43.958 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:12:43.959 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:12:43.960 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:12:43.961 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:12:43.962 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:12:43.966 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:12:44.583 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 01:12:44.648 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:12:45.430 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 01:12:45.483 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:12:46.385 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 01:12:46.450 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:12:46.450 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:12:46.462 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 01:12:46.484 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 34 ms
25-05-14 01:12:46.567 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 6.996 seconds (process running for 8.235)
25-05-14 01:12:47.281 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:12:47.365 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:12:47.408 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:12:47.449 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 23771f61-0982-41b2-9678-1f4c8b47f187
25-05-14 01:12:47.453 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 23771f61-0982-41b2-9678-1f4c8b47f187
25-05-14 01:12:47.453 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 23771f61-0982-41b2-9678-1f4c8b47f187
25-05-14 01:12:47.490 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:12:47.514 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:12:47.530 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:47.531 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:12:47.534 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:12:47.535 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 834b63a7-9896-428b-baa3-2eff37d70933
25-05-14 01:12:47.536 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 834b63a7-9896-428b-baa3-2eff37d70933
25-05-14 01:12:47.536 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 834b63a7-9896-428b-baa3-2eff37d70933
25-05-14 01:12:47.546 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Channel to Delete'
25-05-14 01:12:47.549 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:12:47.556 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '45c78f15-8ce4-4a65-b750-5812481cfc04', 채널명: 'Channel to Delete'
25-05-14 01:12:47.566 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:12:47.587 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:12:47.608 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 시작. ID: '45c78f15-8ce4-4a65-b750-5812481cfc04'
25-05-14 01:12:47.660 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:12:47.661 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:47.662 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:47.663 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:12:47.670 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ID '45c78f15-8ce4-4a65-b750-5812481cfc04' 관련 메시지 삭제 시작
25-05-14 01:12:47.673 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=?
25-05-14 01:12:47.675 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ID '45c78f15-8ce4-4a65-b750-5812481cfc04' 관련 메시지 삭제 완료
25-05-14 01:12:47.675 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ID '45c78f15-8ce4-4a65-b750-5812481cfc04' 관련 ReadStatus 삭제 시작
25-05-14 01:12:47.678 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:12:47.679 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ID '45c78f15-8ce4-4a65-b750-5812481cfc04' 관련 ReadStatus 삭제 완료
25-05-14 01:12:47.694 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 완료. ID: '45c78f15-8ce4-4a65-b750-5812481cfc04'
25-05-14 01:12:47.722 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:12:47.723 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:12:47.725 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:12:47.726 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 6dd167bf-f9ac-48a1-addf-700dd64145f5
25-05-14 01:12:47.728 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 6dd167bf-f9ac-48a1-addf-700dd64145f5
25-05-14 01:12:47.728 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 6dd167bf-f9ac-48a1-addf-700dd64145f5
25-05-14 01:12:47.734 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:12:47.736 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:12:47.738 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:47.738 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:12:47.741 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:12:47.744 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: d35ed449-6f6a-4c05-a1fe-95d3ce640371
25-05-14 01:12:47.747 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: d35ed449-6f6a-4c05-a1fe-95d3ce640371
25-05-14 01:12:47.747 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: d35ed449-6f6a-4c05-a1fe-95d3ce640371
25-05-14 01:12:47.756 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 시작. ID: 'f4f923c7-6f2f-4207-b483-892d9c79abb8'
25-05-14 01:12:47.759 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:12:47.761 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 업데이트할 채널 ID 'f4f923c7-6f2f-4207-b483-892d9c79abb8'에 해당하는 채널을 찾을 수 없습니다.
25-05-14 01:12:47.794 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:12:47.795 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:12:47.797 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:12:47.799 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 336ac645-a895-4150-8976-89b9040e7886
25-05-14 01:12:47.801 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 336ac645-a895-4150-8976-89b9040e7886
25-05-14 01:12:47.801 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 336ac645-a895-4150-8976-89b9040e7886
25-05-14 01:12:47.805 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:12:47.808 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:12:47.809 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:47.810 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:12:47.813 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:12:47.815 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 39ba34a5-a255-49dc-bbe3-3b393e5ef70e
25-05-14 01:12:47.815 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 39ba34a5-a255-49dc-bbe3-3b393e5ef70e
25-05-14 01:12:47.816 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 39ba34a5-a255-49dc-bbe3-3b393e5ef70e
25-05-14 01:12:47.825 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 시작. 요청된 참여자 수: 2
25-05-14 01:12:47.826 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료. 채널 ID: 'e5808c7a-9f3e-452e-975a-84fdaa6c45c0'
25-05-14 01:12:47.837 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:12:47.838 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:47.839 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:47.840 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-14 01:12:47.853 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 2개의 ReadStatus 저장 완료. 채널 ID: 'e5808c7a-9f3e-452e-975a-84fdaa6c45c0'
25-05-14 01:12:47.853 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 및 ReadStatus 설정 완료. 채널 ID: 'e5808c7a-9f3e-452e-975a-84fdaa6c45c0'
25-05-14 01:12:47.856 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:12:47.860 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:12:47.862 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:12:47.863 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:12:47.881 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:12:47.883 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:12:47.885 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:12:47.888 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 3a4706f9-ff82-4cbb-992f-5f01eff03dc6
25-05-14 01:12:47.889 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 3a4706f9-ff82-4cbb-992f-5f01eff03dc6
25-05-14 01:12:47.889 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 3a4706f9-ff82-4cbb-992f-5f01eff03dc6
25-05-14 01:12:47.894 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:12:47.896 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:12:47.897 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:47.898 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:12:47.900 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:12:47.902 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: a8b610c1-a1c8-4dd9-bfab-5bafdcc89f04
25-05-14 01:12:47.903 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: a8b610c1-a1c8-4dd9-bfab-5bafdcc89f04
25-05-14 01:12:47.903 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: a8b610c1-a1c8-4dd9-bfab-5bafdcc89f04
25-05-14 01:12:47.906 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Initial Channel'
25-05-14 01:12:47.908 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:12:47.910 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'c9737eba-3080-4c3d-b8a5-83e17147153a', 채널명: 'Initial Channel'
25-05-14 01:12:47.912 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:12:47.915 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:12:47.920 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 시작. ID: 'c9737eba-3080-4c3d-b8a5-83e17147153a'
25-05-14 01:12:47.924 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 완료. ID: 'c9737eba-3080-4c3d-b8a5-83e17147153a'. 이전 이름: 'Initial Channel', 새 이름: 'Updated Channel Name'. 이전 설명: 'Initial Desc', 새 설명: 'Updated Description'
25-05-14 01:12:47.928 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:12:47.931 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:12:47.988 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:12:47.990 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:12:47.992 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:12:47.994 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: c9c3cac6-686e-4a49-ba3f-791cec2454b2
25-05-14 01:12:47.994 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: c9c3cac6-686e-4a49-ba3f-791cec2454b2
25-05-14 01:12:47.994 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: c9c3cac6-686e-4a49-ba3f-791cec2454b2
25-05-14 01:12:47.997 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:12:47.999 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:12:48.000 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:48.000 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:12:48.002 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:12:48.004 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 71a19603-2aff-43e6-87a1-16e02328d75c
25-05-14 01:12:48.005 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 71a19603-2aff-43e6-87a1-16e02328d75c
25-05-14 01:12:48.005 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 71a19603-2aff-43e6-87a1-16e02328d75c
25-05-14 01:12:48.008 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 시작. ID: '8bce2e63-6b5e-4007-b66d-11a80820e960'
25-05-14 01:12:48.010 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:12:48.011 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 실패: ID '8bce2e63-6b5e-4007-b66d-11a80820e960'에 해당하는 채널을 찾을 수 없습니다.
25-05-14 01:12:48.025 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:12:48.026 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:12:48.029 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:12:48.031 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 38c334ec-657f-469f-a346-3418580e7ddc
25-05-14 01:12:48.033 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 38c334ec-657f-469f-a346-3418580e7ddc
25-05-14 01:12:48.033 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 38c334ec-657f-469f-a346-3418580e7ddc
25-05-14 01:12:48.038 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:12:48.041 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:12:48.042 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:48.043 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:12:48.046 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:12:48.048 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 6fdf461a-df1c-4169-b2f7-10723733af57
25-05-14 01:12:48.049 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 6fdf461a-df1c-4169-b2f7-10723733af57
25-05-14 01:12:48.049 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 6fdf461a-df1c-4169-b2f7-10723733af57
25-05-14 01:12:48.052 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 시작. 요청된 참여자 수: 2
25-05-14 01:12:48.053 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료. 채널 ID: '42aa1048-272f-464b-9986-505ebc398790'
25-05-14 01:12:48.056 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:12:48.057 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:48.058 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:48.058 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-14 01:12:48.060 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 요청된 참여자 ID 중 일부를 찾을 수 없습니다. 요청된 ID 수: 2, 찾은 사용자 수: 1
25-05-14 01:12:48.061 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 1개의 ReadStatus 저장 완료. 채널 ID: '42aa1048-272f-464b-9986-505ebc398790'
25-05-14 01:12:48.061 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 및 ReadStatus 설정 완료. 채널 ID: '42aa1048-272f-464b-9986-505ebc398790'
25-05-14 01:12:48.063 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:12:48.067 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:12:48.068 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:12:48.092 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:12:48.094 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:12:48.096 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:12:48.098 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: b8f3ad35-8f3a-4567-a7de-2d64a3d82e05
25-05-14 01:12:48.100 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: b8f3ad35-8f3a-4567-a7de-2d64a3d82e05
25-05-14 01:12:48.100 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: b8f3ad35-8f3a-4567-a7de-2d64a3d82e05
25-05-14 01:12:48.105 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:12:48.107 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:12:48.108 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:48.109 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:12:48.111 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:12:48.112 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: b9e503a3-4400-430c-ba41-53f286a9b014
25-05-14 01:12:48.113 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: b9e503a3-4400-430c-ba41-53f286a9b014
25-05-14 01:12:48.113 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: b9e503a3-4400-430c-ba41-53f286a9b014
25-05-14 01:12:48.117 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'User1 Public'
25-05-14 01:12:48.119 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:12:48.121 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'ba4a36f1-57c6-48d3-96dc-4b076c5f3799', 채널명: 'User1 Public'
25-05-14 01:12:48.123 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:12:48.127 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:12:48.131 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 시작. 요청된 참여자 수: 2
25-05-14 01:12:48.132 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료. 채널 ID: '73f726ca-5f81-4103-9b4c-7adedb256e38'
25-05-14 01:12:48.135 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:12:48.136 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:48.137 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:48.138 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:48.138 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-14 01:12:48.142 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 2개의 ReadStatus 저장 완료. 채널 ID: '73f726ca-5f81-4103-9b4c-7adedb256e38'
25-05-14 01:12:48.142 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 및 ReadStatus 설정 완료. 채널 ID: '73f726ca-5f81-4103-9b4c-7adedb256e38'
25-05-14 01:12:48.145 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:12:48.148 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:12:48.150 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:12:48.150 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:12:48.153 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 사용자 ID 'b8f3ad35-8f3a-4567-a7de-2d64a3d82e05'의 모든 채널 조회 시도 (ReadStatus 기반).
25-05-14 01:12:48.155 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-14 01:12:48.158 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.user_id=?
25-05-14 01:12:48.160 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 사용자 ID 'b8f3ad35-8f3a-4567-a7de-2d64a3d82e05'가 ReadStatus를 가진 채널 ID 목록: [73f726ca-5f81-4103-9b4c-7adedb256e38]
25-05-14 01:12:48.163 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.type=?
25-05-14 01:12:48.168 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id in (?) 
        and c1_0.type=?
25-05-14 01:12:48.170 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 사용자 ID 'b8f3ad35-8f3a-4567-a7de-2d64a3d82e05'의 공개 채널 및 구독 채널 조회. 총 2개 후보.
25-05-14 01:12:48.173 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:12:48.175 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:12:48.177 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:12:48.179 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:12:48.201 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:12:48.203 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:12:48.205 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:12:48.207 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: f2ac66a8-f095-4fa1-bd69-248f096a6f8c
25-05-14 01:12:48.208 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: f2ac66a8-f095-4fa1-bd69-248f096a6f8c
25-05-14 01:12:48.208 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: f2ac66a8-f095-4fa1-bd69-248f096a6f8c
25-05-14 01:12:48.213 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:12:48.215 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:12:48.216 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:48.217 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:12:48.219 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:12:48.220 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 6c75b1c3-2c0e-4cb8-ade0-732830b3797c
25-05-14 01:12:48.221 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 6c75b1c3-2c0e-4cb8-ade0-732830b3797c
25-05-14 01:12:48.221 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 6c75b1c3-2c0e-4cb8-ade0-732830b3797c
25-05-14 01:12:48.250 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:12:48.252 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:12:48.253 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:12:48.255 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: ad8f9e16-9762-4dae-8be5-62d3f48baba2
25-05-14 01:12:48.255 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: ad8f9e16-9762-4dae-8be5-62d3f48baba2
25-05-14 01:12:48.255 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: ad8f9e16-9762-4dae-8be5-62d3f48baba2
25-05-14 01:12:48.260 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:12:48.262 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:12:48.263 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:12:48.264 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:12:48.266 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:12:48.267 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 98b5e2c8-6236-4a2e-9194-b3b27062d106
25-05-14 01:12:48.268 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 98b5e2c8-6236-4a2e-9194-b3b27062d106
25-05-14 01:12:48.268 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 98b5e2c8-6236-4a2e-9194-b3b27062d106
25-05-14 01:12:48.272 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Public Channel'
25-05-14 01:12:48.273 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:12:48.275 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'ddb6d607-75c9-4e10-9219-77b9257d3363', 채널명: 'Public Channel'
25-05-14 01:12:48.277 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:12:48.280 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:12:48.301 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:12:48.304 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:12:48.305 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:12:48.305 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:12:48.306 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:12:48.307 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:12:48.308 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:12:48.308 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:12:48.312 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 01:12:48.315 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 01:13:19.328 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 25612 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:13:19.329 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:13:19.330 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 01:13:20.009 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:13:20.070 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 47 ms. Found 6 JPA repository interfaces.
25-05-14 01:13:20.071 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:13:20.072 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:13:20.072 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:13:21.236 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:13:21.408 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 01:13:21.411 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 01:13:21.531 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 01:13:21.571 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:13:21.640 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:13:21.673 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:13:22.009 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:13:22.048 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:13:22.062 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:13:23.130 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:13:23.144 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:13:23.146 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:13:23.147 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:13:23.148 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:13:23.149 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:13:23.150 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:13:23.151 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:13:23.158 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:13:23.161 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:13:23.164 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:13:23.165 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:13:23.166 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:13:23.167 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:13:23.169 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:13:23.171 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:13:23.172 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:13:23.174 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:13:23.175 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:13:23.176 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:13:23.178 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:13:23.179 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:13:23.180 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:13:23.184 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:13:23.647 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 01:13:23.718 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:13:24.593 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 01:13:24.646 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:13:25.683 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 01:13:25.748 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:13:25.748 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:13:25.759 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 01:13:25.772 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 24 ms
25-05-14 01:13:25.857 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 6.99 seconds (process running for 8.221)
25-05-14 01:13:26.534 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:13:26.614 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:13:26.653 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:13:26.697 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 149b77e9-d6fb-43a3-9b85-788a215a9b6d
25-05-14 01:13:26.700 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 149b77e9-d6fb-43a3-9b85-788a215a9b6d
25-05-14 01:13:26.701 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 149b77e9-d6fb-43a3-9b85-788a215a9b6d
25-05-14 01:13:26.741 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:13:26.762 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:13:26.774 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:13:26.777 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:13:26.781 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:13:26.783 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 1ba57065-220e-4a2b-855b-3eb98bd26f91
25-05-14 01:13:26.785 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 1ba57065-220e-4a2b-855b-3eb98bd26f91
25-05-14 01:13:26.785 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 1ba57065-220e-4a2b-855b-3eb98bd26f91
25-05-14 01:13:26.809 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 시작. 요청된 참여자 수: 2
25-05-14 01:13:26.815 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료. 채널 ID: 'e3b48ea4-d7ca-4dfb-bd0a-6152ea82110e'
25-05-14 01:13:26.828 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:13:26.829 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:13:26.830 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:13:26.831 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-14 01:13:26.843 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 요청된 참여자 ID 중 일부를 찾을 수 없습니다. 요청된 ID 수: 2, 찾은 사용자 수: 1
25-05-14 01:13:26.850 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 1개의 ReadStatus 저장 완료. 채널 ID: 'e3b48ea4-d7ca-4dfb-bd0a-6152ea82110e'
25-05-14 01:13:26.850 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 및 ReadStatus 설정 완료. 채널 ID: 'e3b48ea4-d7ca-4dfb-bd0a-6152ea82110e'
25-05-14 01:13:26.859 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:13:26.868 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:13:26.869 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:13:26.920 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:13:26.920 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:13:26.921 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:13:26.922 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:13:26.922 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:13:26.924 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:13:26.925 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:13:26.925 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:13:26.928 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 01:13:26.931 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 01:16:49.770 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 31804 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:16:49.772 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:16:49.773 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 01:16:50.575 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:16:50.619 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34 ms. Found 6 JPA repository interfaces.
25-05-14 01:16:50.621 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:16:50.622 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:16:50.622 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:16:51.784 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:16:52.008 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 01:16:52.010 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 01:16:52.122 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 01:16:52.157 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:16:52.215 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:16:52.263 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:16:52.560 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:16:52.627 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:16:52.648 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:16:53.672 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:16:53.694 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:16:53.696 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:16:53.696 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:16:53.696 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:16:53.697 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:16:53.697 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:16:53.698 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:16:53.704 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:16:53.707 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:16:53.709 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:16:53.710 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:16:53.711 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:16:53.713 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:16:53.713 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:16:53.714 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:16:53.717 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:16:53.718 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:16:53.720 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:16:53.721 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:16:53.723 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:16:53.724 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:16:53.726 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:16:53.730 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:16:54.146 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 01:16:54.199 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:16:55.011 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 01:16:55.055 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:16:55.921 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 01:16:55.977 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:16:55.977 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:16:55.984 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 01:16:56.007 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 30 ms
25-05-14 01:16:56.087 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 6.758 seconds (process running for 8.026)
25-05-14 01:16:56.710 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:16:56.811 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:16:56.859 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:16:56.912 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 913fa0bd-1404-4e76-9820-a72aa6294c19
25-05-14 01:16:56.919 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 913fa0bd-1404-4e76-9820-a72aa6294c19
25-05-14 01:16:56.920 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 913fa0bd-1404-4e76-9820-a72aa6294c19
25-05-14 01:16:56.971 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:16:56.994 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:16:57.008 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:16:57.010 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:16:57.012 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:16:57.014 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 0aac6329-95c8-481d-aa9d-c66a0bf83f2d
25-05-14 01:16:57.015 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 0aac6329-95c8-481d-aa9d-c66a0bf83f2d
25-05-14 01:16:57.016 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 0aac6329-95c8-481d-aa9d-c66a0bf83f2d
25-05-14 01:16:57.037 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 시작. 요청된 참여자 수: 2
25-05-14 01:16:57.057 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:16:57.058 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:16:57.059 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-14 01:16:57.073 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 실패: 존재하지 않는 사용자 ID가 포함되어 있습니다: [c8b86895-743f-420a-9711-9a91f5e10b44]
25-05-14 01:16:57.120 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:16:57.121 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:16:57.122 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:16:57.123 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:16:57.123 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:16:57.125 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:16:57.126 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:16:57.127 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:16:57.130 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 01:16:57.135 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 01:18:47.590 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Starting MessageApiIntegrationTest using Java 17.0.14 with PID 9824 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:18:47.592 [main] DEBUG c.s.m.d.i.MessageApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:18:47.593 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 01:18:48.348 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:18:48.400 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 45 ms. Found 6 JPA repository interfaces.
25-05-14 01:18:48.402 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:18:48.402 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:18:48.403 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:18:49.593 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:18:49.815 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 01:18:49.818 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 01:18:49.953 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 01:18:49.982 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:18:50.059 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:18:50.103 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:18:50.415 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:18:50.483 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:18:50.511 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:18:51.551 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:18:51.566 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:18:51.568 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:18:51.569 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:18:51.569 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:18:51.570 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:18:51.570 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:18:51.571 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:18:51.576 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:18:51.583 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:18:51.584 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:18:51.586 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:18:51.586 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:18:51.587 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:18:51.588 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:18:51.591 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:18:51.592 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:18:51.593 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:18:51.595 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:18:51.596 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:18:51.597 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:18:51.598 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:18:51.599 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:18:51.604 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:18:52.052 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 01:18:52.121 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:18:53.004 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 01:18:53.045 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:18:54.020 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 01:18:54.089 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:18:54.089 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:18:54.098 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 01:18:54.116 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 27 ms
25-05-14 01:18:54.188 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Started MessageApiIntegrationTest in 7.172 seconds (process running for 8.452)
25-05-14 01:18:54.905 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:18:54.906 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:18:54.907 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:18:54.907 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:18:54.908 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:18:54.910 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:18:54.911 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:18:54.911 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:18:54.913 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 01:18:54.918 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 01:23:11.109 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Starting MessageApiIntegrationTest using Java 17.0.14 with PID 29500 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:23:11.111 [main] DEBUG c.s.m.d.i.MessageApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:23:11.112 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 01:23:11.864 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:23:11.913 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 40 ms. Found 6 JPA repository interfaces.
25-05-14 01:23:11.916 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:23:11.916 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:23:11.916 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:23:13.051 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:23:13.240 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 01:23:13.243 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 01:23:13.372 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 01:23:13.411 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:23:13.496 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:23:13.533 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:23:13.876 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:23:13.919 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:23:13.940 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:23:15.099 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:23:15.111 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:23:15.113 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:23:15.115 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:23:15.115 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:23:15.116 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:23:15.117 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:23:15.118 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:23:15.122 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:23:15.124 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:23:15.126 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:23:15.127 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:23:15.128 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:23:15.129 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:23:15.131 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:23:15.132 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:23:15.133 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:23:15.135 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:23:15.135 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:23:15.136 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:23:15.138 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:23:15.139 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:23:15.140 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:23:15.146 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:23:15.614 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 01:23:15.678 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:23:16.593 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 01:23:16.640 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:23:17.759 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 01:23:17.863 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:23:17.863 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:23:17.872 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 01:23:17.895 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 32 ms
25-05-14 01:23:17.988 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Started MessageApiIntegrationTest in 7.381 seconds (process running for 8.599)
25-05-14 01:23:18.755 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:23:18.840 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:23:18.878 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:23:18.925 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: f9313cb7-d490-4b95-b4e8-e2d0d2c35cbc
25-05-14 01:23:18.932 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: f9313cb7-d490-4b95-b4e8-e2d0d2c35cbc
25-05-14 01:23:18.932 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: f9313cb7-d490-4b95-b4e8-e2d0d2c35cbc
25-05-14 01:23:18.992 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:23:19.003 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:23:19.010 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '8e52231f-53d0-4bfb-9bb1-255e7e3a8a32', 채널명: 'Message Channel'
25-05-14 01:23:19.023 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:23:19.048 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:23:19.105 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:23:19.107 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:23:19.108 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:23:19.110 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 5dd7013b-19b4-4b7c-80a1-e0825545d688
25-05-14 01:23:19.110 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 5dd7013b-19b4-4b7c-80a1-e0825545d688
25-05-14 01:23:19.111 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 5dd7013b-19b4-4b7c-80a1-e0825545d688
25-05-14 01:23:19.115 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:23:19.116 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:23:19.118 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'bff9f225-4f3f-478c-9668-c220eb23c541', 채널명: 'Message Channel'
25-05-14 01:23:19.120 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:23:19.123 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:23:19.149 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:23:19.150 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:23:19.153 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:23:19.155 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: c6567d45-db38-42fb-b075-638b359a7436
25-05-14 01:23:19.156 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: c6567d45-db38-42fb-b075-638b359a7436
25-05-14 01:23:19.156 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: c6567d45-db38-42fb-b075-638b359a7436
25-05-14 01:23:19.160 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:23:19.162 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:23:19.163 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'db2d137a-9418-438e-b548-2fe7ea81f179', 채널명: 'Message Channel'
25-05-14 01:23:19.166 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:23:19.168 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:23:19.184 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:23:19.185 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:23:19.188 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:23:19.190 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 148c837f-18d4-4e9c-92a9-44bbc1223a87
25-05-14 01:23:19.192 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 148c837f-18d4-4e9c-92a9-44bbc1223a87
25-05-14 01:23:19.192 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 148c837f-18d4-4e9c-92a9-44bbc1223a87
25-05-14 01:23:19.196 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:23:19.198 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:23:19.200 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'f6bf450b-2c51-4edf-b73f-c7192d731d42', 채널명: 'Message Channel'
25-05-14 01:23:19.201 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:23:19.204 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:23:19.216 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:23:19.218 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:23:19.220 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:23:19.223 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 73ad606f-84fb-4f82-9bab-da97eac04cc6
25-05-14 01:23:19.224 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 73ad606f-84fb-4f82-9bab-da97eac04cc6
25-05-14 01:23:19.225 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 73ad606f-84fb-4f82-9bab-da97eac04cc6
25-05-14 01:23:19.228 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:23:19.229 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:23:19.231 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '2f522d51-4530-4bd1-97d9-859807e8bb0f', 채널명: 'Message Channel'
25-05-14 01:23:19.233 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:23:19.237 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:23:19.251 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:23:19.253 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:23:19.255 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:23:19.258 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: b26d1ab0-df29-4429-aff9-7e915f84bd04
25-05-14 01:23:19.259 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: b26d1ab0-df29-4429-aff9-7e915f84bd04
25-05-14 01:23:19.260 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: b26d1ab0-df29-4429-aff9-7e915f84bd04
25-05-14 01:23:19.266 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:23:19.268 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:23:19.270 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'faa0a8d9-bfb4-4ff7-8d1b-735041692857', 채널명: 'Message Channel'
25-05-14 01:23:19.273 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:23:19.277 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:23:19.290 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 시작
25-05-14 01:23:19.300 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:23:19.332 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:23:19.333 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:23:19.334 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:23:19.335 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: d46cbf3d-e3d9-4905-8752-47bffd42a663
25-05-14 01:23:19.336 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: d46cbf3d-e3d9-4905-8752-47bffd42a663
25-05-14 01:23:19.336 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: d46cbf3d-e3d9-4905-8752-47bffd42a663
25-05-14 01:23:19.338 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:23:19.339 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:23:19.341 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '322e2890-d572-4b48-aa92-a2283894c20c', 채널명: 'Message Channel'
25-05-14 01:23:19.344 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:23:19.347 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:23:19.352 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 시작. ID: '52d1a950-7951-4652-95c1-2812dcc55328'
25-05-14 01:23:19.396 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:23:19.403 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - ID '52d1a950-7951-4652-95c1-2812dcc55328'에 해당하는 삭제할 메시지를 찾을 수 없습니다.
25-05-14 01:23:19.417 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:23:19.419 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:23:19.422 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:23:19.423 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 33bf3ac4-87d5-4898-b79e-3837059a96d7
25-05-14 01:23:19.424 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 33bf3ac4-87d5-4898-b79e-3837059a96d7
25-05-14 01:23:19.425 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 33bf3ac4-87d5-4898-b79e-3837059a96d7
25-05-14 01:23:19.428 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:23:19.430 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:23:19.432 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'b8b8addb-83c6-45e4-9887-9f19698e237f', 채널명: 'Message Channel'
25-05-14 01:23:19.434 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:23:19.438 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:23:19.455 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:23:19.456 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:23:19.458 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:23:19.459 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: ba2e8fc5-a767-4ad6-8175-508113b7e66d
25-05-14 01:23:19.460 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: ba2e8fc5-a767-4ad6-8175-508113b7e66d
25-05-14 01:23:19.460 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: ba2e8fc5-a767-4ad6-8175-508113b7e66d
25-05-14 01:23:19.462 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:23:19.463 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:23:19.466 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'ba6e8270-2e5f-430f-8456-0cec95ff53a7', 채널명: 'Message Channel'
25-05-14 01:23:19.469 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:23:19.472 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:23:19.498 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:23:19.499 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:23:19.500 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:23:19.501 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:23:19.502 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:23:19.505 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:23:19.505 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:23:19.506 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:23:19.509 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 01:23:19.513 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 01:23:38.773 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Starting MessageApiIntegrationTest using Java 17.0.14 with PID 25944 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:23:38.775 [main] DEBUG c.s.m.d.i.MessageApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:23:38.776 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 01:23:39.527 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:23:39.589 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 49 ms. Found 6 JPA repository interfaces.
25-05-14 01:23:39.590 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:23:39.590 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:23:39.591 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:23:40.736 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:23:40.939 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 01:23:40.942 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 01:23:41.044 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 01:23:41.072 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:23:41.123 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:23:41.173 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:23:41.465 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:23:41.510 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:23:41.524 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:23:42.596 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:23:42.618 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:23:42.620 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:23:42.622 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:23:42.622 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:23:42.622 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:23:42.623 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:23:42.623 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:23:42.628 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:23:42.631 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:23:42.633 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:23:42.633 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:23:42.635 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:23:42.636 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:23:42.637 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:23:42.638 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:23:42.639 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:23:42.639 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:23:42.640 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:23:42.641 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:23:42.642 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:23:42.642 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:23:42.643 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:23:42.650 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:23:43.092 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 01:23:43.153 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:23:43.948 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 01:23:43.997 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:23:44.976 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 01:23:45.025 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:23:45.025 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:23:45.035 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 01:23:45.054 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 28 ms
25-05-14 01:23:45.125 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Started MessageApiIntegrationTest in 6.832 seconds (process running for 8.143)
25-05-14 01:23:45.743 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:23:45.829 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:23:45.874 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:23:45.941 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 4c0ed658-04bf-4bcb-837f-74acecceb6a5
25-05-14 01:23:45.949 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 4c0ed658-04bf-4bcb-837f-74acecceb6a5
25-05-14 01:23:45.949 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 4c0ed658-04bf-4bcb-837f-74acecceb6a5
25-05-14 01:23:46.008 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:23:46.019 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:23:46.025 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '07997c9a-b2b9-4a91-8b83-526a3a3ba0f4', 채널명: 'Message Channel'
25-05-14 01:23:46.038 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:23:46.064 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:23:46.130 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:23:46.131 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:23:46.132 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:23:46.133 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:23:46.135 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:23:46.137 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:23:46.138 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:23:46.139 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:23:46.142 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 01:23:46.145 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 01:25:06.135 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Starting MessageApiIntegrationTest using Java 17.0.14 with PID 27356 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:25:06.137 [main] DEBUG c.s.m.d.i.MessageApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:25:06.137 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 01:25:06.885 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:25:06.941 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 45 ms. Found 6 JPA repository interfaces.
25-05-14 01:25:06.943 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:25:06.943 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:25:06.943 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:25:08.113 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:25:08.367 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 01:25:08.371 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 01:25:08.528 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 01:25:08.575 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:25:08.668 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:25:08.716 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:25:09.004 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:25:09.046 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:25:09.072 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:25:10.211 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:25:10.224 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:25:10.227 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:25:10.229 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:25:10.230 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:25:10.231 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:25:10.232 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:25:10.233 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:25:10.238 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:25:10.241 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:25:10.242 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:25:10.243 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:25:10.244 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:25:10.246 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:25:10.247 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:25:10.248 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:25:10.250 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:25:10.251 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:25:10.252 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:25:10.253 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:25:10.254 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:25:10.255 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:25:10.256 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:25:10.260 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:25:10.756 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 01:25:10.838 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:25:11.924 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 01:25:11.967 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:25:13.289 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 01:25:13.372 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:25:13.373 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:25:13.383 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 01:25:13.407 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 34 ms
25-05-14 01:25:13.535 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Started MessageApiIntegrationTest in 7.893 seconds (process running for 9.197)
25-05-14 01:25:14.255 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:25:14.358 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:25:14.403 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:25:14.453 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 0170cf22-3019-4ae7-9cdb-ea136a637611
25-05-14 01:25:14.460 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 0170cf22-3019-4ae7-9cdb-ea136a637611
25-05-14 01:25:14.460 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 0170cf22-3019-4ae7-9cdb-ea136a637611
25-05-14 01:25:14.501 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:25:14.511 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:25:14.516 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'ffa7b8ba-5042-400d-99ca-06e26b0e30c1', 채널명: 'Message Channel'
25-05-14 01:25:14.527 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:25:14.544 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:25:14.608 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:25:14.610 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:25:14.613 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:25:14.616 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 82b5cfe0-aae5-4cb9-a010-12b2a43143d8
25-05-14 01:25:14.617 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 82b5cfe0-aae5-4cb9-a010-12b2a43143d8
25-05-14 01:25:14.617 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 82b5cfe0-aae5-4cb9-a010-12b2a43143d8
25-05-14 01:25:14.621 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:25:14.623 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:25:14.625 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '5939e6d8-9c8f-4a94-9b93-2debf69ad393', 채널명: 'Message Channel'
25-05-14 01:25:14.628 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:25:14.633 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:25:14.659 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '5939e6d8-9c8f-4a94-9b93-2debf69ad393', 작성자 ID: '82b5cfe0-aae5-4cb9-a010-12b2a43143d8'
25-05-14 01:25:14.671 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '5939e6d8-9c8f-4a94-9b93-2debf69ad393') 및 작성자(ID: '82b5cfe0-aae5-4cb9-a010-12b2a43143d8') 확인 완료.
25-05-14 01:25:14.672 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:25:14.689 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: 'ba13ce6d-48d3-4535-844e-7347339cb8e7', 채널 ID: '5939e6d8-9c8f-4a94-9b93-2debf69ad393'
25-05-14 01:25:14.705 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 시작. ID: 'ba13ce6d-48d3-4535-844e-7347339cb8e7'
25-05-14 01:25:14.777 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:25:14.787 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:25:14.788 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:25:14.790 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:25:14.800 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:25:14.815 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 완료. ID: 'ba13ce6d-48d3-4535-844e-7347339cb8e7'
25-05-14 01:25:14.842 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:25:14.844 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:25:14.847 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:25:14.850 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: ac827b42-1948-41b5-b599-11a3c449630b
25-05-14 01:25:14.852 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: ac827b42-1948-41b5-b599-11a3c449630b
25-05-14 01:25:14.853 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: ac827b42-1948-41b5-b599-11a3c449630b
25-05-14 01:25:14.859 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:25:14.864 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:25:14.867 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '081a2f60-cf97-4227-9219-f97342088f84', 채널명: 'Message Channel'
25-05-14 01:25:14.869 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:25:14.889 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:25:14.901 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '081a2f60-cf97-4227-9219-f97342088f84', 작성자 ID: 'ac827b42-1948-41b5-b599-11a3c449630b'
25-05-14 01:25:14.911 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '081a2f60-cf97-4227-9219-f97342088f84') 및 작성자(ID: 'ac827b42-1948-41b5-b599-11a3c449630b') 확인 완료.
25-05-14 01:25:14.912 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:25:14.913 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '1f3d6ff6-fdaa-49b9-86c5-f35343a34e8f', 채널 ID: '081a2f60-cf97-4227-9219-f97342088f84'
25-05-14 01:25:15.033 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:25:15.036 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:25:15.039 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:25:15.041 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: be378f49-a03e-4468-996e-16e6c096bd7f
25-05-14 01:25:15.043 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: be378f49-a03e-4468-996e-16e6c096bd7f
25-05-14 01:25:15.043 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: be378f49-a03e-4468-996e-16e6c096bd7f
25-05-14 01:25:15.047 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:25:15.049 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:25:15.053 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '0c4e0b82-d83d-480d-bf49-7f0e5ddf1ba8', 채널명: 'Message Channel'
25-05-14 01:25:15.055 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:25:15.059 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:25:15.065 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '0c4e0b82-d83d-480d-bf49-7f0e5ddf1ba8', 작성자 ID: 'be378f49-a03e-4468-996e-16e6c096bd7f'
25-05-14 01:25:15.066 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '0c4e0b82-d83d-480d-bf49-7f0e5ddf1ba8') 및 작성자(ID: 'be378f49-a03e-4468-996e-16e6c096bd7f') 확인 완료.
25-05-14 01:25:15.066 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:25:15.067 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '65da0752-bbaa-41dc-a055-975ebfd4a97b', 채널 ID: '0c4e0b82-d83d-480d-bf49-7f0e5ddf1ba8'
25-05-14 01:25:15.071 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '0c4e0b82-d83d-480d-bf49-7f0e5ddf1ba8', 작성자 ID: 'be378f49-a03e-4468-996e-16e6c096bd7f'
25-05-14 01:25:15.073 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '0c4e0b82-d83d-480d-bf49-7f0e5ddf1ba8') 및 작성자(ID: 'be378f49-a03e-4468-996e-16e6c096bd7f') 확인 완료.
25-05-14 01:25:15.073 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:25:15.075 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '91c2cffb-c778-4244-a3a7-3c4813e50895', 채널 ID: '0c4e0b82-d83d-480d-bf49-7f0e5ddf1ba8'
25-05-14 01:25:15.098 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:25:15.100 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:25:15.103 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:25:15.104 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 9fefaf61-132e-4460-abf3-8384d28c376a
25-05-14 01:25:15.105 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 9fefaf61-132e-4460-abf3-8384d28c376a
25-05-14 01:25:15.105 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 9fefaf61-132e-4460-abf3-8384d28c376a
25-05-14 01:25:15.109 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:25:15.111 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:25:15.113 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '2b4536d6-23de-4c8f-af0c-375c9901209c', 채널명: 'Message Channel'
25-05-14 01:25:15.117 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:25:15.169 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:25:15.216 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:25:15.218 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:25:15.222 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:25:15.228 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: fb8818e9-59d9-4f86-bc3f-e2ba29f518e6
25-05-14 01:25:15.229 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: fb8818e9-59d9-4f86-bc3f-e2ba29f518e6
25-05-14 01:25:15.230 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: fb8818e9-59d9-4f86-bc3f-e2ba29f518e6
25-05-14 01:25:15.235 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:25:15.239 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:25:15.241 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'b47fd0c2-a8a5-4de3-8644-69092020fbf0', 채널명: 'Message Channel'
25-05-14 01:25:15.243 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:25:15.247 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:25:15.262 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 시작
25-05-14 01:25:15.265 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:25:15.295 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:25:15.297 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:25:15.298 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:25:15.300 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 51f0dfc1-d6a7-4e86-a80d-8532426b4097
25-05-14 01:25:15.300 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 51f0dfc1-d6a7-4e86-a80d-8532426b4097
25-05-14 01:25:15.302 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 51f0dfc1-d6a7-4e86-a80d-8532426b4097
25-05-14 01:25:15.305 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:25:15.307 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:25:15.308 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'bc5e7406-50b7-44a2-b5d2-e1a362f69067', 채널명: 'Message Channel'
25-05-14 01:25:15.312 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:25:15.317 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:25:15.323 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 시작. ID: 'c42c8b6c-64ad-4a3f-82af-2a637ae019e7'
25-05-14 01:25:15.325 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:25:15.326 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - ID 'c42c8b6c-64ad-4a3f-82af-2a637ae019e7'에 해당하는 삭제할 메시지를 찾을 수 없습니다.
25-05-14 01:25:15.341 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:25:15.342 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:25:15.344 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:25:15.347 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 96bd530d-cd6a-44bb-a854-041f3336d328
25-05-14 01:25:15.349 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 96bd530d-cd6a-44bb-a854-041f3336d328
25-05-14 01:25:15.349 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 96bd530d-cd6a-44bb-a854-041f3336d328
25-05-14 01:25:15.354 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:25:15.358 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:25:15.360 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'c8191213-a515-4b40-a906-0149acd45774', 채널명: 'Message Channel'
25-05-14 01:25:15.363 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:25:15.367 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:25:15.373 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'bce090b0-76a7-425e-893a-c01bfa347556', 작성자 ID: '96bd530d-cd6a-44bb-a854-041f3336d328'
25-05-14 01:25:15.373 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:25:15.386 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:25:15.387 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:25:15.389 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:25:15.390 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 1c23c19d-e45d-45f0-bf24-6a56652d05d0
25-05-14 01:25:15.390 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 1c23c19d-e45d-45f0-bf24-6a56652d05d0
25-05-14 01:25:15.390 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 1c23c19d-e45d-45f0-bf24-6a56652d05d0
25-05-14 01:25:15.393 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:25:15.395 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:25:15.397 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'dc8890cf-9b68-4c78-b067-f441dcba95e9', 채널명: 'Message Channel'
25-05-14 01:25:15.399 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:25:15.401 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:25:15.406 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'dc8890cf-9b68-4c78-b067-f441dcba95e9', 작성자 ID: '1c23c19d-e45d-45f0-bf24-6a56652d05d0'
25-05-14 01:25:15.407 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: 'dc8890cf-9b68-4c78-b067-f441dcba95e9') 및 작성자(ID: '1c23c19d-e45d-45f0-bf24-6a56652d05d0') 확인 완료.
25-05-14 01:25:15.407 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 1개 처리 시작.
25-05-14 01:25:15.408 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 파일 메타데이터 생성 및 저장 시작. 파일명: 'test.txt', 크기: 12 bytes, 타입: 'text/plain'
25-05-14 01:25:15.411 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 파일 메타데이터 DB 저장 완료. ID: '38144283-dd09-45bc-b732-ce22406ea79d', 파일명: 'test.txt'
25-05-14 01:25:15.412 [main] DEBUG c.s.m.d.r.LocalBinaryContentStorage  - 파일 저장 시도: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget\38144283-dd09-45bc-b732-ce22406ea79d
25-05-14 01:25:15.413 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 파일 저장 성공: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget\38144283-dd09-45bc-b732-ce22406ea79d
25-05-14 01:25:15.413 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 실제 파일 저장 완료. 저장소 ID: '38144283-dd09-45bc-b732-ce22406ea79d' (메타데이터 ID와 동일)
25-05-14 01:25:15.414 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 #1 ('test.txt') 저장 및 연결 완료. 메타데이터 ID: '38144283-dd09-45bc-b732-ce22406ea79d'
25-05-14 01:25:15.415 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 총 1개의 첨부파일 처리 완료.
25-05-14 01:25:15.416 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: 'c1899a44-749c-4744-aba9-13d7e4158dec', 채널 ID: 'dc8890cf-9b68-4c78-b067-f441dcba95e9'
25-05-14 01:25:15.441 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:25:15.443 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:25:15.444 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:25:15.447 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:25:15.448 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:25:15.451 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:25:15.452 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:25:15.453 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:25:15.456 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 01:25:15.460 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 01:25:25.653 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Starting MessageApiIntegrationTest using Java 17.0.14 with PID 14308 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:25:25.654 [main] DEBUG c.s.m.d.i.MessageApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:25:25.655 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 01:25:26.391 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:25:26.442 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 6 JPA repository interfaces.
25-05-14 01:25:26.443 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:25:26.443 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:25:26.443 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:25:27.627 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:25:27.925 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 01:25:27.929 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 01:25:28.072 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 01:25:28.110 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:25:28.202 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:25:28.250 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:25:28.551 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:25:28.595 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:25:28.617 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:25:29.653 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:25:29.673 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:25:29.675 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:25:29.676 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:25:29.676 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:25:29.677 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:25:29.678 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:25:29.679 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:25:29.684 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:25:29.686 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:25:29.688 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:25:29.688 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:25:29.689 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:25:29.690 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:25:29.691 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:25:29.693 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:25:29.694 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:25:29.696 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:25:29.697 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:25:29.697 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:25:29.698 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:25:29.700 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:25:29.701 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:25:29.706 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:25:30.218 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 01:25:30.314 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:25:31.328 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 01:25:31.384 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:25:32.570 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 01:25:32.649 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:25:32.649 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:25:32.661 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 01:25:32.686 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 36 ms
25-05-14 01:25:32.797 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Started MessageApiIntegrationTest in 7.614 seconds (process running for 8.819)
25-05-14 01:25:33.533 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:25:33.624 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:25:33.672 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:25:33.732 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 202b58a5-c6a5-49da-b8ca-6666661833b3
25-05-14 01:25:33.739 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 202b58a5-c6a5-49da-b8ca-6666661833b3
25-05-14 01:25:33.740 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 202b58a5-c6a5-49da-b8ca-6666661833b3
25-05-14 01:25:33.810 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:25:33.822 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:25:33.830 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '5b649a63-99ef-4434-b14a-d3e20dd8dd7d', 채널명: 'Message Channel'
25-05-14 01:25:33.844 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:25:33.871 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:25:33.979 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:25:33.980 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:25:33.982 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:25:33.983 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:25:33.984 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:25:33.987 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:25:33.989 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:25:33.990 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:25:33.993 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 01:25:33.998 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 01:27:38.102 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Starting MessageApiIntegrationTest using Java 17.0.14 with PID 18852 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:27:38.104 [main] DEBUG c.s.m.d.i.MessageApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:27:38.105 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 01:27:38.884 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:27:38.929 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 32 ms. Found 6 JPA repository interfaces.
25-05-14 01:27:38.930 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:27:38.931 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:27:38.931 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:27:40.074 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:27:40.282 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 01:27:40.285 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 01:27:40.394 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 01:27:40.428 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:27:40.502 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:27:40.554 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:27:40.838 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:27:40.907 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:27:40.929 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:27:41.992 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:27:42.009 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:27:42.013 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:27:42.014 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:27:42.015 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:27:42.016 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:27:42.017 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:27:42.017 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:27:42.022 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:27:42.025 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:27:42.027 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:27:42.028 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:27:42.029 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:27:42.029 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:27:42.030 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:27:42.031 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:27:42.032 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:27:42.034 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:27:42.037 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:27:42.038 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:27:42.041 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:27:42.042 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:27:42.043 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:27:42.048 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:27:42.450 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 01:27:42.516 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:27:43.374 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 01:27:43.413 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:27:44.385 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 01:27:44.442 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:27:44.442 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:27:44.453 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 01:27:44.477 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 35 ms
25-05-14 01:27:44.562 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Started MessageApiIntegrationTest in 6.941 seconds (process running for 8.269)
25-05-14 01:27:45.199 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:27:45.279 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:27:45.310 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:27:45.366 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 2fa86249-2dbb-497f-93e3-bd7971d963c8
25-05-14 01:27:45.372 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 2fa86249-2dbb-497f-93e3-bd7971d963c8
25-05-14 01:27:45.373 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 2fa86249-2dbb-497f-93e3-bd7971d963c8
25-05-14 01:27:45.421 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:27:45.432 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:27:45.439 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '7c3ebc70-8d14-4f54-b0d0-16a179c5d9f6', 채널명: 'Message Channel'
25-05-14 01:27:45.452 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:27:45.480 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:27:45.508 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID 'cac7b21e-60fa-49ba-bc62-28e6fdb81b31'의 메시지 목록 조회 시도. 커서: 'null', 크기: 10
25-05-14 01:27:45.543 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:27:45.549 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:27:45.550 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:27:45.551 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:27:45.555 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - 채널 ID 'cac7b21e-60fa-49ba-bc62-28e6fdb81b31'를 찾을 수 없어 메시지 목록 조회를 중단합니다.
25-05-14 01:27:45.595 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:27:45.597 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:27:45.600 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:27:45.603 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 30c9454c-0c13-4c37-adf5-5fbf168755ec
25-05-14 01:27:45.604 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 30c9454c-0c13-4c37-adf5-5fbf168755ec
25-05-14 01:27:45.605 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 30c9454c-0c13-4c37-adf5-5fbf168755ec
25-05-14 01:27:45.609 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:27:45.612 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:27:45.614 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '620aa403-239a-4e6e-b130-741ccf126013', 채널명: 'Message Channel'
25-05-14 01:27:45.617 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:27:45.621 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:27:45.637 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '620aa403-239a-4e6e-b130-741ccf126013', 작성자 ID: '30c9454c-0c13-4c37-adf5-5fbf168755ec'
25-05-14 01:27:45.648 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '620aa403-239a-4e6e-b130-741ccf126013') 및 작성자(ID: '30c9454c-0c13-4c37-adf5-5fbf168755ec') 확인 완료.
25-05-14 01:27:45.649 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:27:45.661 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '3e398d9e-1a23-4d5c-a477-65f6da6c371e', 채널 ID: '620aa403-239a-4e6e-b130-741ccf126013'
25-05-14 01:27:45.674 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 시작. ID: '3e398d9e-1a23-4d5c-a477-65f6da6c371e'
25-05-14 01:27:45.683 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:27:45.683 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:27:45.684 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:27:45.685 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:27:45.694 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:27:45.701 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 완료. ID: '3e398d9e-1a23-4d5c-a477-65f6da6c371e'
25-05-14 01:27:45.716 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:27:45.718 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:27:45.721 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:27:45.723 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 6250311c-5908-421d-8ae8-2ed87e1f8099
25-05-14 01:27:45.726 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 6250311c-5908-421d-8ae8-2ed87e1f8099
25-05-14 01:27:45.726 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 6250311c-5908-421d-8ae8-2ed87e1f8099
25-05-14 01:27:45.730 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:27:45.732 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:27:45.734 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '254abf72-2fa8-4268-a287-fa0eb1dd1245', 채널명: 'Message Channel'
25-05-14 01:27:45.737 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:27:45.740 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:27:45.745 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '254abf72-2fa8-4268-a287-fa0eb1dd1245', 작성자 ID: '6250311c-5908-421d-8ae8-2ed87e1f8099'
25-05-14 01:27:45.746 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '254abf72-2fa8-4268-a287-fa0eb1dd1245') 및 작성자(ID: '6250311c-5908-421d-8ae8-2ed87e1f8099') 확인 완료.
25-05-14 01:27:45.746 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:27:45.747 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '747a0c2d-cbf5-49cb-85b0-6e73c2770a3f', 채널 ID: '254abf72-2fa8-4268-a287-fa0eb1dd1245'
25-05-14 01:27:45.805 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:27:45.807 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:27:45.809 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:27:45.812 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 0a486189-36f4-4b23-a215-cbdce888147d
25-05-14 01:27:45.814 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 0a486189-36f4-4b23-a215-cbdce888147d
25-05-14 01:27:45.814 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 0a486189-36f4-4b23-a215-cbdce888147d
25-05-14 01:27:45.817 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:27:45.818 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:27:45.819 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '8fa32f28-255d-4bcd-aaff-5da653fb50a6', 채널명: 'Message Channel'
25-05-14 01:27:45.821 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:27:45.823 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:27:45.826 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '8fa32f28-255d-4bcd-aaff-5da653fb50a6', 작성자 ID: '0a486189-36f4-4b23-a215-cbdce888147d'
25-05-14 01:27:45.826 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '8fa32f28-255d-4bcd-aaff-5da653fb50a6') 및 작성자(ID: '0a486189-36f4-4b23-a215-cbdce888147d') 확인 완료.
25-05-14 01:27:45.827 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:27:45.827 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '4feea9ac-dd19-46cd-80c9-9df0e79e25d9', 채널 ID: '8fa32f28-255d-4bcd-aaff-5da653fb50a6'
25-05-14 01:27:45.830 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '8fa32f28-255d-4bcd-aaff-5da653fb50a6', 작성자 ID: '0a486189-36f4-4b23-a215-cbdce888147d'
25-05-14 01:27:45.830 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '8fa32f28-255d-4bcd-aaff-5da653fb50a6') 및 작성자(ID: '0a486189-36f4-4b23-a215-cbdce888147d') 확인 완료.
25-05-14 01:27:45.830 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:27:45.831 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '58c6f5a1-b3ff-4a89-801c-cca052cdba9a', 채널 ID: '8fa32f28-255d-4bcd-aaff-5da653fb50a6'
25-05-14 01:27:45.833 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID '8fa32f28-255d-4bcd-aaff-5da653fb50a6'의 메시지 목록 조회 시도. 커서: 'null', 크기: 10
25-05-14 01:27:45.836 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:27:45.836 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:27:45.837 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:27:45.838 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:27:45.839 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:27:45.840 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:27:45.841 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 최신 메시지부터 조회
25-05-14 01:27:45.846 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:27:45.849 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID '8fa32f28-255d-4bcd-aaff-5da653fb50a6'의 메시지 2개 조회 완료. 다음 페이지 존재 여부: false
25-05-14 01:27:45.880 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:27:45.882 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:27:45.884 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:27:45.885 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 2ae99664-fc65-483a-a1a9-d96a7ba4f560
25-05-14 01:27:45.886 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 2ae99664-fc65-483a-a1a9-d96a7ba4f560
25-05-14 01:27:45.886 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 2ae99664-fc65-483a-a1a9-d96a7ba4f560
25-05-14 01:27:45.888 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:27:45.889 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:27:45.890 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '35c15ab9-6344-4739-bf1f-e95b0b3760d8', 채널명: 'Message Channel'
25-05-14 01:27:45.892 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:27:45.894 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:27:45.899 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '35c15ab9-6344-4739-bf1f-e95b0b3760d8', 작성자 ID: '2ae99664-fc65-483a-a1a9-d96a7ba4f560'
25-05-14 01:27:45.900 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '35c15ab9-6344-4739-bf1f-e95b0b3760d8') 및 작성자(ID: '2ae99664-fc65-483a-a1a9-d96a7ba4f560') 확인 완료.
25-05-14 01:27:45.900 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:27:45.901 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: 'ffc2f032-5bf6-434c-8659-a24184c7965b', 채널 ID: '35c15ab9-6344-4739-bf1f-e95b0b3760d8'
25-05-14 01:27:45.908 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 시작
25-05-14 01:27:45.913 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 완료
25-05-14 01:27:45.927 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:27:45.929 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:27:45.932 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:27:45.934 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 98078f22-b43d-466d-9b9e-a2fd700824f5
25-05-14 01:27:45.936 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 98078f22-b43d-466d-9b9e-a2fd700824f5
25-05-14 01:27:45.936 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 98078f22-b43d-466d-9b9e-a2fd700824f5
25-05-14 01:27:45.940 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:27:45.941 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:27:45.943 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'd4234c35-0f55-41a9-a0b1-25d754cba842', 채널명: 'Message Channel'
25-05-14 01:27:45.945 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:27:45.949 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:27:45.955 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 시작
25-05-14 01:27:45.957 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:27:45.972 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:27:45.974 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:27:45.976 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:27:45.978 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 96e3f7c9-2c13-4d8f-b9ff-d1e2bb6e8dc5
25-05-14 01:27:45.978 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 96e3f7c9-2c13-4d8f-b9ff-d1e2bb6e8dc5
25-05-14 01:27:45.978 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 96e3f7c9-2c13-4d8f-b9ff-d1e2bb6e8dc5
25-05-14 01:27:45.981 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:27:45.982 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:27:45.983 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '4b3d33f2-22d1-4407-9ec8-20bcdc3e7bcc', 채널명: 'Message Channel'
25-05-14 01:27:45.984 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:27:45.986 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:27:45.989 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 시작. ID: '862445c5-6ecf-47fd-8954-c3b256f9ed62'
25-05-14 01:27:45.990 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:27:45.991 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - ID '862445c5-6ecf-47fd-8954-c3b256f9ed62'에 해당하는 삭제할 메시지를 찾을 수 없습니다.
25-05-14 01:27:46.000 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:27:46.001 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:27:46.002 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:27:46.003 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: cf8acd01-bda6-410c-bc12-4c2bf7d6f11e
25-05-14 01:27:46.003 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: cf8acd01-bda6-410c-bc12-4c2bf7d6f11e
25-05-14 01:27:46.004 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: cf8acd01-bda6-410c-bc12-4c2bf7d6f11e
25-05-14 01:27:46.006 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:27:46.007 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:27:46.008 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '83e2ff8d-fb79-4824-b3fc-40ad65c23acd', 채널명: 'Message Channel'
25-05-14 01:27:46.010 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:27:46.014 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:27:46.020 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'f7a32cdc-4eff-490d-ad32-824d85c2ead7', 작성자 ID: 'cf8acd01-bda6-410c-bc12-4c2bf7d6f11e'
25-05-14 01:27:46.021 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:27:46.035 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:27:46.037 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:27:46.039 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:27:46.040 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: cb73631f-012e-4d47-aeb8-ab96e35b8884
25-05-14 01:27:46.041 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: cb73631f-012e-4d47-aeb8-ab96e35b8884
25-05-14 01:27:46.041 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: cb73631f-012e-4d47-aeb8-ab96e35b8884
25-05-14 01:27:46.045 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:27:46.046 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:27:46.048 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '8d9df6f3-1e31-478f-b138-a2b077f80d86', 채널명: 'Message Channel'
25-05-14 01:27:46.050 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:27:46.053 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:27:46.058 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '8d9df6f3-1e31-478f-b138-a2b077f80d86', 작성자 ID: 'cb73631f-012e-4d47-aeb8-ab96e35b8884'
25-05-14 01:27:46.061 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '8d9df6f3-1e31-478f-b138-a2b077f80d86') 및 작성자(ID: 'cb73631f-012e-4d47-aeb8-ab96e35b8884') 확인 완료.
25-05-14 01:27:46.061 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 1개 처리 시작.
25-05-14 01:27:46.061 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 파일 메타데이터 생성 및 저장 시작. 파일명: 'test.txt', 크기: 12 bytes, 타입: 'text/plain'
25-05-14 01:27:46.065 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 파일 메타데이터 DB 저장 완료. ID: '3d99ab27-9da9-4709-bbce-a2ab46411195', 파일명: 'test.txt'
25-05-14 01:27:46.066 [main] DEBUG c.s.m.d.r.LocalBinaryContentStorage  - 파일 저장 시도: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget\3d99ab27-9da9-4709-bbce-a2ab46411195
25-05-14 01:27:46.068 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 파일 저장 성공: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget\3d99ab27-9da9-4709-bbce-a2ab46411195
25-05-14 01:27:46.068 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 실제 파일 저장 완료. 저장소 ID: '3d99ab27-9da9-4709-bbce-a2ab46411195' (메타데이터 ID와 동일)
25-05-14 01:27:46.071 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 #1 ('test.txt') 저장 및 연결 완료. 메타데이터 ID: '3d99ab27-9da9-4709-bbce-a2ab46411195'
25-05-14 01:27:46.071 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 총 1개의 첨부파일 처리 완료.
25-05-14 01:27:46.073 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: 'eaa74d98-59bb-4483-b8aa-f543666d8d17', 채널 ID: '8d9df6f3-1e31-478f-b138-a2b077f80d86'
25-05-14 01:27:46.093 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:27:46.095 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:27:46.097 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:27:46.098 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:27:46.098 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:27:46.100 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:27:46.101 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:27:46.102 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:27:46.104 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 01:27:46.108 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 01:29:49.113 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Starting MessageApiIntegrationTest using Java 17.0.14 with PID 15100 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:29:49.114 [main] DEBUG c.s.m.d.i.MessageApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:29:49.114 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 01:29:49.834 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:29:49.908 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61 ms. Found 6 JPA repository interfaces.
25-05-14 01:29:49.910 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:29:49.910 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:29:49.910 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:29:50.946 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:29:51.123 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 01:29:51.125 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 01:29:51.257 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 01:29:51.290 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:29:51.352 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:29:51.382 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:29:51.699 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:29:51.742 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:29:51.756 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:29:52.749 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:29:52.761 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:29:52.763 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:29:52.763 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:29:52.764 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:29:52.765 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:29:52.766 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:29:52.766 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:29:52.772 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:29:52.775 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:29:52.776 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:29:52.777 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:29:52.778 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:29:52.778 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:29:52.779 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:29:52.780 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:29:52.781 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:29:52.782 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:29:52.783 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:29:52.784 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:29:52.786 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:29:52.786 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:29:52.787 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:29:52.793 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:29:53.279 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 01:29:53.358 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:29:54.146 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 01:29:54.184 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:29:55.108 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 01:29:55.178 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:29:55.179 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:29:55.190 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 01:29:55.205 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 26 ms
25-05-14 01:29:55.268 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Started MessageApiIntegrationTest in 6.564 seconds (process running for 7.787)
25-05-14 01:29:55.960 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:29:56.037 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:29:56.073 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:29:56.128 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: e79c4c37-e471-4d3a-b174-633675f26e5f
25-05-14 01:29:56.134 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: e79c4c37-e471-4d3a-b174-633675f26e5f
25-05-14 01:29:56.134 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: e79c4c37-e471-4d3a-b174-633675f26e5f
25-05-14 01:29:56.182 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:29:56.190 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:29:56.196 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'ed69e02a-d089-4762-990b-b80baec79270', 채널명: 'Message Channel'
25-05-14 01:29:56.209 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:29:56.232 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:29:56.260 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID 'de898ccf-b92c-4597-b151-f8473da46587'의 메시지 목록 조회 시도. 커서: 'null', 크기: 10
25-05-14 01:29:56.316 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:29:56.322 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:29:56.323 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:29:56.325 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:29:56.332 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - 채널 ID 'de898ccf-b92c-4597-b151-f8473da46587'를 찾을 수 없어 메시지 목록 조회를 중단합니다.
25-05-14 01:29:56.378 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:29:56.381 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:29:56.383 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:29:56.385 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 43741f83-9ca0-4d51-8931-a9db6823e75c
25-05-14 01:29:56.386 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 43741f83-9ca0-4d51-8931-a9db6823e75c
25-05-14 01:29:56.386 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 43741f83-9ca0-4d51-8931-a9db6823e75c
25-05-14 01:29:56.388 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:29:56.390 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:29:56.392 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '1d4eb1b2-05f9-4f8a-9cb4-b5ac8877f329', 채널명: 'Message Channel'
25-05-14 01:29:56.395 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:29:56.399 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:29:56.417 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '1d4eb1b2-05f9-4f8a-9cb4-b5ac8877f329', 작성자 ID: '43741f83-9ca0-4d51-8931-a9db6823e75c'
25-05-14 01:29:56.431 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '1d4eb1b2-05f9-4f8a-9cb4-b5ac8877f329') 및 작성자(ID: '43741f83-9ca0-4d51-8931-a9db6823e75c') 확인 완료.
25-05-14 01:29:56.432 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:29:56.452 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: 'c2486843-dd90-4777-a99a-a29bdde82b1d', 채널 ID: '1d4eb1b2-05f9-4f8a-9cb4-b5ac8877f329'
25-05-14 01:29:56.466 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 시작. ID: 'c2486843-dd90-4777-a99a-a29bdde82b1d'
25-05-14 01:29:56.472 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:29:56.473 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:29:56.475 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:29:56.476 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:29:56.485 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:29:56.491 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 완료. ID: 'c2486843-dd90-4777-a99a-a29bdde82b1d'
25-05-14 01:29:56.508 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:29:56.510 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:29:56.513 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:29:56.515 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 92bf399a-a322-4d1f-968d-0213bc2a2f27
25-05-14 01:29:56.516 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 92bf399a-a322-4d1f-968d-0213bc2a2f27
25-05-14 01:29:56.517 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 92bf399a-a322-4d1f-968d-0213bc2a2f27
25-05-14 01:29:56.520 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:29:56.522 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:29:56.524 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '04573984-8c07-4923-8172-9f3c976f2757', 채널명: 'Message Channel'
25-05-14 01:29:56.526 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:29:56.529 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:29:56.535 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '04573984-8c07-4923-8172-9f3c976f2757', 작성자 ID: '92bf399a-a322-4d1f-968d-0213bc2a2f27'
25-05-14 01:29:56.536 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '04573984-8c07-4923-8172-9f3c976f2757') 및 작성자(ID: '92bf399a-a322-4d1f-968d-0213bc2a2f27') 확인 완료.
25-05-14 01:29:56.536 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:29:56.537 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '227dbcfa-9af1-447f-b49a-00c68d6ac904', 채널 ID: '04573984-8c07-4923-8172-9f3c976f2757'
25-05-14 01:29:56.592 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:29:56.595 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:29:56.597 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:29:56.600 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 966eedde-bff3-4cd3-a9ad-123fd846747b
25-05-14 01:29:56.602 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 966eedde-bff3-4cd3-a9ad-123fd846747b
25-05-14 01:29:56.602 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 966eedde-bff3-4cd3-a9ad-123fd846747b
25-05-14 01:29:56.606 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:29:56.607 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:29:56.610 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'f2354e46-080b-44b4-92f8-3c577ee419fd', 채널명: 'Message Channel'
25-05-14 01:29:56.612 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:29:56.616 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:29:56.621 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'f2354e46-080b-44b4-92f8-3c577ee419fd', 작성자 ID: '966eedde-bff3-4cd3-a9ad-123fd846747b'
25-05-14 01:29:56.622 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: 'f2354e46-080b-44b4-92f8-3c577ee419fd') 및 작성자(ID: '966eedde-bff3-4cd3-a9ad-123fd846747b') 확인 완료.
25-05-14 01:29:56.622 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:29:56.623 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: 'f61a3c6f-0b4e-4260-b268-b69b4a565ce4', 채널 ID: 'f2354e46-080b-44b4-92f8-3c577ee419fd'
25-05-14 01:29:56.627 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'f2354e46-080b-44b4-92f8-3c577ee419fd', 작성자 ID: '966eedde-bff3-4cd3-a9ad-123fd846747b'
25-05-14 01:29:56.628 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: 'f2354e46-080b-44b4-92f8-3c577ee419fd') 및 작성자(ID: '966eedde-bff3-4cd3-a9ad-123fd846747b') 확인 완료.
25-05-14 01:29:56.629 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:29:56.631 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '09e1e226-4145-46db-9ab7-d47a4fda4f3d', 채널 ID: 'f2354e46-080b-44b4-92f8-3c577ee419fd'
25-05-14 01:29:56.634 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID 'f2354e46-080b-44b4-92f8-3c577ee419fd'의 메시지 목록 조회 시도. 커서: 'null', 크기: 10
25-05-14 01:29:56.637 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:29:56.638 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:29:56.639 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:29:56.639 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:29:56.641 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:29:56.641 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:29:56.642 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 최신 메시지부터 조회
25-05-14 01:29:56.648 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:29:56.650 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID 'f2354e46-080b-44b4-92f8-3c577ee419fd'의 메시지 2개 조회 완료. 다음 페이지 존재 여부: false
25-05-14 01:29:56.671 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:29:56.673 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:29:56.675 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:29:56.677 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 24c8e903-244a-4f4a-b58a-9ce787ecc0ba
25-05-14 01:29:56.679 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 24c8e903-244a-4f4a-b58a-9ce787ecc0ba
25-05-14 01:29:56.680 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 24c8e903-244a-4f4a-b58a-9ce787ecc0ba
25-05-14 01:29:56.684 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:29:56.686 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:29:56.688 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'd1a91232-8a2e-4f0c-8278-abc5391de9fd', 채널명: 'Message Channel'
25-05-14 01:29:56.691 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:29:56.695 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:29:56.701 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'd1a91232-8a2e-4f0c-8278-abc5391de9fd', 작성자 ID: '24c8e903-244a-4f4a-b58a-9ce787ecc0ba'
25-05-14 01:29:56.702 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: 'd1a91232-8a2e-4f0c-8278-abc5391de9fd') 및 작성자(ID: '24c8e903-244a-4f4a-b58a-9ce787ecc0ba') 확인 완료.
25-05-14 01:29:56.703 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:29:56.704 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '16b8c268-2853-4ad2-9ba8-fc8aab50fab2', 채널 ID: 'd1a91232-8a2e-4f0c-8278-abc5391de9fd'
25-05-14 01:29:56.712 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 시작
25-05-14 01:29:56.718 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 완료
25-05-14 01:29:56.734 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:29:56.736 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:29:56.738 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:29:56.740 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: d08212d8-b40f-47d9-abf9-aadc008248e6
25-05-14 01:29:56.741 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: d08212d8-b40f-47d9-abf9-aadc008248e6
25-05-14 01:29:56.741 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: d08212d8-b40f-47d9-abf9-aadc008248e6
25-05-14 01:29:56.745 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:29:56.747 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:29:56.749 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '63e9d55c-a2dd-4217-9e7f-37fdccea4af4', 채널명: 'Message Channel'
25-05-14 01:29:56.751 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:29:56.753 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:29:56.758 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 시작
25-05-14 01:29:56.761 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:29:56.775 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:29:56.776 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:29:56.777 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:29:56.779 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 7482df1e-1fe2-4d0c-9282-4c8f2a9941f9
25-05-14 01:29:56.780 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 7482df1e-1fe2-4d0c-9282-4c8f2a9941f9
25-05-14 01:29:56.781 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 7482df1e-1fe2-4d0c-9282-4c8f2a9941f9
25-05-14 01:29:56.785 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:29:56.787 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:29:56.789 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '28f0c62e-1423-46fe-8616-d5c3006fadb9', 채널명: 'Message Channel'
25-05-14 01:29:56.791 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:29:56.795 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:29:56.800 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 시작. ID: 'd2a87671-0b2c-4fa8-9ddd-a587e58cfd8d'
25-05-14 01:29:56.801 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:29:56.802 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - ID 'd2a87671-0b2c-4fa8-9ddd-a587e58cfd8d'에 해당하는 삭제할 메시지를 찾을 수 없습니다.
25-05-14 01:29:56.816 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:29:56.818 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:29:56.820 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:29:56.822 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 03ae07ce-de80-4024-90d3-edf6cbeb00bd
25-05-14 01:29:56.823 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 03ae07ce-de80-4024-90d3-edf6cbeb00bd
25-05-14 01:29:56.823 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 03ae07ce-de80-4024-90d3-edf6cbeb00bd
25-05-14 01:29:56.827 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:29:56.829 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:29:56.831 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '8df6ffcb-e13d-4867-9f60-bb16485e76cd', 채널명: 'Message Channel'
25-05-14 01:29:56.833 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:29:56.836 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:29:56.840 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '23cbe9b8-2126-4725-9bb1-763a29840dc5', 작성자 ID: '03ae07ce-de80-4024-90d3-edf6cbeb00bd'
25-05-14 01:29:56.840 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:29:56.851 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:29:56.852 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:29:56.855 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:29:56.856 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 95bd1a02-db35-4be9-b761-3cd24377788d
25-05-14 01:29:56.857 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 95bd1a02-db35-4be9-b761-3cd24377788d
25-05-14 01:29:56.857 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 95bd1a02-db35-4be9-b761-3cd24377788d
25-05-14 01:29:56.861 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:29:56.863 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:29:56.864 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'a2d691f0-52a3-4fbf-a3ad-2fec205f9d30', 채널명: 'Message Channel'
25-05-14 01:29:56.867 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:29:56.869 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:29:56.874 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'a2d691f0-52a3-4fbf-a3ad-2fec205f9d30', 작성자 ID: '95bd1a02-db35-4be9-b761-3cd24377788d'
25-05-14 01:29:56.875 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: 'a2d691f0-52a3-4fbf-a3ad-2fec205f9d30') 및 작성자(ID: '95bd1a02-db35-4be9-b761-3cd24377788d') 확인 완료.
25-05-14 01:29:56.875 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 1개 처리 시작.
25-05-14 01:29:56.875 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 파일 메타데이터 생성 및 저장 시작. 파일명: 'test.txt', 크기: 12 bytes, 타입: 'text/plain'
25-05-14 01:29:56.878 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 파일 메타데이터 DB 저장 완료. ID: '056d459d-e0b6-43c3-b21c-e1baa715212c', 파일명: 'test.txt'
25-05-14 01:29:56.878 [main] DEBUG c.s.m.d.r.LocalBinaryContentStorage  - 파일 저장 시도: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget\056d459d-e0b6-43c3-b21c-e1baa715212c
25-05-14 01:29:56.880 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 파일 저장 성공: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget\056d459d-e0b6-43c3-b21c-e1baa715212c
25-05-14 01:29:56.880 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 실제 파일 저장 완료. 저장소 ID: '056d459d-e0b6-43c3-b21c-e1baa715212c' (메타데이터 ID와 동일)
25-05-14 01:29:56.881 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 #1 ('test.txt') 저장 및 연결 완료. 메타데이터 ID: '056d459d-e0b6-43c3-b21c-e1baa715212c'
25-05-14 01:29:56.881 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 총 1개의 첨부파일 처리 완료.
25-05-14 01:29:56.882 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '44986f12-f5a7-4d6e-9f65-1c88accb2333', 채널 ID: 'a2d691f0-52a3-4fbf-a3ad-2fec205f9d30'
25-05-14 01:29:56.896 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:29:56.897 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:29:56.898 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:29:56.898 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:29:56.898 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:29:56.900 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:29:56.901 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:29:56.901 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:29:56.903 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 01:29:56.907 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 01:30:27.043 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 10724 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:30:27.044 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:30:27.044 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 01:30:27.820 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:30:27.870 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38 ms. Found 6 JPA repository interfaces.
25-05-14 01:30:27.872 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:30:27.872 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:30:27.873 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:30:29.089 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:30:29.337 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 01:30:29.339 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 01:30:29.483 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 01:30:29.524 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:30:29.618 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:30:29.663 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:30:29.985 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:30:30.025 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:30:30.049 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:30:31.080 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:30:31.103 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:30:31.106 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:30:31.107 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:30:31.108 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:30:31.109 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:30:31.111 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:30:31.113 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:30:31.123 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:30:31.126 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:30:31.130 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:30:31.131 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:30:31.132 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:30:31.133 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:30:31.134 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:30:31.135 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:30:31.136 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:30:31.136 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:30:31.137 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:30:31.138 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:30:31.140 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:30:31.141 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:30:31.143 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:30:31.151 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:30:31.758 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 01:30:31.843 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:30:32.727 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 01:30:32.773 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:30:33.730 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 01:30:33.795 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:30:33.796 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:30:33.803 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 01:30:33.818 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 22 ms
25-05-14 01:30:33.907 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 7.318 seconds (process running for 8.606)
25-05-14 01:30:34.575 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:30:34.657 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:30:34.703 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:30:34.749 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: bd8953ee-ee2e-41d9-bed5-56daf3a314a3
25-05-14 01:30:34.752 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: bd8953ee-ee2e-41d9-bed5-56daf3a314a3
25-05-14 01:30:34.753 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: bd8953ee-ee2e-41d9-bed5-56daf3a314a3
25-05-14 01:30:34.804 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:30:34.822 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:30:34.833 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:30:34.835 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:30:34.838 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:30:34.840 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: b3436149-878f-4f54-becc-43860d349cc7
25-05-14 01:30:34.842 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: b3436149-878f-4f54-becc-43860d349cc7
25-05-14 01:30:34.842 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: b3436149-878f-4f54-becc-43860d349cc7
25-05-14 01:30:34.858 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Channel to Delete'
25-05-14 01:30:34.861 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:30:34.868 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '2d3aabb8-d0d4-4f9e-ad2c-33c351de027a', 채널명: 'Channel to Delete'
25-05-14 01:30:34.880 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:30:34.897 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:30:34.919 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 시작. ID: '2d3aabb8-d0d4-4f9e-ad2c-33c351de027a'
25-05-14 01:30:34.956 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:30:34.958 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:30:34.958 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:30:34.959 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:30:34.964 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ID '2d3aabb8-d0d4-4f9e-ad2c-33c351de027a' 관련 메시지 삭제 시작
25-05-14 01:30:34.966 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=?
25-05-14 01:30:34.968 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ID '2d3aabb8-d0d4-4f9e-ad2c-33c351de027a' 관련 메시지 삭제 완료
25-05-14 01:30:34.968 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ID '2d3aabb8-d0d4-4f9e-ad2c-33c351de027a' 관련 ReadStatus 삭제 시작
25-05-14 01:30:34.970 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:30:34.972 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ID '2d3aabb8-d0d4-4f9e-ad2c-33c351de027a' 관련 ReadStatus 삭제 완료
25-05-14 01:30:34.981 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 완료. ID: '2d3aabb8-d0d4-4f9e-ad2c-33c351de027a'
25-05-14 01:30:35.005 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:30:35.006 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:30:35.008 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:30:35.009 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: af4c841f-e287-46df-996c-d69893cfa74c
25-05-14 01:30:35.010 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: af4c841f-e287-46df-996c-d69893cfa74c
25-05-14 01:30:35.010 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: af4c841f-e287-46df-996c-d69893cfa74c
25-05-14 01:30:35.016 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:30:35.018 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:30:35.020 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:30:35.021 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:30:35.024 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:30:35.027 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: a1366dac-8487-48d4-9f1a-c66143ca773c
25-05-14 01:30:35.029 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: a1366dac-8487-48d4-9f1a-c66143ca773c
25-05-14 01:30:35.030 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: a1366dac-8487-48d4-9f1a-c66143ca773c
25-05-14 01:30:35.037 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 시작. ID: '4e34d0b7-163e-484f-b474-4b5f9ed98a73'
25-05-14 01:30:35.038 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:30:35.040 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 업데이트할 채널 ID '4e34d0b7-163e-484f-b474-4b5f9ed98a73'에 해당하는 채널을 찾을 수 없습니다.
25-05-14 01:30:35.064 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:30:35.066 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:30:35.068 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:30:35.070 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: c3aadf63-9272-4e6e-8c2a-aeea7b3e7ed2
25-05-14 01:30:35.072 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: c3aadf63-9272-4e6e-8c2a-aeea7b3e7ed2
25-05-14 01:30:35.072 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: c3aadf63-9272-4e6e-8c2a-aeea7b3e7ed2
25-05-14 01:30:35.076 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:30:35.079 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:30:35.080 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:30:35.081 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:30:35.083 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:30:35.085 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 7d2f91d0-94e7-48f3-a06e-afa2a72cff3f
25-05-14 01:30:35.086 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 7d2f91d0-94e7-48f3-a06e-afa2a72cff3f
25-05-14 01:30:35.087 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 7d2f91d0-94e7-48f3-a06e-afa2a72cff3f
25-05-14 01:30:35.101 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 시작. 요청된 참여자 수: 2
25-05-14 01:30:35.112 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:30:35.113 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:30:35.113 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-14 01:30:35.118 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료. 채널 ID: '93c71cf4-111d-4919-8f43-a65c829439b8'
25-05-14 01:30:35.119 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-14 01:30:35.124 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 2개의 ReadStatus 저장 완료. 채널 ID: '93c71cf4-111d-4919-8f43-a65c829439b8'
25-05-14 01:30:35.124 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 및 ReadStatus 설정 완료. 채널 ID: '93c71cf4-111d-4919-8f43-a65c829439b8'
25-05-14 01:30:35.126 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:30:35.129 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:30:35.130 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:30:35.131 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:30:35.132 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:30:35.147 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:30:35.149 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:30:35.151 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:30:35.152 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 205de5ec-02aa-43d1-9acd-f340cdb0c1bd
25-05-14 01:30:35.153 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 205de5ec-02aa-43d1-9acd-f340cdb0c1bd
25-05-14 01:30:35.154 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 205de5ec-02aa-43d1-9acd-f340cdb0c1bd
25-05-14 01:30:35.158 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:30:35.160 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:30:35.162 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:30:35.163 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:30:35.165 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:30:35.167 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 3fafb95d-79db-4287-b750-a70b351e7674
25-05-14 01:30:35.168 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 3fafb95d-79db-4287-b750-a70b351e7674
25-05-14 01:30:35.169 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 3fafb95d-79db-4287-b750-a70b351e7674
25-05-14 01:30:35.173 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Initial Channel'
25-05-14 01:30:35.175 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:30:35.177 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'c956a3af-3373-47a8-8f7b-5e79b8d97294', 채널명: 'Initial Channel'
25-05-14 01:30:35.180 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:30:35.182 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:30:35.186 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 시작. ID: 'c956a3af-3373-47a8-8f7b-5e79b8d97294'
25-05-14 01:30:35.188 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 완료. ID: 'c956a3af-3373-47a8-8f7b-5e79b8d97294'. 이전 이름: 'Initial Channel', 새 이름: 'Updated Channel Name'. 이전 설명: 'Initial Desc', 새 설명: 'Updated Description'
25-05-14 01:30:35.191 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:30:35.195 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:30:35.257 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:30:35.258 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:30:35.261 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:30:35.264 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 43c0bbe1-c8ad-45be-89c5-771d9d8a1806
25-05-14 01:30:35.265 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 43c0bbe1-c8ad-45be-89c5-771d9d8a1806
25-05-14 01:30:35.265 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 43c0bbe1-c8ad-45be-89c5-771d9d8a1806
25-05-14 01:30:35.270 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:30:35.272 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:30:35.273 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:30:35.274 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:30:35.276 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:30:35.278 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: d6cccda6-dea5-44d9-b2af-da53ad792ed6
25-05-14 01:30:35.279 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: d6cccda6-dea5-44d9-b2af-da53ad792ed6
25-05-14 01:30:35.280 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: d6cccda6-dea5-44d9-b2af-da53ad792ed6
25-05-14 01:30:35.283 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 시작. ID: 'a77b2e65-9e0b-4fa1-91e3-e7c3181d254b'
25-05-14 01:30:35.285 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:30:35.287 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 실패: ID 'a77b2e65-9e0b-4fa1-91e3-e7c3181d254b'에 해당하는 채널을 찾을 수 없습니다.
25-05-14 01:30:35.304 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:30:35.306 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:30:35.309 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:30:35.312 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 99f5d346-e553-43c5-9a9e-c442aa332685
25-05-14 01:30:35.313 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 99f5d346-e553-43c5-9a9e-c442aa332685
25-05-14 01:30:35.314 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 99f5d346-e553-43c5-9a9e-c442aa332685
25-05-14 01:30:35.318 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:30:35.320 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:30:35.321 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:30:35.322 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:30:35.324 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:30:35.326 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 8bc83c15-34d4-4127-9230-3be960440c97
25-05-14 01:30:35.327 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 8bc83c15-34d4-4127-9230-3be960440c97
25-05-14 01:30:35.327 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 8bc83c15-34d4-4127-9230-3be960440c97
25-05-14 01:30:35.331 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 시작. 요청된 참여자 수: 2
25-05-14 01:30:35.333 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:30:35.334 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:30:35.335 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-14 01:30:35.336 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 실패: 존재하지 않는 사용자 ID가 포함되어 있습니다: [32992583-6c7c-4708-aacc-a6bc9acccc7a]
25-05-14 01:30:35.346 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:30:35.349 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:30:35.351 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:30:35.352 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: bb338598-5b2f-4940-aaa0-7bb9258a10ce
25-05-14 01:30:35.353 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: bb338598-5b2f-4940-aaa0-7bb9258a10ce
25-05-14 01:30:35.353 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: bb338598-5b2f-4940-aaa0-7bb9258a10ce
25-05-14 01:30:35.355 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:30:35.357 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:30:35.358 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:30:35.359 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:30:35.361 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:30:35.364 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 69ad5f1a-a295-46f1-b9db-fcbd90653555
25-05-14 01:30:35.365 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 69ad5f1a-a295-46f1-b9db-fcbd90653555
25-05-14 01:30:35.365 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 69ad5f1a-a295-46f1-b9db-fcbd90653555
25-05-14 01:30:35.369 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'User1 Public'
25-05-14 01:30:35.371 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:30:35.373 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '6df18da0-fbdb-4d0a-a403-683cac5efa91', 채널명: 'User1 Public'
25-05-14 01:30:35.375 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:30:35.378 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:30:35.383 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 시작. 요청된 참여자 수: 2
25-05-14 01:30:35.385 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:30:35.385 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:30:35.386 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:30:35.386 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-14 01:30:35.387 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료. 채널 ID: 'e700d924-7c54-4fd1-8e9c-94ef54936d08'
25-05-14 01:30:35.389 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-14 01:30:35.390 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 2개의 ReadStatus 저장 완료. 채널 ID: 'e700d924-7c54-4fd1-8e9c-94ef54936d08'
25-05-14 01:30:35.390 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 및 ReadStatus 설정 완료. 채널 ID: 'e700d924-7c54-4fd1-8e9c-94ef54936d08'
25-05-14 01:30:35.391 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:30:35.393 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:30:35.394 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:30:35.395 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:30:35.396 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:30:35.400 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 사용자 ID 'bb338598-5b2f-4940-aaa0-7bb9258a10ce'의 모든 채널 조회 시도 (ReadStatus 기반).
25-05-14 01:30:35.404 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-14 01:30:35.408 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.user_id=?
25-05-14 01:30:35.410 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 사용자 ID 'bb338598-5b2f-4940-aaa0-7bb9258a10ce'가 ReadStatus를 가진 채널 ID 목록: [e700d924-7c54-4fd1-8e9c-94ef54936d08]
25-05-14 01:30:35.413 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.type=?
25-05-14 01:30:35.417 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id in (?) 
        and c1_0.type=?
25-05-14 01:30:35.419 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 사용자 ID 'bb338598-5b2f-4940-aaa0-7bb9258a10ce'의 공개 채널 및 구독 채널 조회. 총 2개 후보.
25-05-14 01:30:35.422 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:30:35.424 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:30:35.425 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:30:35.428 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:30:35.454 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:30:35.455 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:30:35.457 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:30:35.459 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 8b616e99-c9ad-4a01-a9a8-976e6f48d977
25-05-14 01:30:35.459 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 8b616e99-c9ad-4a01-a9a8-976e6f48d977
25-05-14 01:30:35.459 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 8b616e99-c9ad-4a01-a9a8-976e6f48d977
25-05-14 01:30:35.465 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:30:35.466 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:30:35.467 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:30:35.467 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:30:35.469 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:30:35.470 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: e07e944e-df41-4c4b-b2f6-2c674afa2994
25-05-14 01:30:35.471 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: e07e944e-df41-4c4b-b2f6-2c674afa2994
25-05-14 01:30:35.471 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: e07e944e-df41-4c4b-b2f6-2c674afa2994
25-05-14 01:30:35.490 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser1
25-05-14 01:30:35.491 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:30:35.492 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:30:35.494 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 6cde4034-ef3a-45ca-823c-426af7b42fcf
25-05-14 01:30:35.496 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 6cde4034-ef3a-45ca-823c-426af7b42fcf
25-05-14 01:30:35.496 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 6cde4034-ef3a-45ca-823c-426af7b42fcf
25-05-14 01:30:35.500 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: channeluser2
25-05-14 01:30:35.503 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:30:35.504 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:30:35.505 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:30:35.507 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:30:35.509 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: ee4c45a1-2720-4a3d-a17b-6e85e1038ae6
25-05-14 01:30:35.510 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: ee4c45a1-2720-4a3d-a17b-6e85e1038ae6
25-05-14 01:30:35.510 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: ee4c45a1-2720-4a3d-a17b-6e85e1038ae6
25-05-14 01:30:35.514 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Public Channel'
25-05-14 01:30:35.516 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:30:35.518 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '97f15524-002b-4a61-9912-6120cf3224f0', 채널명: 'Public Channel'
25-05-14 01:30:35.520 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:30:35.524 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:30:35.542 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:30:35.543 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:30:35.545 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:30:35.545 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:30:35.546 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:30:35.547 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:30:35.547 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:30:35.547 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:30:35.551 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 01:30:35.555 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 01:31:33.101 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Starting MessageApiIntegrationTest using Java 17.0.14 with PID 6176 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:31:33.103 [main] DEBUG c.s.m.d.i.MessageApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:31:33.104 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 01:31:33.830 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:31:33.889 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 45 ms. Found 6 JPA repository interfaces.
25-05-14 01:31:33.890 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:31:33.891 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:31:33.891 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:31:35.092 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:31:35.277 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 01:31:35.280 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 01:31:35.412 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 01:31:35.449 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:31:35.538 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:31:35.584 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:31:35.900 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:31:35.948 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:31:35.964 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:31:36.998 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:31:37.013 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:31:37.016 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:31:37.017 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:31:37.018 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:31:37.018 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:31:37.019 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:31:37.021 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:31:37.025 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:31:37.028 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:31:37.029 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:31:37.030 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:31:37.031 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:31:37.032 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:31:37.033 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:31:37.034 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:31:37.035 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:31:37.036 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:31:37.037 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:31:37.038 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:31:37.039 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:31:37.040 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:31:37.041 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:31:37.044 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:31:37.493 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 01:31:37.550 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:31:38.400 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 01:31:38.431 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:31:39.329 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 01:31:39.381 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:31:39.381 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:31:39.390 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 01:31:39.404 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 23 ms
25-05-14 01:31:39.493 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Started MessageApiIntegrationTest in 6.865 seconds (process running for 8.136)
25-05-14 01:31:40.144 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:31:40.254 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:31:40.291 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:31:40.342 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: bf4adee6-a33c-44ab-80f2-f5baa7c3483d
25-05-14 01:31:40.348 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: bf4adee6-a33c-44ab-80f2-f5baa7c3483d
25-05-14 01:31:40.349 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: bf4adee6-a33c-44ab-80f2-f5baa7c3483d
25-05-14 01:31:40.402 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:31:40.409 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:31:40.413 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'fd615906-59bd-4f36-b375-ca522854292a', 채널명: 'Message Channel'
25-05-14 01:31:40.421 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:31:40.436 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:31:40.464 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID '87e3c414-13ec-41d9-b86f-e815b02acf67'의 메시지 목록 조회 시도. 커서: 'null', 크기: 10
25-05-14 01:31:40.508 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:31:40.518 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:31:40.520 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:31:40.522 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:31:40.527 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - 채널 ID '87e3c414-13ec-41d9-b86f-e815b02acf67'를 찾을 수 없어 메시지 목록 조회를 중단합니다.
25-05-14 01:31:40.573 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:31:40.575 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:31:40.577 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:31:40.579 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 9120ee0d-4a41-4105-bda2-11c493e8ef9f
25-05-14 01:31:40.580 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 9120ee0d-4a41-4105-bda2-11c493e8ef9f
25-05-14 01:31:40.580 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 9120ee0d-4a41-4105-bda2-11c493e8ef9f
25-05-14 01:31:40.583 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:31:40.585 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:31:40.586 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '466b0d34-8a62-4242-bde5-55dcae6a17b9', 채널명: 'Message Channel'
25-05-14 01:31:40.588 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:31:40.591 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:31:40.605 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '466b0d34-8a62-4242-bde5-55dcae6a17b9', 작성자 ID: '9120ee0d-4a41-4105-bda2-11c493e8ef9f'
25-05-14 01:31:40.612 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '466b0d34-8a62-4242-bde5-55dcae6a17b9') 및 작성자(ID: '9120ee0d-4a41-4105-bda2-11c493e8ef9f') 확인 완료.
25-05-14 01:31:40.612 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:31:40.631 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '119fffc2-ffba-4eb6-a630-b6bb77f10417', 채널 ID: '466b0d34-8a62-4242-bde5-55dcae6a17b9'
25-05-14 01:31:40.646 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 시작. ID: '119fffc2-ffba-4eb6-a630-b6bb77f10417'
25-05-14 01:31:40.654 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:31:40.655 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:31:40.656 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:31:40.657 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:31:40.663 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:31:40.667 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 완료. ID: '119fffc2-ffba-4eb6-a630-b6bb77f10417'
25-05-14 01:31:40.676 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:31:40.677 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:31:40.679 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:31:40.680 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: ddfbe097-29f1-4173-a5b4-18f4ed88c3bc
25-05-14 01:31:40.681 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: ddfbe097-29f1-4173-a5b4-18f4ed88c3bc
25-05-14 01:31:40.681 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: ddfbe097-29f1-4173-a5b4-18f4ed88c3bc
25-05-14 01:31:40.683 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:31:40.684 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:31:40.686 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '9e877e36-ed53-4b01-8660-ffa61e326fb4', 채널명: 'Message Channel'
25-05-14 01:31:40.687 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:31:40.689 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:31:40.693 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '9e877e36-ed53-4b01-8660-ffa61e326fb4', 작성자 ID: 'ddfbe097-29f1-4173-a5b4-18f4ed88c3bc'
25-05-14 01:31:40.694 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '9e877e36-ed53-4b01-8660-ffa61e326fb4') 및 작성자(ID: 'ddfbe097-29f1-4173-a5b4-18f4ed88c3bc') 확인 완료.
25-05-14 01:31:40.694 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:31:40.694 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: 'e181c7bb-0c94-4dc8-86ec-94c0c9e830d3', 채널 ID: '9e877e36-ed53-4b01-8660-ffa61e326fb4'
25-05-14 01:31:40.749 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:31:40.751 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:31:40.754 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:31:40.756 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 86e4194d-31a9-4115-a8da-b74808e31060
25-05-14 01:31:40.757 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 86e4194d-31a9-4115-a8da-b74808e31060
25-05-14 01:31:40.758 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 86e4194d-31a9-4115-a8da-b74808e31060
25-05-14 01:31:40.761 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:31:40.763 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:31:40.765 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '2b0c4904-3150-42bd-884d-5f3662896fd1', 채널명: 'Message Channel'
25-05-14 01:31:40.767 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:31:40.769 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:31:40.774 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '2b0c4904-3150-42bd-884d-5f3662896fd1', 작성자 ID: '86e4194d-31a9-4115-a8da-b74808e31060'
25-05-14 01:31:40.775 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '2b0c4904-3150-42bd-884d-5f3662896fd1') 및 작성자(ID: '86e4194d-31a9-4115-a8da-b74808e31060') 확인 완료.
25-05-14 01:31:40.775 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:31:40.776 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '3b36d858-829b-415d-a32a-05d122d56444', 채널 ID: '2b0c4904-3150-42bd-884d-5f3662896fd1'
25-05-14 01:31:40.780 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '2b0c4904-3150-42bd-884d-5f3662896fd1', 작성자 ID: '86e4194d-31a9-4115-a8da-b74808e31060'
25-05-14 01:31:40.781 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '2b0c4904-3150-42bd-884d-5f3662896fd1') 및 작성자(ID: '86e4194d-31a9-4115-a8da-b74808e31060') 확인 완료.
25-05-14 01:31:40.781 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:31:40.783 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '92a37f56-5fd6-451d-a01b-3c043624855b', 채널 ID: '2b0c4904-3150-42bd-884d-5f3662896fd1'
25-05-14 01:31:40.786 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID '2b0c4904-3150-42bd-884d-5f3662896fd1'의 메시지 목록 조회 시도. 커서: 'null', 크기: 10
25-05-14 01:31:40.788 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:31:40.789 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:31:40.790 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:31:40.790 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:31:40.791 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:31:40.792 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:31:40.793 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 최신 메시지부터 조회
25-05-14 01:31:40.799 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:31:40.801 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID '2b0c4904-3150-42bd-884d-5f3662896fd1'의 메시지 2개 조회 완료. 다음 페이지 존재 여부: false
25-05-14 01:31:40.823 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:31:40.825 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:31:40.827 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:31:40.829 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 59eb4361-2cca-458f-8a5c-32c955515dd4
25-05-14 01:31:40.830 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 59eb4361-2cca-458f-8a5c-32c955515dd4
25-05-14 01:31:40.830 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 59eb4361-2cca-458f-8a5c-32c955515dd4
25-05-14 01:31:40.834 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:31:40.835 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:31:40.837 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '70964ed5-6394-4791-ab4f-20ab252a10fd', 채널명: 'Message Channel'
25-05-14 01:31:40.838 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:31:40.840 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:31:40.843 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '70964ed5-6394-4791-ab4f-20ab252a10fd', 작성자 ID: '59eb4361-2cca-458f-8a5c-32c955515dd4'
25-05-14 01:31:40.844 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '70964ed5-6394-4791-ab4f-20ab252a10fd') 및 작성자(ID: '59eb4361-2cca-458f-8a5c-32c955515dd4') 확인 완료.
25-05-14 01:31:40.844 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:31:40.845 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '7d027683-a50b-41fc-977a-5bf65e818079', 채널 ID: '70964ed5-6394-4791-ab4f-20ab252a10fd'
25-05-14 01:31:40.849 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 시작
25-05-14 01:31:40.851 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 완료
25-05-14 01:31:40.859 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:31:40.860 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:31:40.862 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:31:40.863 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 6884ae5f-e20f-4b7b-a756-223565bb7652
25-05-14 01:31:40.864 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 6884ae5f-e20f-4b7b-a756-223565bb7652
25-05-14 01:31:40.864 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 6884ae5f-e20f-4b7b-a756-223565bb7652
25-05-14 01:31:40.866 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:31:40.867 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:31:40.868 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '475ab92b-df68-467b-9bcd-8de0249a3c6c', 채널명: 'Message Channel'
25-05-14 01:31:40.869 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:31:40.872 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:31:40.876 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 시작
25-05-14 01:31:40.878 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:31:40.886 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:31:40.888 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:31:40.889 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:31:40.891 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 4c859bdd-355d-43ef-aa1b-2f69e8d6f0ce
25-05-14 01:31:40.891 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 4c859bdd-355d-43ef-aa1b-2f69e8d6f0ce
25-05-14 01:31:40.891 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 4c859bdd-355d-43ef-aa1b-2f69e8d6f0ce
25-05-14 01:31:40.893 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:31:40.895 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:31:40.896 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '9d428dc1-6d07-47b6-99b7-702fb6998140', 채널명: 'Message Channel'
25-05-14 01:31:40.897 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:31:40.898 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:31:40.901 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 시작. ID: '453f6d0f-d2e2-4db4-b06f-ae9da9f0f4f8'
25-05-14 01:31:40.902 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:31:40.902 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - ID '453f6d0f-d2e2-4db4-b06f-ae9da9f0f4f8'에 해당하는 삭제할 메시지를 찾을 수 없습니다.
25-05-14 01:31:40.913 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:31:40.914 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:31:40.916 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:31:40.918 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: c9875912-90f0-4650-9889-ad61b8f24b29
25-05-14 01:31:40.918 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: c9875912-90f0-4650-9889-ad61b8f24b29
25-05-14 01:31:40.919 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: c9875912-90f0-4650-9889-ad61b8f24b29
25-05-14 01:31:40.923 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:31:40.924 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:31:40.926 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '9d98febc-3488-4efc-ae87-2f91d3741571', 채널명: 'Message Channel'
25-05-14 01:31:40.927 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:31:40.930 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:31:40.935 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'fe3e77b1-bc66-4b40-a682-25367da30235', 작성자 ID: 'c9875912-90f0-4650-9889-ad61b8f24b29'
25-05-14 01:31:40.936 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:31:40.948 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:31:40.949 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:31:40.951 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:31:40.952 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 598ea372-df6e-4e02-adfd-8dc7262d596b
25-05-14 01:31:40.953 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 598ea372-df6e-4e02-adfd-8dc7262d596b
25-05-14 01:31:40.953 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 598ea372-df6e-4e02-adfd-8dc7262d596b
25-05-14 01:31:40.956 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:31:40.958 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:31:40.959 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'ba620715-7948-4ad7-b144-ad8e4f75cf06', 채널명: 'Message Channel'
25-05-14 01:31:40.961 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:31:40.963 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:31:40.967 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'ba620715-7948-4ad7-b144-ad8e4f75cf06', 작성자 ID: '598ea372-df6e-4e02-adfd-8dc7262d596b'
25-05-14 01:31:40.968 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: 'ba620715-7948-4ad7-b144-ad8e4f75cf06') 및 작성자(ID: '598ea372-df6e-4e02-adfd-8dc7262d596b') 확인 완료.
25-05-14 01:31:40.968 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 1개 처리 시작.
25-05-14 01:31:40.968 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 파일 메타데이터 생성 및 저장 시작. 파일명: 'test.txt', 크기: 12 bytes, 타입: 'text/plain'
25-05-14 01:31:40.971 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 파일 메타데이터 DB 저장 완료. ID: '5ace8b99-8b45-449b-bbe4-fa3396f87fea', 파일명: 'test.txt'
25-05-14 01:31:40.971 [main] DEBUG c.s.m.d.r.LocalBinaryContentStorage  - 파일 저장 시도: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget\5ace8b99-8b45-449b-bbe4-fa3396f87fea
25-05-14 01:31:40.972 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 파일 저장 성공: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget\5ace8b99-8b45-449b-bbe4-fa3396f87fea
25-05-14 01:31:40.972 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 실제 파일 저장 완료. 저장소 ID: '5ace8b99-8b45-449b-bbe4-fa3396f87fea' (메타데이터 ID와 동일)
25-05-14 01:31:40.973 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 #1 ('test.txt') 저장 및 연결 완료. 메타데이터 ID: '5ace8b99-8b45-449b-bbe4-fa3396f87fea'
25-05-14 01:31:40.973 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 총 1개의 첨부파일 처리 완료.
25-05-14 01:31:40.974 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: 'e0e88172-4874-4948-bd98-69718c3534b6', 채널 ID: 'ba620715-7948-4ad7-b144-ad8e4f75cf06'
25-05-14 01:31:40.988 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:31:40.988 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:31:40.989 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:31:40.990 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:31:40.990 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:31:40.992 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:31:40.992 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:31:40.993 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:31:40.996 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 01:31:40.999 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 01:33:51.994 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Starting MessageApiIntegrationTest using Java 17.0.14 with PID 8312 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:33:51.995 [main] DEBUG c.s.m.d.i.MessageApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:33:51.996 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 01:33:52.731 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:33:52.791 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 50 ms. Found 6 JPA repository interfaces.
25-05-14 01:33:52.791 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:33:52.794 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:33:52.794 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:33:53.867 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:33:54.080 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 01:33:54.083 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 01:33:54.238 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 01:33:54.272 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:33:54.343 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:33:54.384 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:33:54.770 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:33:54.814 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:33:54.833 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:33:55.871 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:33:55.889 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:33:55.892 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:33:55.893 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:33:55.894 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:33:55.894 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:33:55.895 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:33:55.896 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:33:55.899 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:33:55.902 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:33:55.903 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:33:55.905 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:33:55.907 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:33:55.908 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:33:55.909 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:33:55.910 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:33:55.911 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:33:55.913 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:33:55.914 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:33:55.915 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:33:55.916 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:33:55.917 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:33:55.918 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:33:55.926 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:33:56.355 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 01:33:56.419 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:33:57.280 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 01:33:57.324 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:33:58.287 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 01:33:58.360 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:33:58.360 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:33:58.372 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 01:33:58.384 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 23 ms
25-05-14 01:33:58.461 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Started MessageApiIntegrationTest in 7.131 seconds (process running for 8.937)
25-05-14 01:33:59.135 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:33:59.199 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:33:59.231 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:33:59.273 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: a079bea8-6f16-4cbe-bf2a-4746a4d38e9e
25-05-14 01:33:59.278 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: a079bea8-6f16-4cbe-bf2a-4746a4d38e9e
25-05-14 01:33:59.278 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: a079bea8-6f16-4cbe-bf2a-4746a4d38e9e
25-05-14 01:33:59.330 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:33:59.337 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:33:59.340 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'd7b251d1-2702-47cb-b6c9-816008a27634', 채널명: 'Message Channel'
25-05-14 01:33:59.348 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:33:59.366 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:33:59.386 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID '24c81ef4-bd3e-4b38-8c48-87e3cec10040'의 메시지 목록 조회 시도. 커서: 'null', 크기: 10
25-05-14 01:33:59.438 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:33:59.448 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:33:59.449 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:33:59.451 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:33:59.457 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - 채널 ID '24c81ef4-bd3e-4b38-8c48-87e3cec10040'를 찾을 수 없어 메시지 목록 조회를 중단합니다.
25-05-14 01:33:59.499 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:33:59.500 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:33:59.502 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:33:59.505 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 3a9a4c89-629b-44ab-88e1-f5a29c75b6f1
25-05-14 01:33:59.506 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 3a9a4c89-629b-44ab-88e1-f5a29c75b6f1
25-05-14 01:33:59.506 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 3a9a4c89-629b-44ab-88e1-f5a29c75b6f1
25-05-14 01:33:59.510 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:33:59.513 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:33:59.515 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'c873e554-44e5-4bb1-ae3b-958d60d5e389', 채널명: 'Message Channel'
25-05-14 01:33:59.517 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:33:59.519 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:33:59.530 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'c873e554-44e5-4bb1-ae3b-958d60d5e389', 작성자 ID: '3a9a4c89-629b-44ab-88e1-f5a29c75b6f1'
25-05-14 01:33:59.536 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: 'c873e554-44e5-4bb1-ae3b-958d60d5e389') 및 작성자(ID: '3a9a4c89-629b-44ab-88e1-f5a29c75b6f1') 확인 완료.
25-05-14 01:33:59.536 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:33:59.546 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '1ebc5cb1-3dbe-48cc-9efb-f3a92fac7315', 채널 ID: 'c873e554-44e5-4bb1-ae3b-958d60d5e389'
25-05-14 01:33:59.554 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 시작. ID: '1ebc5cb1-3dbe-48cc-9efb-f3a92fac7315'
25-05-14 01:33:59.559 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:33:59.561 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:33:59.561 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:33:59.562 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:33:59.569 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:33:59.576 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 완료. ID: '1ebc5cb1-3dbe-48cc-9efb-f3a92fac7315'
25-05-14 01:33:59.590 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:33:59.592 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:33:59.595 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:33:59.597 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 580b7779-2118-470a-99a1-4f8869ab5a5f
25-05-14 01:33:59.598 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 580b7779-2118-470a-99a1-4f8869ab5a5f
25-05-14 01:33:59.598 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 580b7779-2118-470a-99a1-4f8869ab5a5f
25-05-14 01:33:59.600 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:33:59.601 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:33:59.603 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '1f1e3e27-920f-4136-8c3b-3fc7c58f7629', 채널명: 'Message Channel'
25-05-14 01:33:59.605 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:33:59.611 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:33:59.619 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '1f1e3e27-920f-4136-8c3b-3fc7c58f7629', 작성자 ID: '580b7779-2118-470a-99a1-4f8869ab5a5f'
25-05-14 01:33:59.620 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '1f1e3e27-920f-4136-8c3b-3fc7c58f7629') 및 작성자(ID: '580b7779-2118-470a-99a1-4f8869ab5a5f') 확인 완료.
25-05-14 01:33:59.620 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:33:59.621 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: 'd343fdf9-f324-4c0b-a513-8dae30a8a50e', 채널 ID: '1f1e3e27-920f-4136-8c3b-3fc7c58f7629'
25-05-14 01:33:59.681 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:33:59.683 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:33:59.685 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:33:59.688 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 4e655ae6-c6e5-40c9-b791-acae86f15617
25-05-14 01:33:59.689 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 4e655ae6-c6e5-40c9-b791-acae86f15617
25-05-14 01:33:59.689 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 4e655ae6-c6e5-40c9-b791-acae86f15617
25-05-14 01:33:59.691 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:33:59.693 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:33:59.694 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'c268539b-ea84-4a8a-874d-7bfbd7ce72ff', 채널명: 'Message Channel'
25-05-14 01:33:59.696 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:33:59.698 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:33:59.701 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'c268539b-ea84-4a8a-874d-7bfbd7ce72ff', 작성자 ID: '4e655ae6-c6e5-40c9-b791-acae86f15617'
25-05-14 01:33:59.702 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: 'c268539b-ea84-4a8a-874d-7bfbd7ce72ff') 및 작성자(ID: '4e655ae6-c6e5-40c9-b791-acae86f15617') 확인 완료.
25-05-14 01:33:59.702 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:33:59.703 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: 'e461fdc4-8db9-49af-8c8e-03bb99b5c419', 채널 ID: 'c268539b-ea84-4a8a-874d-7bfbd7ce72ff'
25-05-14 01:33:59.707 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'c268539b-ea84-4a8a-874d-7bfbd7ce72ff', 작성자 ID: '4e655ae6-c6e5-40c9-b791-acae86f15617'
25-05-14 01:33:59.708 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: 'c268539b-ea84-4a8a-874d-7bfbd7ce72ff') 및 작성자(ID: '4e655ae6-c6e5-40c9-b791-acae86f15617') 확인 완료.
25-05-14 01:33:59.708 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:33:59.711 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '73cac170-4d60-4340-ab57-6b580829908f', 채널 ID: 'c268539b-ea84-4a8a-874d-7bfbd7ce72ff'
25-05-14 01:33:59.714 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID 'c268539b-ea84-4a8a-874d-7bfbd7ce72ff'의 메시지 목록 조회 시도. 커서: 'null', 크기: 10
25-05-14 01:33:59.717 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:33:59.718 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:33:59.719 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:33:59.720 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:33:59.721 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:33:59.721 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:33:59.722 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 최신 메시지부터 조회
25-05-14 01:33:59.726 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:33:59.728 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID 'c268539b-ea84-4a8a-874d-7bfbd7ce72ff'의 메시지 2개 조회 완료. 다음 페이지 존재 여부: false
25-05-14 01:33:59.756 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:33:59.758 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:33:59.761 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:33:59.763 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: e4066d44-7109-4db6-8161-2001d9bc3b59
25-05-14 01:33:59.764 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: e4066d44-7109-4db6-8161-2001d9bc3b59
25-05-14 01:33:59.764 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: e4066d44-7109-4db6-8161-2001d9bc3b59
25-05-14 01:33:59.766 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:33:59.767 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:33:59.768 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '7f20ca87-1b77-48bb-b833-70f55b59df2d', 채널명: 'Message Channel'
25-05-14 01:33:59.769 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:33:59.774 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:33:59.779 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '7f20ca87-1b77-48bb-b833-70f55b59df2d', 작성자 ID: 'e4066d44-7109-4db6-8161-2001d9bc3b59'
25-05-14 01:33:59.780 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '7f20ca87-1b77-48bb-b833-70f55b59df2d') 및 작성자(ID: 'e4066d44-7109-4db6-8161-2001d9bc3b59') 확인 완료.
25-05-14 01:33:59.780 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:33:59.781 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: 'fef1eece-8236-4c91-878d-fef22ae114fc', 채널 ID: '7f20ca87-1b77-48bb-b833-70f55b59df2d'
25-05-14 01:33:59.789 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 시작
25-05-14 01:33:59.794 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 완료
25-05-14 01:33:59.808 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:33:59.811 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:33:59.814 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:33:59.816 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: a37ad074-e408-47da-9775-a36d3cba86c3
25-05-14 01:33:59.817 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: a37ad074-e408-47da-9775-a36d3cba86c3
25-05-14 01:33:59.818 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: a37ad074-e408-47da-9775-a36d3cba86c3
25-05-14 01:33:59.822 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:33:59.823 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:33:59.825 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '3b94dd5e-359a-40c6-9bdd-e14cbf911553', 채널명: 'Message Channel'
25-05-14 01:33:59.826 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:33:59.828 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:33:59.830 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 시작
25-05-14 01:33:59.832 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:33:59.840 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:33:59.841 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:33:59.843 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:33:59.844 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: d2db8356-855f-4f7f-a071-315a06a17eb6
25-05-14 01:33:59.844 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: d2db8356-855f-4f7f-a071-315a06a17eb6
25-05-14 01:33:59.844 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: d2db8356-855f-4f7f-a071-315a06a17eb6
25-05-14 01:33:59.847 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:33:59.849 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:33:59.850 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'a010a972-79a8-4d30-b256-212fdd811223', 채널명: 'Message Channel'
25-05-14 01:33:59.852 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:33:59.855 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:33:59.859 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 시작. ID: '84742ab4-e0d4-4aaa-a00e-a9f007cdf6bf'
25-05-14 01:33:59.860 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:33:59.861 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - ID '84742ab4-e0d4-4aaa-a00e-a9f007cdf6bf'에 해당하는 삭제할 메시지를 찾을 수 없습니다.
25-05-14 01:33:59.870 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:33:59.871 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:33:59.873 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:33:59.874 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 66e6b7ca-4e1a-480b-a2c8-77b346bc742e
25-05-14 01:33:59.874 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 66e6b7ca-4e1a-480b-a2c8-77b346bc742e
25-05-14 01:33:59.874 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 66e6b7ca-4e1a-480b-a2c8-77b346bc742e
25-05-14 01:33:59.877 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:33:59.878 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:33:59.879 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'ed5691fd-8714-45eb-9335-045b8675aa85', 채널명: 'Message Channel'
25-05-14 01:33:59.881 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:33:59.884 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:33:59.889 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'a63da7de-6bf0-4b5f-ab15-a21f43be6542', 작성자 ID: '66e6b7ca-4e1a-480b-a2c8-77b346bc742e'
25-05-14 01:33:59.890 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:33:59.902 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:33:59.904 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:33:59.906 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:33:59.908 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 7e033f24-d376-4676-bdc2-9c6b51afb1ab
25-05-14 01:33:59.909 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 7e033f24-d376-4676-bdc2-9c6b51afb1ab
25-05-14 01:33:59.909 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 7e033f24-d376-4676-bdc2-9c6b51afb1ab
25-05-14 01:33:59.912 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:33:59.914 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:33:59.915 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '161bca7e-3c47-45d3-a661-f7a946f39628', 채널명: 'Message Channel'
25-05-14 01:33:59.917 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:33:59.920 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:33:59.925 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '161bca7e-3c47-45d3-a661-f7a946f39628', 작성자 ID: '7e033f24-d376-4676-bdc2-9c6b51afb1ab'
25-05-14 01:33:59.926 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '161bca7e-3c47-45d3-a661-f7a946f39628') 및 작성자(ID: '7e033f24-d376-4676-bdc2-9c6b51afb1ab') 확인 완료.
25-05-14 01:33:59.926 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 1개 처리 시작.
25-05-14 01:33:59.927 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 파일 메타데이터 생성 및 저장 시작. 파일명: 'test.txt', 크기: 12 bytes, 타입: 'text/plain'
25-05-14 01:33:59.930 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 파일 메타데이터 DB 저장 완료. ID: '33771120-746d-4da4-80b0-377357507918', 파일명: 'test.txt'
25-05-14 01:33:59.931 [main] DEBUG c.s.m.d.r.LocalBinaryContentStorage  - 파일 저장 시도: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget\33771120-746d-4da4-80b0-377357507918
25-05-14 01:33:59.932 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 파일 저장 성공: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget\33771120-746d-4da4-80b0-377357507918
25-05-14 01:33:59.932 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 실제 파일 저장 완료. 저장소 ID: '33771120-746d-4da4-80b0-377357507918' (메타데이터 ID와 동일)
25-05-14 01:33:59.934 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 #1 ('test.txt') 저장 및 연결 완료. 메타데이터 ID: '33771120-746d-4da4-80b0-377357507918'
25-05-14 01:33:59.934 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 총 1개의 첨부파일 처리 완료.
25-05-14 01:33:59.935 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '62ca2ac7-a344-4dd6-b7d3-9ae490efcc06', 채널 ID: '161bca7e-3c47-45d3-a661-f7a946f39628'
25-05-14 01:33:59.960 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:33:59.961 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:33:59.962 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:33:59.963 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:33:59.964 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:33:59.965 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:33:59.966 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:33:59.966 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:33:59.969 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 01:33:59.973 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 01:36:58.196 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Starting MessageApiIntegrationTest using Java 17.0.14 with PID 29700 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:36:58.197 [main] DEBUG c.s.m.d.i.MessageApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:36:58.198 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 01:36:58.931 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:36:58.985 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 6 JPA repository interfaces.
25-05-14 01:36:58.988 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:36:58.989 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:36:58.989 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:37:00.087 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:37:00.286 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 01:37:00.288 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 01:37:00.435 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 01:37:00.470 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:37:00.534 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:37:00.572 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:37:00.874 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:37:00.918 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:37:00.936 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:37:01.946 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:37:01.968 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:37:01.971 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:37:01.973 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:37:01.973 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:37:01.974 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:37:01.975 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:37:01.976 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:37:01.981 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:37:01.983 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:37:01.984 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:37:01.985 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:37:01.986 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:37:01.987 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:37:01.988 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:37:01.989 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:37:01.990 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:37:01.992 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:37:01.993 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:37:01.994 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:37:01.995 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:37:01.997 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:37:01.998 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:37:02.005 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:37:02.410 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 01:37:02.482 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:37:03.274 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 01:37:03.323 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:37:04.313 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 01:37:04.361 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:37:04.361 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:37:04.368 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 01:37:04.381 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 20 ms
25-05-14 01:37:04.465 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Started MessageApiIntegrationTest in 6.754 seconds (process running for 8.0)
25-05-14 01:37:05.112 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:37:05.203 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:37:05.238 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:37:05.282 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 947ff469-b4b3-40fd-80ba-d1d1ddcc0d0d
25-05-14 01:37:05.286 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 947ff469-b4b3-40fd-80ba-d1d1ddcc0d0d
25-05-14 01:37:05.286 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 947ff469-b4b3-40fd-80ba-d1d1ddcc0d0d
25-05-14 01:37:05.341 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:37:05.352 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:37:05.358 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '9301f02e-121f-4e03-bf18-ec6caa9b5cfc', 채널명: 'Message Channel'
25-05-14 01:37:05.369 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:37:05.393 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:37:05.419 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID '1eb6d0c3-01e4-496e-8e59-37b1a1e85ace'의 메시지 목록 조회 시도. 커서: 'null', 크기: 10
25-05-14 01:37:05.465 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:37:05.471 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:37:05.472 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:37:05.473 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:37:05.477 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - 채널 ID '1eb6d0c3-01e4-496e-8e59-37b1a1e85ace'를 찾을 수 없어 메시지 목록 조회를 중단합니다.
25-05-14 01:37:05.510 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:37:05.511 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:37:05.514 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:37:05.515 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 43559fa0-2082-4336-8e2e-f27580b8788f
25-05-14 01:37:05.516 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 43559fa0-2082-4336-8e2e-f27580b8788f
25-05-14 01:37:05.516 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 43559fa0-2082-4336-8e2e-f27580b8788f
25-05-14 01:37:05.518 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:37:05.519 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:37:05.521 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '0abf3a31-23ed-46c5-abfa-4a25cf293cb8', 채널명: 'Message Channel'
25-05-14 01:37:05.522 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:37:05.524 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:37:05.536 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '0abf3a31-23ed-46c5-abfa-4a25cf293cb8', 작성자 ID: '43559fa0-2082-4336-8e2e-f27580b8788f'
25-05-14 01:37:05.543 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '0abf3a31-23ed-46c5-abfa-4a25cf293cb8') 및 작성자(ID: '43559fa0-2082-4336-8e2e-f27580b8788f') 확인 완료.
25-05-14 01:37:05.544 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:37:05.560 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '3f77d47d-b7f5-4005-8043-6741a68f67e5', 채널 ID: '0abf3a31-23ed-46c5-abfa-4a25cf293cb8'
25-05-14 01:37:05.577 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 시작. ID: '3f77d47d-b7f5-4005-8043-6741a68f67e5'
25-05-14 01:37:05.585 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:37:05.586 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:37:05.587 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:37:05.589 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:37:05.596 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:37:05.602 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 완료. ID: '3f77d47d-b7f5-4005-8043-6741a68f67e5'
25-05-14 01:37:05.620 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:37:05.622 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:37:05.623 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:37:05.624 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: aaf4d4da-8a43-4335-9c2d-35fc9fbeeed0
25-05-14 01:37:05.625 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: aaf4d4da-8a43-4335-9c2d-35fc9fbeeed0
25-05-14 01:37:05.625 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: aaf4d4da-8a43-4335-9c2d-35fc9fbeeed0
25-05-14 01:37:05.629 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:37:05.631 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:37:05.633 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'd4a78047-509f-43c7-bbe1-bda692236317', 채널명: 'Message Channel'
25-05-14 01:37:05.636 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:37:05.639 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:37:05.644 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'd4a78047-509f-43c7-bbe1-bda692236317', 작성자 ID: 'aaf4d4da-8a43-4335-9c2d-35fc9fbeeed0'
25-05-14 01:37:05.646 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: 'd4a78047-509f-43c7-bbe1-bda692236317') 및 작성자(ID: 'aaf4d4da-8a43-4335-9c2d-35fc9fbeeed0') 확인 완료.
25-05-14 01:37:05.646 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:37:05.646 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '62750812-f1c4-4fab-a284-b197ced80605', 채널 ID: 'd4a78047-509f-43c7-bbe1-bda692236317'
25-05-14 01:37:05.698 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:37:05.699 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:37:05.700 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:37:05.701 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 16a61084-19d0-46d9-960e-b3c8f3737a54
25-05-14 01:37:05.702 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 16a61084-19d0-46d9-960e-b3c8f3737a54
25-05-14 01:37:05.702 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 16a61084-19d0-46d9-960e-b3c8f3737a54
25-05-14 01:37:05.704 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:37:05.705 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:37:05.706 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '2b68b468-7d11-455e-8bc9-6e7f2dbabc0f', 채널명: 'Message Channel'
25-05-14 01:37:05.707 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:37:05.709 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:37:05.715 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '2b68b468-7d11-455e-8bc9-6e7f2dbabc0f', 작성자 ID: '16a61084-19d0-46d9-960e-b3c8f3737a54'
25-05-14 01:37:05.716 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '2b68b468-7d11-455e-8bc9-6e7f2dbabc0f') 및 작성자(ID: '16a61084-19d0-46d9-960e-b3c8f3737a54') 확인 완료.
25-05-14 01:37:05.716 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:37:05.717 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: 'c0af7c66-209b-4e99-99ea-1693f5f82a88', 채널 ID: '2b68b468-7d11-455e-8bc9-6e7f2dbabc0f'
25-05-14 01:37:05.721 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '2b68b468-7d11-455e-8bc9-6e7f2dbabc0f', 작성자 ID: '16a61084-19d0-46d9-960e-b3c8f3737a54'
25-05-14 01:37:05.722 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '2b68b468-7d11-455e-8bc9-6e7f2dbabc0f') 및 작성자(ID: '16a61084-19d0-46d9-960e-b3c8f3737a54') 확인 완료.
25-05-14 01:37:05.722 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:37:05.723 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: 'febb7e95-87f1-45f4-b1f4-8b633d59cc7a', 채널 ID: '2b68b468-7d11-455e-8bc9-6e7f2dbabc0f'
25-05-14 01:37:05.725 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID '2b68b468-7d11-455e-8bc9-6e7f2dbabc0f'의 메시지 목록 조회 시도. 커서: 'null', 크기: 10
25-05-14 01:37:05.727 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:37:05.728 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:37:05.728 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:37:05.729 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:37:05.729 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:37:05.731 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:37:05.732 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 최신 메시지부터 조회
25-05-14 01:37:05.737 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:37:05.739 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID '2b68b468-7d11-455e-8bc9-6e7f2dbabc0f'의 메시지 2개 조회 완료. 다음 페이지 존재 여부: false
25-05-14 01:37:05.757 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:37:05.759 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:37:05.762 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:37:05.764 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 714d9007-00ad-460c-9ae5-ff0b32314a66
25-05-14 01:37:05.765 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 714d9007-00ad-460c-9ae5-ff0b32314a66
25-05-14 01:37:05.765 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 714d9007-00ad-460c-9ae5-ff0b32314a66
25-05-14 01:37:05.768 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:37:05.770 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:37:05.771 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'd4e8025f-2ca0-4f4e-b950-19df450a5a0a', 채널명: 'Message Channel'
25-05-14 01:37:05.773 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:37:05.775 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:37:05.781 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'd4e8025f-2ca0-4f4e-b950-19df450a5a0a', 작성자 ID: '714d9007-00ad-460c-9ae5-ff0b32314a66'
25-05-14 01:37:05.783 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: 'd4e8025f-2ca0-4f4e-b950-19df450a5a0a') 및 작성자(ID: '714d9007-00ad-460c-9ae5-ff0b32314a66') 확인 완료.
25-05-14 01:37:05.783 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:37:05.783 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: 'f9941115-8b53-42d4-98d5-175074bf87bf', 채널 ID: 'd4e8025f-2ca0-4f4e-b950-19df450a5a0a'
25-05-14 01:37:05.788 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 시작
25-05-14 01:37:05.790 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 완료
25-05-14 01:37:05.801 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:37:05.802 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:37:05.805 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:37:05.807 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 9718f52e-d3ed-4f93-8405-49c1b03e36a2
25-05-14 01:37:05.808 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 9718f52e-d3ed-4f93-8405-49c1b03e36a2
25-05-14 01:37:05.808 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 9718f52e-d3ed-4f93-8405-49c1b03e36a2
25-05-14 01:37:05.811 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:37:05.813 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:37:05.815 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '10cae59c-c7fe-44b3-ad5c-4b550efd5e37', 채널명: 'Message Channel'
25-05-14 01:37:05.818 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:37:05.821 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:37:05.826 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 시작
25-05-14 01:37:05.829 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:37:05.840 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:37:05.841 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:37:05.843 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:37:05.845 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 6990013d-07f2-4d6b-afe3-8d6d24f32529
25-05-14 01:37:05.846 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 6990013d-07f2-4d6b-afe3-8d6d24f32529
25-05-14 01:37:05.846 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 6990013d-07f2-4d6b-afe3-8d6d24f32529
25-05-14 01:37:05.850 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:37:05.851 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:37:05.852 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '9ab7e025-1b95-4fc1-ba25-755212fc99e6', 채널명: 'Message Channel'
25-05-14 01:37:05.853 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:37:05.855 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:37:05.858 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 시작. ID: '5ea9e6dd-ce7c-4974-aaf6-dcd07722fea5'
25-05-14 01:37:05.859 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:37:05.859 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - ID '5ea9e6dd-ce7c-4974-aaf6-dcd07722fea5'에 해당하는 삭제할 메시지를 찾을 수 없습니다.
25-05-14 01:37:05.873 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:37:05.874 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:37:05.877 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:37:05.879 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: b12d6f34-d710-4b95-ad21-f9bbcf7379a4
25-05-14 01:37:05.880 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: b12d6f34-d710-4b95-ad21-f9bbcf7379a4
25-05-14 01:37:05.880 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: b12d6f34-d710-4b95-ad21-f9bbcf7379a4
25-05-14 01:37:05.884 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:37:05.886 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:37:05.888 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'dcfe2085-088c-4248-ba77-3029b13cc992', 채널명: 'Message Channel'
25-05-14 01:37:05.889 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:37:05.892 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:37:05.896 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'e7707d95-2e05-4525-8dd3-106d4009f67d', 작성자 ID: 'b12d6f34-d710-4b95-ad21-f9bbcf7379a4'
25-05-14 01:37:05.897 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:37:05.910 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:37:05.912 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:37:05.914 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:37:05.915 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 025e42dd-d3a7-480c-b134-4688557d27c8
25-05-14 01:37:05.916 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 025e42dd-d3a7-480c-b134-4688557d27c8
25-05-14 01:37:05.916 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 025e42dd-d3a7-480c-b134-4688557d27c8
25-05-14 01:37:05.918 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:37:05.919 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:37:05.920 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '8e2d6135-2740-47be-977e-76ba210ce0fb', 채널명: 'Message Channel'
25-05-14 01:37:05.921 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:37:05.923 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:37:05.926 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '8e2d6135-2740-47be-977e-76ba210ce0fb', 작성자 ID: '025e42dd-d3a7-480c-b134-4688557d27c8'
25-05-14 01:37:05.927 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '8e2d6135-2740-47be-977e-76ba210ce0fb') 및 작성자(ID: '025e42dd-d3a7-480c-b134-4688557d27c8') 확인 완료.
25-05-14 01:37:05.927 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 1개 처리 시작.
25-05-14 01:37:05.927 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 파일 메타데이터 생성 및 저장 시작. 파일명: 'test.txt', 크기: 12 bytes, 타입: 'text/plain'
25-05-14 01:37:05.931 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 파일 메타데이터 DB 저장 완료. ID: '7746af83-6b9b-4065-9757-12124b771013', 파일명: 'test.txt'
25-05-14 01:37:05.931 [main] DEBUG c.s.m.d.r.LocalBinaryContentStorage  - 파일 저장 시도: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget\7746af83-6b9b-4065-9757-12124b771013
25-05-14 01:37:05.932 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 파일 저장 성공: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget\7746af83-6b9b-4065-9757-12124b771013
25-05-14 01:37:05.932 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 실제 파일 저장 완료. 저장소 ID: '7746af83-6b9b-4065-9757-12124b771013' (메타데이터 ID와 동일)
25-05-14 01:37:05.933 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 #1 ('test.txt') 저장 및 연결 완료. 메타데이터 ID: '7746af83-6b9b-4065-9757-12124b771013'
25-05-14 01:37:05.933 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 총 1개의 첨부파일 처리 완료.
25-05-14 01:37:05.934 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: 'c1e06e6a-6087-4e5f-90d6-861ea384abad', 채널 ID: '8e2d6135-2740-47be-977e-76ba210ce0fb'
25-05-14 01:37:05.956 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:37:05.958 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:37:05.959 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:37:05.960 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:37:05.961 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:37:05.964 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:37:05.965 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:37:05.966 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:37:05.969 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 01:37:05.973 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 01:38:23.870 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Starting MessageApiIntegrationTest using Java 17.0.14 with PID 12932 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:38:23.871 [main] DEBUG c.s.m.d.i.MessageApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:38:23.872 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 01:38:24.677 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:38:24.726 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 36 ms. Found 6 JPA repository interfaces.
25-05-14 01:38:24.728 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:38:24.729 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:38:24.729 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:38:25.874 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:38:26.148 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 01:38:26.151 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 01:38:26.287 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 01:38:26.343 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:38:26.429 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:38:26.463 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:38:26.784 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:38:26.830 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:38:26.852 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:38:27.983 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:38:27.999 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:38:27.999 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:38:27.999 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:38:27.999 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:38:27.999 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:38:27.999 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:38:27.999 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:38:28.015 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:38:28.015 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:38:28.015 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:38:28.015 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:38:28.015 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:38:28.015 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:38:28.015 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:38:28.015 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:38:28.015 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:38:28.015 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:38:28.015 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:38:28.015 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:38:28.015 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:38:28.015 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:38:28.015 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:38:28.031 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:38:28.483 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 01:38:28.543 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:38:29.373 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 01:38:29.418 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:38:30.392 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 01:38:30.462 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:38:30.462 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:38:30.473 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 01:38:30.495 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 33 ms
25-05-14 01:38:30.573 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Started MessageApiIntegrationTest in 7.196 seconds (process running for 8.5)
25-05-14 01:38:31.256 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:38:31.344 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:38:31.388 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:38:31.431 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 494b16ec-ee67-43d8-bae7-5bd4893d99b9
25-05-14 01:38:31.435 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 494b16ec-ee67-43d8-bae7-5bd4893d99b9
25-05-14 01:38:31.435 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 494b16ec-ee67-43d8-bae7-5bd4893d99b9
25-05-14 01:38:31.472 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:38:31.484 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:38:31.487 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'd01c9a97-0c70-4ee4-8e46-a4ce72d5ac76', 채널명: 'Message Channel'
25-05-14 01:38:31.487 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:38:31.526 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:38:31.549 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID '2e581355-dc56-4b38-98c5-20ac0d247684'의 메시지 목록 조회 시도. 커서: 'null', 크기: 10
25-05-14 01:38:31.600 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:38:31.606 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:38:31.606 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:38:31.608 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:38:31.616 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - 채널 ID '2e581355-dc56-4b38-98c5-20ac0d247684'를 찾을 수 없어 메시지 목록 조회를 중단합니다.
25-05-14 01:38:31.660 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:38:31.660 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:38:31.660 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:38:31.660 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 8c4aad86-32ac-48f5-8f90-2afbda611f09
25-05-14 01:38:31.660 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 8c4aad86-32ac-48f5-8f90-2afbda611f09
25-05-14 01:38:31.660 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 8c4aad86-32ac-48f5-8f90-2afbda611f09
25-05-14 01:38:31.667 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:38:31.669 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:38:31.671 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '93c0fef1-5d0e-41bf-b42c-cf3c5fec23e0', 채널명: 'Message Channel'
25-05-14 01:38:31.672 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:38:31.675 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:38:31.694 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '93c0fef1-5d0e-41bf-b42c-cf3c5fec23e0', 작성자 ID: '8c4aad86-32ac-48f5-8f90-2afbda611f09'
25-05-14 01:38:31.701 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '93c0fef1-5d0e-41bf-b42c-cf3c5fec23e0') 및 작성자(ID: '8c4aad86-32ac-48f5-8f90-2afbda611f09') 확인 완료.
25-05-14 01:38:31.701 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:38:31.709 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: 'c1f0e2e7-c4e9-4efc-93d1-fba729405216', 채널 ID: '93c0fef1-5d0e-41bf-b42c-cf3c5fec23e0'
25-05-14 01:38:31.725 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 시작. ID: 'c1f0e2e7-c4e9-4efc-93d1-fba729405216'
25-05-14 01:38:31.734 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:38:31.736 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:38:31.737 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:38:31.738 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:38:31.745 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:38:31.745 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 완료. ID: 'c1f0e2e7-c4e9-4efc-93d1-fba729405216'
25-05-14 01:38:31.761 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:38:31.761 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:38:31.761 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:38:31.766 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 83ff5218-de24-4eb2-ab36-12199062c647
25-05-14 01:38:31.768 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 83ff5218-de24-4eb2-ab36-12199062c647
25-05-14 01:38:31.768 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 83ff5218-de24-4eb2-ab36-12199062c647
25-05-14 01:38:31.768 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:38:31.772 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:38:31.772 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '4f3c8cee-abe5-4d90-8520-3b0f3e7dd541', 채널명: 'Message Channel'
25-05-14 01:38:31.772 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:38:31.772 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:38:31.780 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '4f3c8cee-abe5-4d90-8520-3b0f3e7dd541', 작성자 ID: '83ff5218-de24-4eb2-ab36-12199062c647'
25-05-14 01:38:31.782 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '4f3c8cee-abe5-4d90-8520-3b0f3e7dd541') 및 작성자(ID: '83ff5218-de24-4eb2-ab36-12199062c647') 확인 완료.
25-05-14 01:38:31.782 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:38:31.782 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: 'f63e27a7-3eed-45df-abaf-57bd7966409f', 채널 ID: '4f3c8cee-abe5-4d90-8520-3b0f3e7dd541'
25-05-14 01:38:31.822 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:38:31.823 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:38:31.823 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:38:31.823 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 6dd2baa9-c758-4b67-bc9c-7f35fe50f827
25-05-14 01:38:31.823 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 6dd2baa9-c758-4b67-bc9c-7f35fe50f827
25-05-14 01:38:31.823 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 6dd2baa9-c758-4b67-bc9c-7f35fe50f827
25-05-14 01:38:31.823 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:38:31.823 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:38:31.823 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'a2257de9-099d-4361-8009-feafd15225fc', 채널명: 'Message Channel'
25-05-14 01:38:31.838 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:38:31.838 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:38:31.838 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'a2257de9-099d-4361-8009-feafd15225fc', 작성자 ID: '6dd2baa9-c758-4b67-bc9c-7f35fe50f827'
25-05-14 01:38:31.838 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: 'a2257de9-099d-4361-8009-feafd15225fc') 및 작성자(ID: '6dd2baa9-c758-4b67-bc9c-7f35fe50f827') 확인 완료.
25-05-14 01:38:31.838 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:38:31.838 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '1aa2bfe0-3162-4a7b-ad6b-43681d530f57', 채널 ID: 'a2257de9-099d-4361-8009-feafd15225fc'
25-05-14 01:38:31.854 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'a2257de9-099d-4361-8009-feafd15225fc', 작성자 ID: '6dd2baa9-c758-4b67-bc9c-7f35fe50f827'
25-05-14 01:38:31.854 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: 'a2257de9-099d-4361-8009-feafd15225fc') 및 작성자(ID: '6dd2baa9-c758-4b67-bc9c-7f35fe50f827') 확인 완료.
25-05-14 01:38:31.854 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:38:31.856 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: 'bd8d275e-8275-4863-bd4e-91e7112fbfb3', 채널 ID: 'a2257de9-099d-4361-8009-feafd15225fc'
25-05-14 01:38:31.858 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID 'a2257de9-099d-4361-8009-feafd15225fc'의 메시지 목록 조회 시도. 커서: 'null', 크기: 10
25-05-14 01:38:31.860 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:38:31.860 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:38:31.860 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:38:31.860 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:38:31.860 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:38:31.860 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:38:31.860 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 최신 메시지부터 조회
25-05-14 01:38:31.868 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:38:31.870 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID 'a2257de9-099d-4361-8009-feafd15225fc'의 메시지 2개 조회 완료. 다음 페이지 존재 여부: false
25-05-14 01:38:31.901 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:38:31.901 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:38:31.904 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:38:31.908 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 23d943be-e122-4366-b7e5-9a8911d541f9
25-05-14 01:38:31.908 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 23d943be-e122-4366-b7e5-9a8911d541f9
25-05-14 01:38:31.908 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 23d943be-e122-4366-b7e5-9a8911d541f9
25-05-14 01:38:31.913 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:38:31.915 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:38:31.917 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '840d62fc-9436-4e41-90e8-a3cbfa11cc1d', 채널명: 'Message Channel'
25-05-14 01:38:31.919 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:38:31.922 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:38:31.929 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '840d62fc-9436-4e41-90e8-a3cbfa11cc1d', 작성자 ID: '23d943be-e122-4366-b7e5-9a8911d541f9'
25-05-14 01:38:31.931 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '840d62fc-9436-4e41-90e8-a3cbfa11cc1d') 및 작성자(ID: '23d943be-e122-4366-b7e5-9a8911d541f9') 확인 완료.
25-05-14 01:38:31.931 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:38:31.931 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '305689b8-2efa-4667-a8df-e840ff5eabae', 채널 ID: '840d62fc-9436-4e41-90e8-a3cbfa11cc1d'
25-05-14 01:38:31.940 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 시작
25-05-14 01:38:31.944 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 완료
25-05-14 01:38:31.958 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:38:31.958 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:38:31.958 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:38:31.958 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 1f7ff73c-31b2-4637-9b81-5bad306fa9c4
25-05-14 01:38:31.958 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 1f7ff73c-31b2-4637-9b81-5bad306fa9c4
25-05-14 01:38:31.958 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 1f7ff73c-31b2-4637-9b81-5bad306fa9c4
25-05-14 01:38:31.969 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:38:31.969 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:38:31.969 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '00485a5a-aee1-43ff-9d4d-6a5b0c3aa1c1', 채널명: 'Message Channel'
25-05-14 01:38:31.969 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:38:31.981 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:38:31.985 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 시작
25-05-14 01:38:31.985 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:38:32.001 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:38:32.003 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:38:32.003 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:38:32.006 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 177ff6e0-4306-41e7-a6d6-109940471872
25-05-14 01:38:32.006 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 177ff6e0-4306-41e7-a6d6-109940471872
25-05-14 01:38:32.006 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 177ff6e0-4306-41e7-a6d6-109940471872
25-05-14 01:38:32.006 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:38:32.006 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:38:32.016 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '3c85cfd2-40c5-47da-95b5-ff3b05331bd1', 채널명: 'Message Channel'
25-05-14 01:38:32.018 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:38:32.022 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:38:32.026 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 시작. ID: '967a70cc-9cf5-42c8-a8b6-fd0327329012'
25-05-14 01:38:32.026 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:38:32.026 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - ID '967a70cc-9cf5-42c8-a8b6-fd0327329012'에 해당하는 삭제할 메시지를 찾을 수 없습니다.
25-05-14 01:38:32.034 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:38:32.034 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:38:32.034 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:38:32.034 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: da6435ec-c408-40a4-8424-9ce02d8a5556
25-05-14 01:38:32.034 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: da6435ec-c408-40a4-8424-9ce02d8a5556
25-05-14 01:38:32.034 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: da6435ec-c408-40a4-8424-9ce02d8a5556
25-05-14 01:38:32.046 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:38:32.048 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:38:32.050 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'd1434646-babb-4f60-976a-cec75336747b', 채널명: 'Message Channel'
25-05-14 01:38:32.050 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:38:32.055 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:38:32.058 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'e06025bc-3673-4f4b-9572-3974cf6be465', 작성자 ID: 'da6435ec-c408-40a4-8424-9ce02d8a5556'
25-05-14 01:38:32.060 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:38:32.072 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:38:32.072 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:38:32.077 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:38:32.082 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 587a1dc3-cd0d-47af-9b86-4d3f6a97a6d2
25-05-14 01:38:32.082 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 587a1dc3-cd0d-47af-9b86-4d3f6a97a6d2
25-05-14 01:38:32.082 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 587a1dc3-cd0d-47af-9b86-4d3f6a97a6d2
25-05-14 01:38:32.085 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:38:32.085 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:38:32.087 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '33d715bb-e05c-4406-b2b9-4712c5038117', 채널명: 'Message Channel'
25-05-14 01:38:32.087 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:38:32.095 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:38:32.104 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '33d715bb-e05c-4406-b2b9-4712c5038117', 작성자 ID: '587a1dc3-cd0d-47af-9b86-4d3f6a97a6d2'
25-05-14 01:38:32.105 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '33d715bb-e05c-4406-b2b9-4712c5038117') 및 작성자(ID: '587a1dc3-cd0d-47af-9b86-4d3f6a97a6d2') 확인 완료.
25-05-14 01:38:32.106 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 1개 처리 시작.
25-05-14 01:38:32.106 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 파일 메타데이터 생성 및 저장 시작. 파일명: 'test.txt', 크기: 12 bytes, 타입: 'text/plain'
25-05-14 01:38:32.109 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 파일 메타데이터 DB 저장 완료. ID: '8698a7a7-d565-437f-8cb1-935b2e0b71c3', 파일명: 'test.txt'
25-05-14 01:38:32.109 [main] DEBUG c.s.m.d.r.LocalBinaryContentStorage  - 파일 저장 시도: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget\8698a7a7-d565-437f-8cb1-935b2e0b71c3
25-05-14 01:38:32.109 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 파일 저장 성공: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget\8698a7a7-d565-437f-8cb1-935b2e0b71c3
25-05-14 01:38:32.109 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 실제 파일 저장 완료. 저장소 ID: '8698a7a7-d565-437f-8cb1-935b2e0b71c3' (메타데이터 ID와 동일)
25-05-14 01:38:32.109 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 #1 ('test.txt') 저장 및 연결 완료. 메타데이터 ID: '8698a7a7-d565-437f-8cb1-935b2e0b71c3'
25-05-14 01:38:32.109 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 총 1개의 첨부파일 처리 완료.
25-05-14 01:38:32.109 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '7a3195bb-e60f-44be-8aa0-e0575a088fc9', 채널 ID: '33d715bb-e05c-4406-b2b9-4712c5038117'
25-05-14 01:38:32.134 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:38:32.136 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:38:32.136 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:38:32.136 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:38:32.136 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:38:32.138 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:38:32.138 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:38:32.138 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:38:32.141 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 01:38:32.146 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 01:38:39.506 [main] INFO  c.s.m.d.c.MessageControllerTest      - Starting MessageControllerTest using Java 17.0.14 with PID 6984 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:38:39.507 [main] DEBUG c.s.m.d.c.MessageControllerTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:38:39.507 [main] INFO  c.s.m.d.c.MessageControllerTest      - The following 1 profile is active: "dev"
25-05-14 01:38:41.005 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:38:41.324 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:38:41.324 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:38:41.324 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 0 ms
25-05-14 01:38:41.350 [main] INFO  c.s.m.d.c.MessageControllerTest      - Started MessageControllerTest in 2.395 seconds (process running for 3.705)
25-05-14 01:38:48.239 [main] INFO  c.s.m.d.c.MessageControllerTest      - Starting MessageControllerTest using Java 17.0.14 with PID 9004 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:38:48.239 [main] DEBUG c.s.m.d.c.MessageControllerTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:38:48.239 [main] INFO  c.s.m.d.c.MessageControllerTest      - The following 1 profile is active: "dev"
25-05-14 01:38:49.834 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:38:50.178 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:38:50.178 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:38:50.192 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 14 ms
25-05-14 01:38:50.222 [main] INFO  c.s.m.d.c.MessageControllerTest      - Started MessageControllerTest in 2.518 seconds (process running for 3.802)
25-05-14 01:40:46.880 [main] INFO  c.s.m.d.c.MessageControllerTest      - Starting MessageControllerTest using Java 17.0.14 with PID 14736 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:40:46.882 [main] DEBUG c.s.m.d.c.MessageControllerTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:40:46.882 [main] INFO  c.s.m.d.c.MessageControllerTest      - The following 1 profile is active: "dev"
25-05-14 01:40:48.559 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:40:48.903 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:40:48.903 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:40:48.904 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 1 ms
25-05-14 01:40:48.931 [main] INFO  c.s.m.d.c.MessageControllerTest      - Started MessageControllerTest in 2.576 seconds (process running for 4.228)
25-05-14 01:42:37.177 [main] INFO  c.s.m.d.c.MessageControllerTest      - Starting MessageControllerTest using Java 17.0.14 with PID 5856 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:42:37.178 [main] DEBUG c.s.m.d.c.MessageControllerTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:42:37.179 [main] INFO  c.s.m.d.c.MessageControllerTest      - The following 1 profile is active: "dev"
25-05-14 01:42:38.734 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:42:39.054 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:42:39.055 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:42:39.056 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 1 ms
25-05-14 01:42:39.085 [main] INFO  c.s.m.d.c.MessageControllerTest      - Started MessageControllerTest in 2.427 seconds (process running for 3.636)
25-05-14 01:43:13.580 [main] INFO  c.s.m.d.c.MessageControllerTest      - Starting MessageControllerTest using Java 17.0.14 with PID 13688 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:43:13.581 [main] DEBUG c.s.m.d.c.MessageControllerTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:43:13.582 [main] INFO  c.s.m.d.c.MessageControllerTest      - The following 1 profile is active: "dev"
25-05-14 01:43:15.107 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:43:15.445 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:43:15.446 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:43:15.450 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 3 ms
25-05-14 01:43:15.482 [main] INFO  c.s.m.d.c.MessageControllerTest      - Started MessageControllerTest in 2.404 seconds (process running for 3.64)
25-05-14 01:44:12.776 [main] INFO  c.s.m.d.c.MessageControllerTest      - Starting MessageControllerTest using Java 17.0.14 with PID 18132 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:44:12.779 [main] DEBUG c.s.m.d.c.MessageControllerTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:44:12.779 [main] INFO  c.s.m.d.c.MessageControllerTest      - The following 1 profile is active: "dev"
25-05-14 01:44:14.722 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:44:15.109 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:44:15.109 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:44:15.116 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 0 ms
25-05-14 01:44:15.161 [main] INFO  c.s.m.d.c.MessageControllerTest      - Started MessageControllerTest in 3.154 seconds (process running for 4.968)
25-05-14 01:44:20.721 [main] INFO  c.s.m.d.c.MessageControllerTest      - Starting MessageControllerTest using Java 17.0.14 with PID 25824 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:44:20.723 [main] DEBUG c.s.m.d.c.MessageControllerTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:44:20.723 [main] INFO  c.s.m.d.c.MessageControllerTest      - The following 1 profile is active: "dev"
25-05-14 01:44:22.224 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:44:22.555 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:44:22.555 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:44:22.558 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 3 ms
25-05-14 01:44:22.588 [main] INFO  c.s.m.d.c.MessageControllerTest      - Started MessageControllerTest in 2.486 seconds (process running for 3.682)
25-05-14 01:46:22.757 [main] INFO  c.s.m.d.c.MessageControllerTest      - Starting MessageControllerTest using Java 17.0.14 with PID 31844 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:46:22.758 [main] DEBUG c.s.m.d.c.MessageControllerTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:46:22.758 [main] INFO  c.s.m.d.c.MessageControllerTest      - The following 1 profile is active: "dev"
25-05-14 01:46:23.964 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:46:24.052 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 77 ms. Found 6 JPA repository interfaces.
25-05-14 01:46:25.450 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:46:26.617 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:46:26.705 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:46:26.758 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:46:26.941 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:46:26.965 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:46:27.988 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 0, SQLState: 08001
25-05-14 01:46:27.989 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
25-05-14 01:46:27.989 [main] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
org.hibernate.exception.JDBCConnectionException: unable to obtain isolated JDBC connection [Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:352)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	... 114 common frames omitted
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:260)
	at org.postgresql.core.PGStream.<init>(PGStream.java:121)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:140)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:268)
	... 128 common frames omitted
25-05-14 01:46:27.994 [main] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
25-05-14 01:46:27.994 [main] WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
25-05-14 01:46:28.026 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
25-05-14 01:46:28.051 [main] ERROR o.s.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	... 94 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:392)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 109 common frames omitted
25-05-14 01:46:28.058 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.MessageControllerTest@6d035815]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@552fffc8 testClass = com.sprint.mission.discodeit.controller.MessageControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@5524cca1, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@247310d0, [ImportsContextCustomizer@5ac53209 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e535154, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@48e1f6c7, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4d14b6c2, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@23f5b5dc, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@92a0efc0, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@a18202f0], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 74 common frames omitted
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	... 94 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:392)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 109 common frames omitted
25-05-14 01:46:28.081 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.MessageControllerTest@d28a235]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@552fffc8 testClass = com.sprint.mission.discodeit.controller.MessageControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@5524cca1, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@247310d0, [ImportsContextCustomizer@5ac53209 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e535154, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@48e1f6c7, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4d14b6c2, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@23f5b5dc, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@92a0efc0, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@a18202f0], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 01:46:28.087 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.MessageControllerTest@4fc2933e]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@552fffc8 testClass = com.sprint.mission.discodeit.controller.MessageControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@5524cca1, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@247310d0, [ImportsContextCustomizer@5ac53209 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e535154, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@48e1f6c7, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4d14b6c2, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@23f5b5dc, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@92a0efc0, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@a18202f0], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 01:46:28.093 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.MessageControllerTest@746da54f]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@552fffc8 testClass = com.sprint.mission.discodeit.controller.MessageControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@5524cca1, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@247310d0, [ImportsContextCustomizer@5ac53209 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e535154, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@48e1f6c7, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4d14b6c2, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@23f5b5dc, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@92a0efc0, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@a18202f0], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 01:46:28.099 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.MessageControllerTest@742dbac8]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@552fffc8 testClass = com.sprint.mission.discodeit.controller.MessageControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@5524cca1, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@247310d0, [ImportsContextCustomizer@5ac53209 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e535154, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@48e1f6c7, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4d14b6c2, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@23f5b5dc, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@92a0efc0, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@a18202f0], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 01:46:28.104 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.MessageControllerTest@3538a129]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@552fffc8 testClass = com.sprint.mission.discodeit.controller.MessageControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@5524cca1, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@247310d0, [ImportsContextCustomizer@5ac53209 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e535154, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@48e1f6c7, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4d14b6c2, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@23f5b5dc, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@92a0efc0, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@a18202f0], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 01:46:28.108 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.MessageControllerTest@6f8fb906]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@552fffc8 testClass = com.sprint.mission.discodeit.controller.MessageControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@5524cca1, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@247310d0, [ImportsContextCustomizer@5ac53209 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6e535154, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@48e1f6c7, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4d14b6c2, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@23f5b5dc, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@92a0efc0, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@a18202f0], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 01:46:38.752 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Starting MessageApiIntegrationTest using Java 17.0.14 with PID 6944 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:46:38.753 [main] DEBUG c.s.m.d.i.MessageApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:46:38.754 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 01:46:39.515 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:46:39.565 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 6 JPA repository interfaces.
25-05-14 01:46:39.567 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:46:39.567 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:46:39.567 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 01:46:40.616 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:46:40.794 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 01:46:40.797 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 01:46:40.923 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 01:46:40.958 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:46:41.029 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:46:41.076 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:46:41.358 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:46:41.398 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:46:41.412 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:46:42.377 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:46:42.396 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:46:42.399 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:46:42.400 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:46:42.400 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:46:42.401 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:46:42.402 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:46:42.403 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:46:42.408 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:46:42.410 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:46:42.412 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:46:42.412 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:46:42.413 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:46:42.414 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:46:42.415 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:46:42.417 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:46:42.418 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:46:42.419 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:46:42.420 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:46:42.420 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:46:42.422 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:46:42.424 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:46:42.424 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:46:42.428 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:46:42.874 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 01:46:42.945 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:46:43.773 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 01:46:43.819 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:46:44.779 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 01:46:44.845 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:46:44.846 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:46:44.857 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 01:46:44.877 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 30 ms
25-05-14 01:46:44.974 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Started MessageApiIntegrationTest in 6.75 seconds (process running for 8.13)
25-05-14 01:46:45.604 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:46:45.671 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:46:45.719 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:46:45.764 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 2309fdcb-e813-4725-8939-415c2098b6ab
25-05-14 01:46:45.768 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 2309fdcb-e813-4725-8939-415c2098b6ab
25-05-14 01:46:45.769 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 2309fdcb-e813-4725-8939-415c2098b6ab
25-05-14 01:46:45.828 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:46:45.840 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:46:45.846 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '12d189cc-18ae-4ffa-b3a7-6f0ca948448a', 채널명: 'Message Channel'
25-05-14 01:46:45.858 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:46:45.882 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:46:45.918 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID '719bbb43-3cb2-4896-8dab-e88dd9061605'의 메시지 목록 조회 시도. 커서: 'null', 크기: 10
25-05-14 01:46:45.957 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:46:45.963 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:46:45.964 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:46:45.965 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:46:45.970 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - 채널 ID '719bbb43-3cb2-4896-8dab-e88dd9061605'를 찾을 수 없어 메시지 목록 조회를 중단합니다.
25-05-14 01:46:46.006 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:46:46.008 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:46:46.009 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:46:46.011 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 5eb6d195-cd3f-42eb-a6a9-57b570006e3d
25-05-14 01:46:46.012 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 5eb6d195-cd3f-42eb-a6a9-57b570006e3d
25-05-14 01:46:46.012 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 5eb6d195-cd3f-42eb-a6a9-57b570006e3d
25-05-14 01:46:46.014 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:46:46.015 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:46:46.017 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '8086aa83-821e-4bec-bc63-b9e23429fffb', 채널명: 'Message Channel'
25-05-14 01:46:46.019 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:46:46.023 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:46:46.040 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '8086aa83-821e-4bec-bc63-b9e23429fffb', 작성자 ID: '5eb6d195-cd3f-42eb-a6a9-57b570006e3d'
25-05-14 01:46:46.051 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '8086aa83-821e-4bec-bc63-b9e23429fffb') 및 작성자(ID: '5eb6d195-cd3f-42eb-a6a9-57b570006e3d') 확인 완료.
25-05-14 01:46:46.051 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:46:46.067 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: 'f88f1854-3384-40fa-85dc-f9136874fe98', 채널 ID: '8086aa83-821e-4bec-bc63-b9e23429fffb'
25-05-14 01:46:46.078 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 시작. ID: 'f88f1854-3384-40fa-85dc-f9136874fe98'
25-05-14 01:46:46.087 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:46:46.088 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:46:46.090 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:46:46.091 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:46:46.098 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:46:46.105 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 완료. ID: 'f88f1854-3384-40fa-85dc-f9136874fe98'
25-05-14 01:46:46.122 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:46:46.124 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:46:46.126 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:46:46.128 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 72f34299-0b5d-4134-ac57-8942fff357f6
25-05-14 01:46:46.130 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 72f34299-0b5d-4134-ac57-8942fff357f6
25-05-14 01:46:46.131 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 72f34299-0b5d-4134-ac57-8942fff357f6
25-05-14 01:46:46.134 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:46:46.135 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:46:46.137 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'b831bfff-3e0c-4893-abdf-41503a6040cc', 채널명: 'Message Channel'
25-05-14 01:46:46.139 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:46:46.143 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:46:46.149 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'b831bfff-3e0c-4893-abdf-41503a6040cc', 작성자 ID: '72f34299-0b5d-4134-ac57-8942fff357f6'
25-05-14 01:46:46.150 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: 'b831bfff-3e0c-4893-abdf-41503a6040cc') 및 작성자(ID: '72f34299-0b5d-4134-ac57-8942fff357f6') 확인 완료.
25-05-14 01:46:46.151 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:46:46.152 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '6b8a07d9-34bd-4e09-91bc-bdd6e154d49f', 채널 ID: 'b831bfff-3e0c-4893-abdf-41503a6040cc'
25-05-14 01:46:46.189 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:46:46.191 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:46:46.192 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:46:46.194 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: c8d98f84-649c-4308-9347-32969aa8ac52
25-05-14 01:46:46.196 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: c8d98f84-649c-4308-9347-32969aa8ac52
25-05-14 01:46:46.196 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: c8d98f84-649c-4308-9347-32969aa8ac52
25-05-14 01:46:46.198 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:46:46.199 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:46:46.200 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '394066d4-8370-4159-aba5-7867be107e36', 채널명: 'Message Channel'
25-05-14 01:46:46.202 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:46:46.203 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:46:46.207 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '394066d4-8370-4159-aba5-7867be107e36', 작성자 ID: 'c8d98f84-649c-4308-9347-32969aa8ac52'
25-05-14 01:46:46.208 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '394066d4-8370-4159-aba5-7867be107e36') 및 작성자(ID: 'c8d98f84-649c-4308-9347-32969aa8ac52') 확인 완료.
25-05-14 01:46:46.208 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:46:46.209 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '8cb8990c-13f7-4b0d-b14a-6e5922521ca5', 채널 ID: '394066d4-8370-4159-aba5-7867be107e36'
25-05-14 01:46:46.212 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '394066d4-8370-4159-aba5-7867be107e36', 작성자 ID: 'c8d98f84-649c-4308-9347-32969aa8ac52'
25-05-14 01:46:46.213 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '394066d4-8370-4159-aba5-7867be107e36') 및 작성자(ID: 'c8d98f84-649c-4308-9347-32969aa8ac52') 확인 완료.
25-05-14 01:46:46.214 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:46:46.216 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '409788e4-8827-4a30-8510-e20d5acfd613', 채널 ID: '394066d4-8370-4159-aba5-7867be107e36'
25-05-14 01:46:46.220 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID '394066d4-8370-4159-aba5-7867be107e36'의 메시지 목록 조회 시도. 커서: 'null', 크기: 10
25-05-14 01:46:46.223 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:46:46.224 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:46:46.225 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:46:46.225 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:46:46.227 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:46:46.228 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:46:46.229 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 최신 메시지부터 조회
25-05-14 01:46:46.233 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:46:46.235 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID '394066d4-8370-4159-aba5-7867be107e36'의 메시지 2개 조회 완료. 다음 페이지 존재 여부: false
25-05-14 01:46:46.264 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:46:46.265 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:46:46.267 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:46:46.268 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: d7c9a65e-9fb8-48f0-bb2e-83f13cef0182
25-05-14 01:46:46.269 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: d7c9a65e-9fb8-48f0-bb2e-83f13cef0182
25-05-14 01:46:46.269 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: d7c9a65e-9fb8-48f0-bb2e-83f13cef0182
25-05-14 01:46:46.271 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:46:46.273 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:46:46.274 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '184b5cb9-aceb-4d86-8b2f-88e418ec5768', 채널명: 'Message Channel'
25-05-14 01:46:46.275 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:46:46.280 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:46:46.286 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '184b5cb9-aceb-4d86-8b2f-88e418ec5768', 작성자 ID: 'd7c9a65e-9fb8-48f0-bb2e-83f13cef0182'
25-05-14 01:46:46.287 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '184b5cb9-aceb-4d86-8b2f-88e418ec5768') 및 작성자(ID: 'd7c9a65e-9fb8-48f0-bb2e-83f13cef0182') 확인 완료.
25-05-14 01:46:46.287 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 01:46:46.288 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '7d25dbca-844b-4948-816a-1124f661f45d', 채널 ID: '184b5cb9-aceb-4d86-8b2f-88e418ec5768'
25-05-14 01:46:46.292 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 시작
25-05-14 01:46:46.295 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 완료
25-05-14 01:46:46.306 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:46:46.308 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:46:46.310 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:46:46.312 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 5bf0a589-c841-4d06-9559-75f0b101ab0a
25-05-14 01:46:46.313 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 5bf0a589-c841-4d06-9559-75f0b101ab0a
25-05-14 01:46:46.314 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 5bf0a589-c841-4d06-9559-75f0b101ab0a
25-05-14 01:46:46.316 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:46:46.318 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:46:46.319 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '7e091de4-f154-4052-8fdc-dc31fcc4d634', 채널명: 'Message Channel'
25-05-14 01:46:46.320 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:46:46.323 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:46:46.325 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 시작
25-05-14 01:46:46.328 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:46:46.337 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:46:46.338 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:46:46.340 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:46:46.342 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 6c0fa084-ac9d-4368-aa01-fe829e5968ee
25-05-14 01:46:46.343 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 6c0fa084-ac9d-4368-aa01-fe829e5968ee
25-05-14 01:46:46.343 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 6c0fa084-ac9d-4368-aa01-fe829e5968ee
25-05-14 01:46:46.346 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:46:46.347 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:46:46.349 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'd2e1dee2-2546-4282-ae51-800c8154763a', 채널명: 'Message Channel'
25-05-14 01:46:46.352 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:46:46.355 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:46:46.360 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 시작. ID: 'bc7a86c2-d490-47e8-9ad3-210e06818616'
25-05-14 01:46:46.361 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 01:46:46.362 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - ID 'bc7a86c2-d490-47e8-9ad3-210e06818616'에 해당하는 삭제할 메시지를 찾을 수 없습니다.
25-05-14 01:46:46.370 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:46:46.371 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:46:46.373 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:46:46.374 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 8cc89117-ec08-4a9a-9cce-0d7d8a4fdd7c
25-05-14 01:46:46.374 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 8cc89117-ec08-4a9a-9cce-0d7d8a4fdd7c
25-05-14 01:46:46.374 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 8cc89117-ec08-4a9a-9cce-0d7d8a4fdd7c
25-05-14 01:46:46.377 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:46:46.378 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:46:46.379 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '6d8bcc84-17e2-4446-a222-3cb6ae58a9d5', 채널명: 'Message Channel'
25-05-14 01:46:46.381 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:46:46.383 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:46:46.387 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '5be2d221-9b58-4307-bc33-b1e659d2c22a', 작성자 ID: '8cc89117-ec08-4a9a-9cce-0d7d8a4fdd7c'
25-05-14 01:46:46.387 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 01:46:46.399 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 01:46:46.401 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 01:46:46.404 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 01:46:46.406 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 6193a3c9-54ae-40b2-b1e1-6d1ff60f547d
25-05-14 01:46:46.407 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 6193a3c9-54ae-40b2-b1e1-6d1ff60f547d
25-05-14 01:46:46.407 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 6193a3c9-54ae-40b2-b1e1-6d1ff60f547d
25-05-14 01:46:46.410 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 01:46:46.413 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 01:46:46.415 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'b736e7ca-1b1e-4d66-a9ad-9f8cda376070', 채널명: 'Message Channel'
25-05-14 01:46:46.417 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:46:46.420 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 01:46:46.425 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'b736e7ca-1b1e-4d66-a9ad-9f8cda376070', 작성자 ID: '6193a3c9-54ae-40b2-b1e1-6d1ff60f547d'
25-05-14 01:46:46.428 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: 'b736e7ca-1b1e-4d66-a9ad-9f8cda376070') 및 작성자(ID: '6193a3c9-54ae-40b2-b1e1-6d1ff60f547d') 확인 완료.
25-05-14 01:46:46.428 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 1개 처리 시작.
25-05-14 01:46:46.428 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 파일 메타데이터 생성 및 저장 시작. 파일명: 'test.txt', 크기: 12 bytes, 타입: 'text/plain'
25-05-14 01:46:46.431 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 파일 메타데이터 DB 저장 완료. ID: '77f49c28-a235-4d13-a35d-4da3f503571d', 파일명: 'test.txt'
25-05-14 01:46:46.432 [main] DEBUG c.s.m.d.r.LocalBinaryContentStorage  - 파일 저장 시도: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget\77f49c28-a235-4d13-a35d-4da3f503571d
25-05-14 01:46:46.435 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 파일 저장 성공: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget\77f49c28-a235-4d13-a35d-4da3f503571d
25-05-14 01:46:46.436 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 실제 파일 저장 완료. 저장소 ID: '77f49c28-a235-4d13-a35d-4da3f503571d' (메타데이터 ID와 동일)
25-05-14 01:46:46.438 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 #1 ('test.txt') 저장 및 연결 완료. 메타데이터 ID: '77f49c28-a235-4d13-a35d-4da3f503571d'
25-05-14 01:46:46.438 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 총 1개의 첨부파일 처리 완료.
25-05-14 01:46:46.440 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '8d52dc5d-921d-46e8-8b59-074522ab8991', 채널 ID: 'b736e7ca-1b1e-4d66-a9ad-9f8cda376070'
25-05-14 01:46:46.459 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:46:46.460 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:46:46.461 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:46:46.462 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:46:46.463 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:46:46.465 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:46:46.466 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:46:46.466 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:46:46.469 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 01:46:46.472 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 01:46:53.762 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - Starting MessageRepositoryTest using Java 17.0.14 with PID 17776 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:46:53.763 [main] DEBUG c.s.m.d.r.MessageRepositoryTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:46:53.764 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - The following 1 profile is active: "test"
25-05-14 01:46:54.198 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:46:54.283 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 75 ms. Found 6 JPA repository interfaces.
25-05-14 01:46:54.341 [main] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
25-05-14 01:46:54.495 [main] INFO  o.s.j.d.e.EmbeddedDatabaseFactory    - Starting embedded database: url='jdbc:h2:mem:711a24bd-6fac-4ae0-a645-85f0da5e580f;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-05-14 01:46:54.781 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:46:54.836 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:46:54.868 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:46:55.185 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:46:55.247 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:46:55.273 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@502c2278']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:46:56.280 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:46:56.297 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:46:56.299 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:46:56.300 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:46:56.300 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:46:56.301 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:46:56.301 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:46:56.302 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:46:56.306 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:46:56.310 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:46:56.313 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:46:56.314 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:46:56.315 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:46:56.317 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:46:56.318 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:46:56.320 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:46:56.321 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:46:56.322 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:46:56.324 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:46:56.325 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:46:56.326 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:46:56.327 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:46:56.330 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:46:56.335 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:46:56.713 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:46:57.178 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - Started MessageRepositoryTest in 3.944 seconds (process running for 5.268)
25-05-14 01:46:57.666 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:46:57.679 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:46:57.680 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:46:57.726 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:46:57.727 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:46:57.727 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:46:57.735 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:46:57.736 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:46:57.736 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:46:57.743 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:46:57.744 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:46:57.744 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:46:57.756 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:46:57.757 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:46:57.758 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:46:57.769 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:46:57.771 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:46:57.771 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:46:57.782 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:46:57.783 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:46:57.783 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:46:57.793 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:46:57.793 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:46:57.795 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:46:57.796 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:46:57.796 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:46:57.797 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:46:57.798 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:46:57.798 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:47:11.947 [main] INFO  c.s.m.d.c.MessageControllerTest      - Starting MessageControllerTest using Java 17.0.14 with PID 23236 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:47:11.948 [main] DEBUG c.s.m.d.c.MessageControllerTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:47:11.949 [main] INFO  c.s.m.d.c.MessageControllerTest      - The following 1 profile is active: "dev"
25-05-14 01:47:13.269 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:47:13.346 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 64 ms. Found 6 JPA repository interfaces.
25-05-14 01:47:14.764 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:47:15.983 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:47:16.090 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:47:16.150 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:47:16.326 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:47:16.363 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 01:47:17.380 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 0, SQLState: 08001
25-05-14 01:47:17.381 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
25-05-14 01:47:17.382 [main] WARN  o.h.e.j.e.i.JdbcEnvironmentInitiator - HHH000342: Could not obtain connection to query metadata
org.hibernate.exception.JDBCConnectionException: unable to obtain isolated JDBC connection [Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.] [n/a]
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:100)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:116)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:320)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:352)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:54)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:273)
	at org.postgresql.Driver.makeConnection(Driver.java:446)
	at org.postgresql.Driver.connect(Driver.java:298)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:137)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:360)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:461)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:550)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:98)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:111)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:126)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:467)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcIsolationDelegate.delegateWork(JdbcIsolationDelegate.java:61)
	... 114 common frames omitted
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:260)
	at org.postgresql.core.PGStream.<init>(PGStream.java:121)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:140)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:268)
	... 128 common frames omitted
25-05-14 01:47:17.387 [main] ERROR o.s.o.j.LocalContainerEntityManagerFactoryBean - Failed to initialize JPA EntityManagerFactory: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
25-05-14 01:47:17.388 [main] WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
25-05-14 01:47:17.423 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
25-05-14 01:47:17.439 [main] ERROR o.s.boot.SpringApplication           - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	... 94 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:392)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 109 common frames omitted
25-05-14 01:47:17.445 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.MessageControllerTest@4e3a6c83]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@2c6a6ce3 testClass = com.sprint.mission.discodeit.controller.MessageControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@5965d37, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@4b8d604b, [ImportsContextCustomizer@726a5e6a key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f9e9475, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14dd7b39, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d29b4ee, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@642a7222, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@f5352ae6, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@4ee08e18], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:970)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 74 common frames omitted
Caused by: org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment] due to: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:276)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:238)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:215)
	at org.hibernate.boot.model.relational.Database.<init>(Database.java:45)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.getDatabase(InFlightMetadataCollectorImpl.java:226)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:194)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:171)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1502)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:66)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:390)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:419)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:400)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:366)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1849)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	... 94 common frames omitted
Caused by: org.hibernate.HibernateException: Unable to determine Dialect without JDBC metadata (please set 'jakarta.persistence.jdbc.url' for common cases or 'hibernate.dialect' when a custom Dialect implementation must be provided)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.determineDialect(DialectFactoryImpl.java:191)
	at org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl.buildDialect(DialectFactoryImpl.java:87)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentWithDefaults(JdbcEnvironmentInitiator.java:181)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.getJdbcEnvironmentUsingJdbcMetadata(JdbcEnvironmentInitiator.java:392)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:129)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:81)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:130)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 109 common frames omitted
25-05-14 01:47:17.467 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.MessageControllerTest@4902c584]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@2c6a6ce3 testClass = com.sprint.mission.discodeit.controller.MessageControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@5965d37, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@4b8d604b, [ImportsContextCustomizer@726a5e6a key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f9e9475, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14dd7b39, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d29b4ee, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@642a7222, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@f5352ae6, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@4ee08e18], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 01:47:17.474 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.MessageControllerTest@4b62f1ba]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@2c6a6ce3 testClass = com.sprint.mission.discodeit.controller.MessageControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@5965d37, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@4b8d604b, [ImportsContextCustomizer@726a5e6a key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f9e9475, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14dd7b39, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d29b4ee, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@642a7222, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@f5352ae6, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@4ee08e18], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 01:47:17.480 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.MessageControllerTest@662d3e85]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@2c6a6ce3 testClass = com.sprint.mission.discodeit.controller.MessageControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@5965d37, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@4b8d604b, [ImportsContextCustomizer@726a5e6a key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f9e9475, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14dd7b39, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d29b4ee, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@642a7222, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@f5352ae6, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@4ee08e18], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 01:47:17.484 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.MessageControllerTest@92b1bda]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@2c6a6ce3 testClass = com.sprint.mission.discodeit.controller.MessageControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@5965d37, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@4b8d604b, [ImportsContextCustomizer@726a5e6a key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f9e9475, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14dd7b39, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d29b4ee, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@642a7222, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@f5352ae6, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@4ee08e18], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 01:47:17.489 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.MessageControllerTest@58690f5e]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@2c6a6ce3 testClass = com.sprint.mission.discodeit.controller.MessageControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@5965d37, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@4b8d604b, [ImportsContextCustomizer@726a5e6a key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f9e9475, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14dd7b39, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d29b4ee, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@642a7222, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@f5352ae6, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@4ee08e18], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 01:47:17.493 [main] WARN  o.s.test.context.TestContextManager  - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.sprint.mission.discodeit.controller.MessageControllerTest@1a390b8c]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@2c6a6ce3 testClass = com.sprint.mission.discodeit.controller.MessageControllerTest, locations = [], classes = [com.sprint.mission.discodeit.DiscodeitApplication], contextInitializerClasses = [], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@5965d37, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@4b8d604b, [ImportsContextCustomizer@726a5e6a key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1f9e9475, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14dd7b39, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d29b4ee, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@642a7222, org.springframework.test.context.bean.override.BeanOverrideContextCustomizer@f5352ae6, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@4ee08e18], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-14 01:47:40.573 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - Starting MessageRepositoryTest using Java 17.0.14 with PID 28888 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:47:40.574 [main] DEBUG c.s.m.d.r.MessageRepositoryTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:47:40.574 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - The following 1 profile is active: "test"
25-05-14 01:47:40.986 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:47:41.055 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57 ms. Found 6 JPA repository interfaces.
25-05-14 01:47:41.124 [main] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
25-05-14 01:47:41.265 [main] INFO  o.s.j.d.e.EmbeddedDatabaseFactory    - Starting embedded database: url='jdbc:h2:mem:ae845932-2a9c-4624-b296-eb40048129fa;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-05-14 01:47:41.574 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:47:41.631 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:47:41.663 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:47:41.922 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:47:41.972 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:47:41.989 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@2d913116']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:47:42.983 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:47:42.996 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:47:42.998 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:47:42.998 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:47:42.999 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:47:42.999 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:47:43.000 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:47:43.000 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:47:43.006 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:47:43.009 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:47:43.011 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:47:43.011 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:47:43.013 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:47:43.014 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:47:43.014 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:47:43.016 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:47:43.016 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:47:43.017 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:47:43.018 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:47:43.019 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:47:43.020 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:47:43.021 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:47:43.021 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:47:43.025 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:47:43.436 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:47:43.806 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - Started MessageRepositoryTest in 3.776 seconds (process running for 5.131)
25-05-14 01:47:44.303 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:47:44.312 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:47:44.312 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:47:44.348 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:47:44.349 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:47:44.349 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:47:44.359 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:47:44.360 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:47:44.360 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:47:44.368 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:47:44.369 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:47:44.369 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:47:44.377 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:47:44.378 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:47:44.378 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:47:44.385 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:47:44.385 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:47:44.385 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:47:44.391 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:47:44.392 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:47:44.392 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:47:44.401 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:47:44.402 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:47:44.403 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:47:44.404 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:47:44.405 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:47:44.406 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:47:44.407 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:47:44.407 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:50:08.236 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - Starting MessageRepositoryTest using Java 17.0.14 with PID 1264 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:50:08.238 [main] DEBUG c.s.m.d.r.MessageRepositoryTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:50:08.238 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - The following 1 profile is active: "test"
25-05-14 01:50:08.655 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:50:08.770 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 104 ms. Found 6 JPA repository interfaces.
25-05-14 01:50:08.846 [main] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
25-05-14 01:50:09.014 [main] INFO  o.s.j.d.e.EmbeddedDatabaseFactory    - Starting embedded database: url='jdbc:h2:mem:f240b745-d5ff-4728-a43a-2e2ee583406e;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-05-14 01:50:09.340 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:50:09.422 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:50:09.471 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:50:09.782 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:50:09.840 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:50:09.867 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@2d913116']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:50:10.780 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:50:10.792 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:50:10.794 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:50:10.796 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:50:10.797 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:50:10.797 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:50:10.798 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:50:10.799 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:50:10.804 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:50:10.806 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:50:10.809 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:50:10.809 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:50:10.810 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:50:10.811 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:50:10.813 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:50:10.814 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:50:10.815 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:50:10.817 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:50:10.818 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:50:10.819 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:50:10.820 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:50:10.820 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:50:10.821 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:50:10.825 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:50:11.221 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:50:11.567 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - Started MessageRepositoryTest in 3.923 seconds (process running for 5.12)
25-05-14 01:50:12.036 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:50:12.044 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:50:12.044 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:50:12.086 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:50:12.088 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:50:12.088 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:50:12.097 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:50:12.098 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:50:12.099 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:50:12.113 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:50:12.114 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:50:12.114 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:50:12.125 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:50:12.126 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:50:12.126 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:50:12.136 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:50:12.137 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:50:12.137 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:50:12.148 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:50:12.149 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper    - SQL Error: 23502, SQLState: 23502
25-05-14 01:50:12.149 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper    - NULL not allowed for column "CREATED_AT"; SQL statement:
insert into users (created_at,email,password,profile_id,updated_at,username,id) values (?,?,?,?,?,?,?) [23502-232]
25-05-14 01:50:12.159 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:50:12.160 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:50:12.161 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:50:12.162 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:50:12.162 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:50:12.164 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:50:12.164 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:50:12.164 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:53:34.040 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - Starting MessageRepositoryTest using Java 17.0.14 with PID 23316 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:53:34.042 [main] DEBUG c.s.m.d.r.MessageRepositoryTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:53:34.043 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - The following 1 profile is active: "test"
25-05-14 01:53:34.485 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 01:53:34.590 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 91 ms. Found 6 JPA repository interfaces.
25-05-14 01:53:34.650 [main] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
25-05-14 01:53:34.817 [main] INFO  o.s.j.d.e.EmbeddedDatabaseFactory    - Starting embedded database: url='jdbc:h2:mem:9cee509f-948b-4f33-a2c9-76ce5db1e9cb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-05-14 01:53:35.172 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 01:53:35.228 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 01:53:35.274 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 01:53:35.610 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 01:53:35.664 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 01:53:35.689 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@7e5e6573']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 01:53:36.634 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 01:53:36.645 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:53:36.648 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:53:36.648 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:53:36.649 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:53:36.649 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:53:36.649 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:53:36.650 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:53:36.654 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 01:53:36.657 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 01:53:36.658 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 01:53:36.659 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 01:53:36.660 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 01:53:36.660 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 01:53:36.661 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 01:53:36.662 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 01:53:36.663 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 01:53:36.663 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 01:53:36.664 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 01:53:36.665 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 01:53:36.666 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 01:53:36.667 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 01:53:36.667 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 01:53:36.671 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:53:37.036 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 01:53:37.475 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - Started MessageRepositoryTest in 3.966 seconds (process running for 5.21)
25-05-14 01:53:37.927 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:53:37.952 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:53:37.954 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:37.972 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:37.987 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.070 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:53:38.152 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.156 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:53:38.156 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.169 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.182 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.187 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:53:38.203 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.206 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:53:38.207 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.228 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.243 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.247 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.author_id=?
25-05-14 01:53:38.268 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.270 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:53:38.271 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.289 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.304 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.308 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.author_id=?
25-05-14 01:53:38.326 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.329 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:53:38.331 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.350 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.365 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.374 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
        and m1_0.created_at<? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:53:38.382 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.384 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:53:38.385 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.409 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.426 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.430 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:53:38.441 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.443 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 01:53:38.443 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.470 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.485 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 01:53:38.492 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=?
25-05-14 01:53:38.503 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        messages 
    where
        id=?
25-05-14 01:53:38.507 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        messages 
    where
        id=?
25-05-14 01:53:38.507 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        messages 
    where
        id=?
25-05-14 01:53:38.510 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 01:53:38.523 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 01:53:38.524 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 01:53:38.526 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 01:53:38.527 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 01:53:38.528 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 01:53:38.530 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 01:53:38.530 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 01:53:38.531 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 01:53:49.127 [main] INFO  c.s.m.d.c.MessageControllerTest      - Starting MessageControllerTest using Java 17.0.14 with PID 5464 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:53:49.129 [main] DEBUG c.s.m.d.c.MessageControllerTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:53:49.130 [main] INFO  c.s.m.d.c.MessageControllerTest      - The following 1 profile is active: "test"
25-05-14 01:53:50.681 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:53:51.017 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:53:51.018 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:53:51.019 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 1 ms
25-05-14 01:53:51.049 [main] INFO  c.s.m.d.c.MessageControllerTest      - Started MessageControllerTest in 2.469 seconds (process running for 3.749)
25-05-14 01:54:18.151 [main] INFO  c.s.m.d.c.MessageControllerTest      - Starting MessageControllerTest using Java 17.0.14 with PID 16008 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 01:54:18.154 [main] DEBUG c.s.m.d.c.MessageControllerTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 01:54:18.154 [main] INFO  c.s.m.d.c.MessageControllerTest      - The following 1 profile is active: "test"
25-05-14 01:54:19.641 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 01:54:19.928 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 01:54:19.928 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 01:54:19.929 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 1 ms
25-05-14 01:54:19.970 [main] INFO  c.s.m.d.c.MessageControllerTest      - Started MessageControllerTest in 2.352 seconds (process running for 3.603)
25-05-14 20:42:38.493 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Starting MessageApiIntegrationTest using Java 17.0.14 with PID 4692 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 20:42:38.495 [main] DEBUG c.s.m.d.i.MessageApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 20:42:38.496 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - The following 1 profile is active: "test"
25-05-14 20:42:40.063 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 20:42:40.170 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 91 ms. Found 6 JPA repository interfaces.
25-05-14 20:42:40.173 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 20:42:40.174 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 20:42:40.174 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 20:42:42.756 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 20:42:43.209 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 20:42:43.211 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 20:42:43.424 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 20:42:43.509 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 20:42:43.713 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 20:42:43.801 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 20:42:44.287 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 20:42:44.391 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 20:42:44.433 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 20:42:45.915 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 20:42:45.937 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 20:42:45.940 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 20:42:45.941 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 20:42:45.941 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 20:42:45.941 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 20:42:45.942 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 20:42:45.943 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 20:42:45.950 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 20:42:45.952 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 20:42:45.953 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 20:42:45.954 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 20:42:45.955 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 20:42:45.955 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 20:42:45.956 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 20:42:45.957 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 20:42:45.958 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 20:42:45.959 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 20:42:45.960 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 20:42:45.961 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 20:42:45.962 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 20:42:45.963 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 20:42:45.964 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 20:42:45.971 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 20:42:46.544 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 20:42:46.626 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 20:42:47.815 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 20:42:47.870 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 20:42:49.008 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 20:42:49.084 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 20:42:49.084 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 20:42:49.093 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 20:42:49.116 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 32 ms
25-05-14 20:42:49.197 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Started MessageApiIntegrationTest in 11.463 seconds (process running for 13.53)
25-05-14 20:42:49.973 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 20:42:50.067 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:42:50.115 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:42:50.168 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 5276367c-6f21-4a74-8466-ca36c54c435e
25-05-14 20:42:50.172 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 5276367c-6f21-4a74-8466-ca36c54c435e
25-05-14 20:42:50.172 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 5276367c-6f21-4a74-8466-ca36c54c435e
25-05-14 20:42:50.217 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 20:42:50.231 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 20:42:50.238 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '8f4165b1-9d0d-4e55-8985-92f71c168444', 채널명: 'Message Channel'
25-05-14 20:42:50.250 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 20:42:50.278 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 20:42:50.306 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID 'a298c210-0457-40b8-b2ae-f2ce5e67acc6'의 메시지 목록 조회 시도. 커서: 'null', 크기: 10
25-05-14 20:42:50.348 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:42:50.358 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:42:50.360 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:42:50.362 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 20:42:50.368 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - 채널 ID 'a298c210-0457-40b8-b2ae-f2ce5e67acc6'를 찾을 수 없어 메시지 목록 조회를 중단합니다.
25-05-14 20:42:50.418 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 20:42:50.420 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:42:50.422 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:42:50.425 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 8c284792-342c-4e07-bdb6-f0dbad92e4bf
25-05-14 20:42:50.426 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 8c284792-342c-4e07-bdb6-f0dbad92e4bf
25-05-14 20:42:50.427 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 8c284792-342c-4e07-bdb6-f0dbad92e4bf
25-05-14 20:42:50.431 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 20:42:50.433 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 20:42:50.435 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '6142abe5-cea1-49f1-a553-145051527338', 채널명: 'Message Channel'
25-05-14 20:42:50.438 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 20:42:50.443 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 20:42:50.462 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '6142abe5-cea1-49f1-a553-145051527338', 작성자 ID: '8c284792-342c-4e07-bdb6-f0dbad92e4bf'
25-05-14 20:42:50.475 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '6142abe5-cea1-49f1-a553-145051527338') 및 작성자(ID: '8c284792-342c-4e07-bdb6-f0dbad92e4bf') 확인 완료.
25-05-14 20:42:50.476 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 20:42:50.493 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: 'b9b59617-691e-450a-aafb-5837aa5d5922', 채널 ID: '6142abe5-cea1-49f1-a553-145051527338'
25-05-14 20:42:50.505 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 시작. ID: 'b9b59617-691e-450a-aafb-5837aa5d5922'
25-05-14 20:42:50.515 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:42:50.516 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:42:50.518 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:42:50.519 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 20:42:50.528 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 20:42:50.535 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 완료. ID: 'b9b59617-691e-450a-aafb-5837aa5d5922'
25-05-14 20:42:50.549 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 20:42:50.551 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:42:50.554 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:42:50.556 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 38bbefc3-8177-4f96-8b2e-8cf390b0acb7
25-05-14 20:42:50.557 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 38bbefc3-8177-4f96-8b2e-8cf390b0acb7
25-05-14 20:42:50.558 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 38bbefc3-8177-4f96-8b2e-8cf390b0acb7
25-05-14 20:42:50.561 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 20:42:50.563 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 20:42:50.565 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '1e408af9-27bd-4dde-8055-7fab96255a92', 채널명: 'Message Channel'
25-05-14 20:42:50.568 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 20:42:50.572 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 20:42:50.575 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '1e408af9-27bd-4dde-8055-7fab96255a92', 작성자 ID: '38bbefc3-8177-4f96-8b2e-8cf390b0acb7'
25-05-14 20:42:50.576 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '1e408af9-27bd-4dde-8055-7fab96255a92') 및 작성자(ID: '38bbefc3-8177-4f96-8b2e-8cf390b0acb7') 확인 완료.
25-05-14 20:42:50.576 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 20:42:50.577 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '50c89436-e321-46e2-a8ae-d6cf82d625a8', 채널 ID: '1e408af9-27bd-4dde-8055-7fab96255a92'
25-05-14 20:42:50.643 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 20:42:50.644 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:42:50.645 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:42:50.648 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 1e9f5cff-a680-415e-a295-71c70920ecff
25-05-14 20:42:50.650 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 1e9f5cff-a680-415e-a295-71c70920ecff
25-05-14 20:42:50.650 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 1e9f5cff-a680-415e-a295-71c70920ecff
25-05-14 20:42:50.654 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 20:42:50.656 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 20:42:50.658 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'e840f51d-82e9-4521-b640-398051c4d586', 채널명: 'Message Channel'
25-05-14 20:42:50.660 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 20:42:50.664 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 20:42:50.669 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'e840f51d-82e9-4521-b640-398051c4d586', 작성자 ID: '1e9f5cff-a680-415e-a295-71c70920ecff'
25-05-14 20:42:50.670 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: 'e840f51d-82e9-4521-b640-398051c4d586') 및 작성자(ID: '1e9f5cff-a680-415e-a295-71c70920ecff') 확인 완료.
25-05-14 20:42:50.670 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 20:42:50.671 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '29d0b17a-5758-40df-9ff2-784af2ec4278', 채널 ID: 'e840f51d-82e9-4521-b640-398051c4d586'
25-05-14 20:42:50.673 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'e840f51d-82e9-4521-b640-398051c4d586', 작성자 ID: '1e9f5cff-a680-415e-a295-71c70920ecff'
25-05-14 20:42:50.674 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: 'e840f51d-82e9-4521-b640-398051c4d586') 및 작성자(ID: '1e9f5cff-a680-415e-a295-71c70920ecff') 확인 완료.
25-05-14 20:42:50.674 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 20:42:50.675 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '238a3868-60aa-495c-ba99-3549f25e6e06', 채널 ID: 'e840f51d-82e9-4521-b640-398051c4d586'
25-05-14 20:42:50.678 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID 'e840f51d-82e9-4521-b640-398051c4d586'의 메시지 목록 조회 시도. 커서: 'null', 크기: 10
25-05-14 20:42:50.680 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:42:50.681 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:42:50.682 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:42:50.683 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 20:42:50.684 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 20:42:50.685 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 20:42:50.686 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 최신 메시지부터 조회
25-05-14 20:42:50.692 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 20:42:50.695 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 ID 'e840f51d-82e9-4521-b640-398051c4d586'의 메시지 2개 조회 완료. 다음 페이지 존재 여부: false
25-05-14 20:42:50.726 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 20:42:50.728 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:42:50.730 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:42:50.732 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 9ba89427-850c-4b4e-b7f7-3d9721cd3346
25-05-14 20:42:50.734 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 9ba89427-850c-4b4e-b7f7-3d9721cd3346
25-05-14 20:42:50.734 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 9ba89427-850c-4b4e-b7f7-3d9721cd3346
25-05-14 20:42:50.738 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 20:42:50.739 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 20:42:50.741 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'dbd2eb8c-3277-49e6-8c3e-a4242215f792', 채널명: 'Message Channel'
25-05-14 20:42:50.743 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 20:42:50.747 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 20:42:50.753 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'dbd2eb8c-3277-49e6-8c3e-a4242215f792', 작성자 ID: '9ba89427-850c-4b4e-b7f7-3d9721cd3346'
25-05-14 20:42:50.753 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: 'dbd2eb8c-3277-49e6-8c3e-a4242215f792') 및 작성자(ID: '9ba89427-850c-4b4e-b7f7-3d9721cd3346') 확인 완료.
25-05-14 20:42:50.753 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 요청된 첨부파일 없음.
25-05-14 20:42:50.754 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '0bd4fe11-1232-4b65-8e60-425f56f17a5d', 채널 ID: 'dbd2eb8c-3277-49e6-8c3e-a4242215f792'
25-05-14 20:42:50.758 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 시작
25-05-14 20:42:50.761 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 완료
25-05-14 20:42:50.776 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 20:42:50.778 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:42:50.780 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:42:50.783 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 12a365f3-39a4-4ffb-93d2-cb8b4435d72e
25-05-14 20:42:50.784 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 12a365f3-39a4-4ffb-93d2-cb8b4435d72e
25-05-14 20:42:50.785 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 12a365f3-39a4-4ffb-93d2-cb8b4435d72e
25-05-14 20:42:50.789 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 20:42:50.790 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 20:42:50.792 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: 'e5ca0339-25dc-4437-b429-3ba24c147991', 채널명: 'Message Channel'
25-05-14 20:42:50.794 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 20:42:50.796 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 20:42:50.803 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 시작
25-05-14 20:42:50.805 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 20:42:50.817 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 20:42:50.818 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:42:50.821 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:42:50.823 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 550b733d-4646-4002-94d1-dd12dd55f82c
25-05-14 20:42:50.824 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 550b733d-4646-4002-94d1-dd12dd55f82c
25-05-14 20:42:50.824 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 550b733d-4646-4002-94d1-dd12dd55f82c
25-05-14 20:42:50.828 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 20:42:50.829 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 20:42:50.830 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '991632fc-bf64-4706-8290-f3cc411c5694', 채널명: 'Message Channel'
25-05-14 20:42:50.832 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 20:42:50.835 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 20:42:50.837 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 시작. ID: '9d713d9f-cf39-4010-a61b-1e05cf8722dc'
25-05-14 20:42:50.838 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-14 20:42:50.839 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - ID '9d713d9f-cf39-4010-a61b-1e05cf8722dc'에 해당하는 삭제할 메시지를 찾을 수 없습니다.
25-05-14 20:42:50.849 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 20:42:50.851 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:42:50.853 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:42:50.855 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: d14f999c-9dac-48f9-bc05-8f2d4fa9f5a1
25-05-14 20:42:50.856 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: d14f999c-9dac-48f9-bc05-8f2d4fa9f5a1
25-05-14 20:42:50.856 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: d14f999c-9dac-48f9-bc05-8f2d4fa9f5a1
25-05-14 20:42:50.860 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 20:42:50.862 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 20:42:50.864 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '10c2ec38-8d8d-4679-8cda-58f29154c81c', 채널명: 'Message Channel'
25-05-14 20:42:50.866 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 20:42:50.868 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 20:42:50.871 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: 'b44a63b3-9826-41c6-9760-8574afb94ba7', 작성자 ID: 'd14f999c-9dac-48f9-bc05-8f2d4fa9f5a1'
25-05-14 20:42:50.872 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-14 20:42:50.883 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: msguser
25-05-14 20:42:50.885 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:42:50.886 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:42:50.888 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 06fefb9a-77ad-4aae-b98e-d25d98034136
25-05-14 20:42:50.888 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 06fefb9a-77ad-4aae-b98e-d25d98034136
25-05-14 20:42:50.888 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 06fefb9a-77ad-4aae-b98e-d25d98034136
25-05-14 20:42:50.891 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 시작. 채널명: 'Message Channel'
25-05-14 20:42:50.892 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 20:42:50.893 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료. 채널 ID: '5d837976-42d5-40ea-9ec8-e1d3478a7f64', 채널명: 'Message Channel'
25-05-14 20:42:50.894 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 20:42:50.896 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-14 20:42:50.899 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 시작. 채널 ID: '5d837976-42d5-40ea-9ec8-e1d3478a7f64', 작성자 ID: '06fefb9a-77ad-4aae-b98e-d25d98034136'
25-05-14 20:42:50.900 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성을 위한 채널(ID: '5d837976-42d5-40ea-9ec8-e1d3478a7f64') 및 작성자(ID: '06fefb9a-77ad-4aae-b98e-d25d98034136') 확인 완료.
25-05-14 20:42:50.900 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 1개 처리 시작.
25-05-14 20:42:50.900 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 파일 메타데이터 생성 및 저장 시작. 파일명: 'test.txt', 크기: 12 bytes, 타입: 'text/plain'
25-05-14 20:42:50.903 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 파일 메타데이터 DB 저장 완료. ID: 'd15b76dc-005e-493e-816a-4133cc6ab490', 파일명: 'test.txt'
25-05-14 20:42:50.904 [main] DEBUG c.s.m.d.r.LocalBinaryContentStorage  - 파일 저장 시도: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget\d15b76dc-005e-493e-816a-4133cc6ab490
25-05-14 20:42:50.906 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 파일 저장 성공: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget\d15b76dc-005e-493e-816a-4133cc6ab490
25-05-14 20:42:50.906 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 실제 파일 저장 완료. 저장소 ID: 'd15b76dc-005e-493e-816a-4133cc6ab490' (메타데이터 ID와 동일)
25-05-14 20:42:50.908 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 #1 ('test.txt') 저장 및 연결 완료. 메타데이터 ID: 'd15b76dc-005e-493e-816a-4133cc6ab490'
25-05-14 20:42:50.908 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 총 1개의 첨부파일 처리 완료.
25-05-14 20:42:50.910 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 생성 및 저장 완료. 메시지 ID: '914b8b5b-898a-4d80-b4a6-d9d8be2af29e', 채널 ID: '5d837976-42d5-40ea-9ec8-e1d3478a7f64'
25-05-14 20:42:50.926 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 20:42:50.927 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 20:42:50.928 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 20:42:50.929 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 20:42:50.930 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 20:42:50.934 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 20:42:50.935 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 20:42:50.935 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 20:42:50.938 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 20:42:50.946 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 20:43:02.253 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Starting UserApiIntegrationTest using Java 17.0.14 with PID 14924 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 20:43:02.255 [main] DEBUG c.s.m.d.i.UserApiIntegrationTest     - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 20:43:02.256 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - The following 1 profile is active: "test"
25-05-14 20:43:03.423 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 20:43:03.502 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 65 ms. Found 6 JPA repository interfaces.
25-05-14 20:43:03.505 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 20:43:03.506 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 20:43:03.506 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 20:43:05.177 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 20:43:05.479 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 20:43:05.483 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 20:43:05.659 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 20:43:05.725 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 20:43:05.840 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 20:43:05.905 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 20:43:06.366 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 20:43:06.425 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 20:43:06.447 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 20:43:07.845 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 20:43:07.877 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 20:43:07.881 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 20:43:07.883 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 20:43:07.884 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 20:43:07.885 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 20:43:07.886 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 20:43:07.888 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 20:43:07.899 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 20:43:07.905 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 20:43:07.912 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 20:43:07.916 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 20:43:07.919 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 20:43:07.921 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 20:43:07.925 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 20:43:07.928 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 20:43:07.930 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 20:43:07.936 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 20:43:07.939 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 20:43:07.941 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 20:43:07.943 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 20:43:07.948 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 20:43:07.950 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 20:43:07.959 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 20:43:08.545 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 20:43:08.632 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 20:43:10.414 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 20:43:10.480 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 20:43:12.048 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 20:43:12.174 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 20:43:12.174 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 20:43:12.218 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 20:43:12.247 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 73 ms
25-05-14 20:43:12.419 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Started UserApiIntegrationTest in 10.935 seconds (process running for 13.002)
25-05-14 20:43:13.190 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 삭제 시작. ID: '00000000-0000-0000-0000-000000000000'
25-05-14 20:43:13.237 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-14 20:43:13.635 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 20:43:13.637 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 20:43:13.638 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 20:43:13.639 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 20:43:13.640 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 20:43:13.643 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 20:43:13.644 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 20:43:13.646 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 20:43:13.649 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 20:43:13.654 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 20:45:19.003 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Starting UserApiIntegrationTest using Java 17.0.14 with PID 22580 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 20:45:19.006 [main] DEBUG c.s.m.d.i.UserApiIntegrationTest     - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 20:45:19.007 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - The following 1 profile is active: "test"
25-05-14 20:45:20.356 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 20:45:20.456 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 83 ms. Found 6 JPA repository interfaces.
25-05-14 20:45:20.459 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 20:45:20.459 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 20:45:20.459 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 20:45:22.354 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 20:45:22.769 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 20:45:22.773 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 20:45:23.047 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 20:45:23.121 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 20:45:23.303 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 20:45:23.402 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 20:45:23.924 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 20:45:24.003 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 20:45:24.039 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 20:45:25.792 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 20:45:25.812 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 20:45:25.815 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 20:45:25.817 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 20:45:25.818 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 20:45:25.819 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 20:45:25.820 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 20:45:25.821 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 20:45:25.828 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 20:45:25.831 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 20:45:25.834 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 20:45:25.835 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 20:45:25.836 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 20:45:25.838 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 20:45:25.839 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 20:45:25.841 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 20:45:25.843 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 20:45:25.845 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 20:45:25.847 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 20:45:25.850 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 20:45:25.852 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 20:45:25.853 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 20:45:25.854 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 20:45:25.860 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 20:45:26.582 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 20:45:26.686 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 20:45:28.494 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 20:45:28.582 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 20:45:30.306 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 20:45:30.407 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 20:45:30.408 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 20:45:30.421 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 20:45:30.453 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 45 ms
25-05-14 20:45:30.604 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Started UserApiIntegrationTest in 12.41 seconds (process running for 14.579)
25-05-14 20:45:31.465 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 삭제 시작. ID: '00000000-0000-0000-0000-000000000000'
25-05-14 20:45:31.519 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-14 20:45:31.962 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: testuser
25-05-14 20:45:32.063 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:45:32.072 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:45:32.162 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 19f84668-4d84-4871-a09e-e0fa0d37499d
25-05-14 20:45:32.172 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 19f84668-4d84-4871-a09e-e0fa0d37499d
25-05-14 20:45:32.173 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 19f84668-4d84-4871-a09e-e0fa0d37499d
25-05-14 20:45:32.307 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: user1
25-05-14 20:45:32.309 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:45:32.312 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:45:32.315 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: ddd6d416-6a55-4c18-8005-494110e4531b
25-05-14 20:45:32.317 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: ddd6d416-6a55-4c18-8005-494110e4531b
25-05-14 20:45:32.317 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: ddd6d416-6a55-4c18-8005-494110e4531b
25-05-14 20:45:32.324 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: user2
25-05-14 20:45:32.355 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:45:32.368 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:45:32.371 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:45:32.374 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:45:32.377 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: dfbc0ceb-848a-4e33-87a8-60c0a2f600ff
25-05-14 20:45:32.380 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: dfbc0ceb-848a-4e33-87a8-60c0a2f600ff
25-05-14 20:45:32.380 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: dfbc0ceb-848a-4e33-87a8-60c0a2f600ff
25-05-14 20:45:32.385 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 모든 사용자 조회 시도.
25-05-14 20:45:32.406 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:45:32.408 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:45:32.409 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-14 20:45:32.414 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 총 2명의 사용자를 조회했습니다.
25-05-14 20:45:32.478 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: deleteme
25-05-14 20:45:32.481 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:45:32.486 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:45:32.490 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: fdf7bcfd-5d72-42f0-bf76-dec080f63a6d
25-05-14 20:45:32.493 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: fdf7bcfd-5d72-42f0-bf76-dec080f63a6d
25-05-14 20:45:32.493 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: fdf7bcfd-5d72-42f0-bf76-dec080f63a6d
25-05-14 20:45:32.504 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 삭제 시작. ID: 'fdf7bcfd-5d72-42f0-bf76-dec080f63a6d'
25-05-14 20:45:32.508 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID 'fdf7bcfd-5d72-42f0-bf76-dec080f63a6d'가 작성한 메시지들의 작성자 정보를 null로 변경 시작.
25-05-14 20:45:32.516 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.author_id=?
25-05-14 20:45:32.523 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID 'fdf7bcfd-5d72-42f0-bf76-dec080f63a6d'가 작성한 메시지가 없습니다.
25-05-14 20:45:32.524 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 엔티티 삭제 시도
25-05-14 20:45:32.534 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 삭제 완료. ID: 'fdf7bcfd-5d72-42f0-bf76-dec080f63a6d'
25-05-14 20:45:32.542 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 모든 사용자 조회 시도.
25-05-14 20:45:32.546 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:45:32.549 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:45:32.555 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        user_statuses 
    where
        id=?
25-05-14 20:45:32.561 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        users 
    where
        id=?
25-05-14 20:45:32.563 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-14 20:45:32.565 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 총 0명의 사용자를 조회했습니다.
25-05-14 20:45:32.606 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 업데이트 시작. ID: 00000000-0000-0000-0000-000000000000
25-05-14 20:45:32.607 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-14 20:45:32.630 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: user1
25-05-14 20:45:32.633 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:45:32.637 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:45:32.642 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 225e988e-6189-484d-a335-f0c3150135c0
25-05-14 20:45:32.644 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 225e988e-6189-484d-a335-f0c3150135c0
25-05-14 20:45:32.645 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 225e988e-6189-484d-a335-f0c3150135c0
25-05-14 20:45:32.652 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: user2
25-05-14 20:45:32.656 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:45:32.658 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:45:32.659 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:45:32.662 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 유효성 검사 실패: 이메일 'duplicate@example.com'은(는) 이미 존재합니다.
25-05-14 20:45:32.685 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: duplicateuser
25-05-14 20:45:32.688 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:45:32.694 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:45:32.697 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 3d1802fc-c00a-4762-8c07-c5cffcd41ec3
25-05-14 20:45:32.699 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 3d1802fc-c00a-4762-8c07-c5cffcd41ec3
25-05-14 20:45:32.699 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 3d1802fc-c00a-4762-8c07-c5cffcd41ec3
25-05-14 20:45:32.707 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: duplicateuser
25-05-14 20:45:32.711 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:45:32.713 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:45:32.715 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:45:32.719 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:45:32.721 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 유효성 검사 실패: 사용자명 'duplicateuser'은(는) 이미 존재합니다.
25-05-14 20:45:32.743 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: originaluser
25-05-14 20:45:32.746 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:45:32.751 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:45:32.754 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: e4f858dc-73e8-42c4-ab7e-43dade3ac361
25-05-14 20:45:32.756 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: e4f858dc-73e8-42c4-ab7e-43dade3ac361
25-05-14 20:45:32.757 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: e4f858dc-73e8-42c4-ab7e-43dade3ac361
25-05-14 20:45:32.763 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 업데이트 시작. ID: e4f858dc-73e8-42c4-ab7e-43dade3ac361
25-05-14 20:45:32.767 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:45:32.770 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:45:32.772 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:45:32.773 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID 'e4f858dc-73e8-42c4-ab7e-43dade3ac361'의 사용자명을 'updateduser'(으)로 변경.
25-05-14 20:45:32.787 [main] DEBUG org.hibernate.SQL                    - 
    update
        users 
    set
        email=?,
        password=?,
        profile_id=?,
        updated_at=?,
        username=? 
    where
        id=?
25-05-14 20:45:32.797 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:45:32.799 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID 'e4f858dc-73e8-42c4-ab7e-43dade3ac361'의 이메일을 'updated@example.com'(으)로 변경.
25-05-14 20:45:32.799 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID 'e4f858dc-73e8-42c4-ab7e-43dade3ac361'의 비밀번호를 변경했습니다.
25-05-14 20:45:32.805 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 업데이트 DB 저장 완료. ID: e4f858dc-73e8-42c4-ab7e-43dade3ac361
25-05-14 20:45:32.805 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 업데이트 로직 종료. ID: e4f858dc-73e8-42c4-ab7e-43dade3ac361
25-05-14 20:45:32.841 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 20:45:32.843 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 20:45:32.845 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 20:45:32.847 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 20:45:32.848 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 20:45:32.852 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 20:45:32.853 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 20:45:32.854 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 20:45:32.860 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 20:45:32.867 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 20:47:21.754 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Starting UserApiIntegrationTest using Java 17.0.14 with PID 29836 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 20:47:21.756 [main] DEBUG c.s.m.d.i.UserApiIntegrationTest     - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 20:47:21.757 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - The following 1 profile is active: "test"
25-05-14 20:47:23.007 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 20:47:23.112 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 91 ms. Found 6 JPA repository interfaces.
25-05-14 20:47:23.116 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 20:47:23.117 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 20:47:23.117 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 20:47:25.046 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 20:47:25.372 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 20:47:25.375 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 20:47:25.604 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 20:47:25.664 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 20:47:25.796 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 20:47:25.864 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 20:47:26.295 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 20:47:26.358 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 20:47:26.389 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 20:47:27.891 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 20:47:27.907 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 20:47:27.909 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 20:47:27.911 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 20:47:27.912 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 20:47:27.912 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 20:47:27.914 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 20:47:27.916 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 20:47:27.922 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 20:47:27.925 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 20:47:27.929 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 20:47:27.930 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 20:47:27.932 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 20:47:27.933 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 20:47:27.934 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 20:47:27.938 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 20:47:27.939 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 20:47:27.940 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 20:47:27.942 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 20:47:27.945 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 20:47:27.947 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 20:47:27.949 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 20:47:27.951 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 20:47:27.957 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 20:47:28.652 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 20:47:28.760 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 20:47:30.077 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 20:47:30.146 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 20:47:31.721 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 20:47:31.842 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 20:47:31.844 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 20:47:31.861 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 20:47:31.894 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 50 ms
25-05-14 20:47:32.042 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Started UserApiIntegrationTest in 11.117 seconds (process running for 13.596)
25-05-14 20:47:33.477 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: testuser
25-05-14 20:47:33.672 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:47:33.772 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:47:33.897 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 45b0c1d0-f373-4cd3-ad50-75a576107330
25-05-14 20:47:33.908 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 45b0c1d0-f373-4cd3-ad50-75a576107330
25-05-14 20:47:33.909 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 45b0c1d0-f373-4cd3-ad50-75a576107330
25-05-14 20:47:34.162 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 20:47:34.164 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 20:47:34.167 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 20:47:34.170 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 20:47:34.171 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 20:47:34.177 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 20:47:34.178 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 20:47:34.180 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 20:47:34.186 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 20:47:34.193 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 20:47:44.193 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Starting UserApiIntegrationTest using Java 17.0.14 with PID 8392 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 20:47:44.195 [main] DEBUG c.s.m.d.i.UserApiIntegrationTest     - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 20:47:44.197 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - The following 1 profile is active: "test"
25-05-14 20:47:45.419 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 20:47:45.500 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 67 ms. Found 6 JPA repository interfaces.
25-05-14 20:47:45.502 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 20:47:45.503 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 20:47:45.504 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 20:47:47.586 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 20:47:47.950 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 20:47:47.953 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 20:47:48.172 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 20:47:48.238 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 20:47:48.376 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 20:47:48.468 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 20:47:48.936 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 20:47:49.027 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 20:47:49.068 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 20:47:50.637 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 20:47:50.657 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 20:47:50.661 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 20:47:50.662 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 20:47:50.662 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 20:47:50.664 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 20:47:50.665 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 20:47:50.666 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 20:47:50.671 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 20:47:50.674 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 20:47:50.676 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 20:47:50.678 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 20:47:50.679 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 20:47:50.681 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 20:47:50.682 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 20:47:50.684 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 20:47:50.686 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 20:47:50.687 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 20:47:50.688 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 20:47:50.688 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 20:47:50.689 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 20:47:50.690 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 20:47:50.692 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 20:47:50.699 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 20:47:51.280 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 20:47:51.361 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 20:47:52.523 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 20:47:52.577 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 20:47:53.895 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 20:47:53.974 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 20:47:53.975 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 20:47:53.987 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 20:47:54.013 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 37 ms
25-05-14 20:47:54.139 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Started UserApiIntegrationTest in 10.812 seconds (process running for 13.308)
25-05-14 20:47:54.934 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 삭제 시작. ID: '00000000-0000-0000-0000-000000000000'
25-05-14 20:47:54.969 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-14 20:47:55.387 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: testuser
25-05-14 20:47:55.471 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:47:55.477 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:47:55.526 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: ecd39de2-cf45-4373-99af-8eb9e7b237f3
25-05-14 20:47:55.534 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: ecd39de2-cf45-4373-99af-8eb9e7b237f3
25-05-14 20:47:55.534 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: ecd39de2-cf45-4373-99af-8eb9e7b237f3
25-05-14 20:47:55.620 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: user1
25-05-14 20:47:55.621 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:47:55.624 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:47:55.626 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: c6979a7f-eae0-447b-aac6-5bb30d77b2f1
25-05-14 20:47:55.628 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: c6979a7f-eae0-447b-aac6-5bb30d77b2f1
25-05-14 20:47:55.628 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: c6979a7f-eae0-447b-aac6-5bb30d77b2f1
25-05-14 20:47:55.634 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: user2
25-05-14 20:47:55.663 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:47:55.674 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:47:55.676 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:47:55.678 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:47:55.679 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 4881a9a5-d365-48ea-95f7-cc1ba5f969ee
25-05-14 20:47:55.680 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 4881a9a5-d365-48ea-95f7-cc1ba5f969ee
25-05-14 20:47:55.681 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 4881a9a5-d365-48ea-95f7-cc1ba5f969ee
25-05-14 20:47:55.683 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 모든 사용자 조회 시도.
25-05-14 20:47:55.699 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:47:55.701 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:47:55.702 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-14 20:47:55.708 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 총 2명의 사용자를 조회했습니다.
25-05-14 20:47:55.815 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: deleteme
25-05-14 20:47:55.817 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:47:55.820 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:47:55.824 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 88ede50f-9026-49ff-88b5-c243e95acf9e
25-05-14 20:47:55.827 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 88ede50f-9026-49ff-88b5-c243e95acf9e
25-05-14 20:47:55.828 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 88ede50f-9026-49ff-88b5-c243e95acf9e
25-05-14 20:47:55.837 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 삭제 시작. ID: '88ede50f-9026-49ff-88b5-c243e95acf9e'
25-05-14 20:47:55.839 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID '88ede50f-9026-49ff-88b5-c243e95acf9e'가 작성한 메시지들의 작성자 정보를 null로 변경 시작.
25-05-14 20:47:55.844 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.author_id=?
25-05-14 20:47:55.849 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID '88ede50f-9026-49ff-88b5-c243e95acf9e'가 작성한 메시지가 없습니다.
25-05-14 20:47:55.849 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 엔티티 삭제 시도
25-05-14 20:47:55.857 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 삭제 완료. ID: '88ede50f-9026-49ff-88b5-c243e95acf9e'
25-05-14 20:47:55.861 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 모든 사용자 조회 시도.
25-05-14 20:47:55.863 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:47:55.865 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:47:55.869 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        user_statuses 
    where
        id=?
25-05-14 20:47:55.874 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        users 
    where
        id=?
25-05-14 20:47:55.876 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-14 20:47:55.878 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 총 0명의 사용자를 조회했습니다.
25-05-14 20:47:55.911 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 업데이트 시작. ID: 00000000-0000-0000-0000-000000000000
25-05-14 20:47:55.912 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-14 20:47:55.933 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: user1
25-05-14 20:47:55.935 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:47:55.938 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:47:55.941 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 671f1aff-00b1-486e-b97b-f1b1208b3ae2
25-05-14 20:47:55.942 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 671f1aff-00b1-486e-b97b-f1b1208b3ae2
25-05-14 20:47:55.944 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 671f1aff-00b1-486e-b97b-f1b1208b3ae2
25-05-14 20:47:55.950 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: user2
25-05-14 20:47:55.953 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:47:55.954 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:47:55.955 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:47:55.958 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 유효성 검사 실패: 이메일 'duplicate@example.com'은(는) 이미 존재합니다.
25-05-14 20:47:55.978 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: duplicateuser
25-05-14 20:47:55.980 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:47:55.984 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:47:55.987 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 09e988d4-09b7-4832-a617-30828351e549
25-05-14 20:47:55.988 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 09e988d4-09b7-4832-a617-30828351e549
25-05-14 20:47:55.988 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 09e988d4-09b7-4832-a617-30828351e549
25-05-14 20:47:55.994 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: duplicateuser
25-05-14 20:47:55.996 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:47:55.997 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:47:55.999 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:47:56.002 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:47:56.004 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 유효성 검사 실패: 사용자명 'duplicateuser'은(는) 이미 존재합니다.
25-05-14 20:47:56.017 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: originaluser
25-05-14 20:47:56.018 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:47:56.020 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:47:56.022 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 13fe1b1b-66a7-420e-a54e-8ea38e957d48
25-05-14 20:47:56.024 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 13fe1b1b-66a7-420e-a54e-8ea38e957d48
25-05-14 20:47:56.024 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 13fe1b1b-66a7-420e-a54e-8ea38e957d48
25-05-14 20:47:56.030 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 업데이트 시작. ID: 13fe1b1b-66a7-420e-a54e-8ea38e957d48
25-05-14 20:47:56.033 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:47:56.034 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:47:56.035 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:47:56.036 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID '13fe1b1b-66a7-420e-a54e-8ea38e957d48'의 사용자명을 'updateduser'(으)로 변경.
25-05-14 20:47:56.047 [main] DEBUG org.hibernate.SQL                    - 
    update
        users 
    set
        email=?,
        password=?,
        profile_id=?,
        updated_at=?,
        username=? 
    where
        id=?
25-05-14 20:47:56.054 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:47:56.055 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID '13fe1b1b-66a7-420e-a54e-8ea38e957d48'의 이메일을 'updated@example.com'(으)로 변경.
25-05-14 20:47:56.055 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID '13fe1b1b-66a7-420e-a54e-8ea38e957d48'의 비밀번호를 변경했습니다.
25-05-14 20:47:56.059 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 업데이트 DB 저장 완료. ID: 13fe1b1b-66a7-420e-a54e-8ea38e957d48
25-05-14 20:47:56.059 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 업데이트 로직 종료. ID: 13fe1b1b-66a7-420e-a54e-8ea38e957d48
25-05-14 20:47:56.095 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 20:47:56.097 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 20:47:56.098 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 20:47:56.099 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 20:47:56.100 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 20:47:56.102 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 20:47:56.102 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 20:47:56.104 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 20:47:56.107 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 20:47:56.112 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 20:49:40.544 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Starting UserApiIntegrationTest using Java 17.0.14 with PID 8784 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 20:49:40.547 [main] DEBUG c.s.m.d.i.UserApiIntegrationTest     - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 20:49:40.548 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - The following 1 profile is active: "test"
25-05-14 20:49:41.995 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 20:49:42.097 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 88 ms. Found 6 JPA repository interfaces.
25-05-14 20:49:42.097 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-14 20:49:42.097 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 20:49:42.097 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-14 20:49:44.488 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-14 20:49:44.918 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-14 20:49:44.918 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-14 20:49:45.133 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-14 20:49:45.196 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 20:49:45.336 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 20:49:45.408 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 20:49:45.918 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 20:49:45.988 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 20:49:46.025 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 20:49:47.944 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 20:49:47.968 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 20:49:47.971 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 20:49:47.973 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 20:49:47.974 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 20:49:47.975 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 20:49:47.976 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 20:49:47.978 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 20:49:47.987 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 20:49:47.989 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 20:49:47.991 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 20:49:47.992 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 20:49:47.993 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 20:49:47.996 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 20:49:47.997 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 20:49:48.000 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 20:49:48.003 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 20:49:48.004 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 20:49:48.007 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 20:49:48.008 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 20:49:48.010 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 20:49:48.011 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 20:49:48.013 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 20:49:48.020 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 20:49:48.867 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-14 20:49:49.007 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 20:49:50.753 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-14 20:49:50.844 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-14 20:49:53.177 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-14 20:49:53.334 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-14 20:49:53.334 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-14 20:49:53.353 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-14 20:49:53.395 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 61 ms
25-05-14 20:49:53.582 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Started UserApiIntegrationTest in 13.904 seconds (process running for 16.473)
25-05-14 20:49:54.460 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 삭제 시작. ID: '00000000-0000-0000-0000-000000000000'
25-05-14 20:49:54.507 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-14 20:49:54.976 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: testuser
25-05-14 20:49:55.082 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:49:55.090 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:49:55.170 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: af2cf28c-297e-4394-bf96-feb79c3c08dd
25-05-14 20:49:55.178 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: af2cf28c-297e-4394-bf96-feb79c3c08dd
25-05-14 20:49:55.178 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: af2cf28c-297e-4394-bf96-feb79c3c08dd
25-05-14 20:49:55.290 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: user1
25-05-14 20:49:55.292 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:49:55.297 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:49:55.300 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 4813ed76-ce61-4c2b-b9b7-90d0dfd30ef1
25-05-14 20:49:55.301 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 4813ed76-ce61-4c2b-b9b7-90d0dfd30ef1
25-05-14 20:49:55.302 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 4813ed76-ce61-4c2b-b9b7-90d0dfd30ef1
25-05-14 20:49:55.308 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: user2
25-05-14 20:49:55.345 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:49:55.360 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:49:55.362 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:49:55.366 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:49:55.368 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 15912908-40d9-4bf3-8ce5-edbb706eb586
25-05-14 20:49:55.370 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 15912908-40d9-4bf3-8ce5-edbb706eb586
25-05-14 20:49:55.370 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 15912908-40d9-4bf3-8ce5-edbb706eb586
25-05-14 20:49:55.376 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 모든 사용자 조회 시도.
25-05-14 20:49:55.393 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:49:55.395 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:49:55.396 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-14 20:49:55.402 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 총 2명의 사용자를 조회했습니다.
25-05-14 20:49:55.456 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: deleteme
25-05-14 20:49:55.459 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:49:55.462 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:49:55.465 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 0884fd56-d78e-473e-83c4-17056d3e8b15
25-05-14 20:49:55.468 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 0884fd56-d78e-473e-83c4-17056d3e8b15
25-05-14 20:49:55.468 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 0884fd56-d78e-473e-83c4-17056d3e8b15
25-05-14 20:49:55.476 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 삭제 시작. ID: '0884fd56-d78e-473e-83c4-17056d3e8b15'
25-05-14 20:49:55.480 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID '0884fd56-d78e-473e-83c4-17056d3e8b15'가 작성한 메시지들의 작성자 정보를 null로 변경 시작.
25-05-14 20:49:55.486 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.author_id=?
25-05-14 20:49:55.492 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID '0884fd56-d78e-473e-83c4-17056d3e8b15'가 작성한 메시지가 없습니다.
25-05-14 20:49:55.492 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 엔티티 삭제 시도
25-05-14 20:49:55.498 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 삭제 완료. ID: '0884fd56-d78e-473e-83c4-17056d3e8b15'
25-05-14 20:49:55.501 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 모든 사용자 조회 시도.
25-05-14 20:49:55.503 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:49:55.505 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:49:55.508 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        user_statuses 
    where
        id=?
25-05-14 20:49:55.512 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        users 
    where
        id=?
25-05-14 20:49:55.513 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-14 20:49:55.514 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 총 0명의 사용자를 조회했습니다.
25-05-14 20:49:55.543 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 업데이트 시작. ID: 00000000-0000-0000-0000-000000000000
25-05-14 20:49:55.544 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-14 20:49:55.566 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: user1
25-05-14 20:49:55.568 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:49:55.571 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:49:55.574 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 95b7bc81-8729-4937-9842-af8e6dde8d3d
25-05-14 20:49:55.575 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 95b7bc81-8729-4937-9842-af8e6dde8d3d
25-05-14 20:49:55.576 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 95b7bc81-8729-4937-9842-af8e6dde8d3d
25-05-14 20:49:55.580 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: user2
25-05-14 20:49:55.583 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:49:55.585 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:49:55.586 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:49:55.589 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 유효성 검사 실패: 이메일 'duplicate@example.com'은(는) 이미 존재합니다.
25-05-14 20:49:55.610 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: duplicateuser
25-05-14 20:49:55.612 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:49:55.616 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:49:55.619 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 67d91d61-b960-43e5-8611-bc2c6124e387
25-05-14 20:49:55.621 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 67d91d61-b960-43e5-8611-bc2c6124e387
25-05-14 20:49:55.621 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 67d91d61-b960-43e5-8611-bc2c6124e387
25-05-14 20:49:55.628 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: duplicateuser
25-05-14 20:49:55.630 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:49:55.632 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:49:55.634 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:49:55.637 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:49:55.639 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 유효성 검사 실패: 사용자명 'duplicateuser'은(는) 이미 존재합니다.
25-05-14 20:49:55.657 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 시작. 사용자명: originaluser
25-05-14 20:49:55.659 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:49:55.661 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:49:55.663 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 DB 저장 완료. ID: 8f841a6c-1e9c-491e-8c36-31f366b75064
25-05-14 20:49:55.664 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 및 연결 완료. 사용자 ID: 8f841a6c-1e9c-491e-8c36-31f366b75064
25-05-14 20:49:55.664 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료. 반환된 사용자 ID: 8f841a6c-1e9c-491e-8c36-31f366b75064
25-05-14 20:49:55.669 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 업데이트 시작. ID: 8f841a6c-1e9c-491e-8c36-31f366b75064
25-05-14 20:49:55.672 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 20:49:55.673 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 20:49:55.673 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-14 20:49:55.674 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID '8f841a6c-1e9c-491e-8c36-31f366b75064'의 사용자명을 'updateduser'(으)로 변경.
25-05-14 20:49:55.682 [main] DEBUG org.hibernate.SQL                    - 
    update
        users 
    set
        email=?,
        password=?,
        profile_id=?,
        updated_at=?,
        username=? 
    where
        id=?
25-05-14 20:49:55.688 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-14 20:49:55.689 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID '8f841a6c-1e9c-491e-8c36-31f366b75064'의 이메일을 'updated@example.com'(으)로 변경.
25-05-14 20:49:55.689 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID '8f841a6c-1e9c-491e-8c36-31f366b75064'의 비밀번호를 변경했습니다.
25-05-14 20:49:55.693 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 업데이트 DB 저장 완료. ID: 8f841a6c-1e9c-491e-8c36-31f366b75064
25-05-14 20:49:55.693 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 업데이트 로직 종료. ID: 8f841a6c-1e9c-491e-8c36-31f366b75064
25-05-14 20:49:55.696 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 모든 사용자 조회 시도.
25-05-14 20:49:55.699 [main] DEBUG org.hibernate.SQL                    - 
    update
        users 
    set
        email=?,
        password=?,
        profile_id=?,
        updated_at=?,
        username=? 
    where
        id=?
25-05-14 20:49:55.700 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-14 20:49:55.701 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 총 1명의 사용자를 조회했습니다.
25-05-14 20:49:55.728 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 20:49:55.729 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 20:49:55.731 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 20:49:55.733 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 20:49:55.734 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 20:49:55.737 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 20:49:55.738 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 20:49:55.740 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 20:49:55.745 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-14 20:49:55.750 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-14 21:45:32.780 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - Starting MessageRepositoryTest using Java 17.0.14 with PID 4112 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 21:45:32.782 [main] DEBUG c.s.m.d.r.MessageRepositoryTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 21:45:32.783 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - The following 1 profile is active: "test"
25-05-14 21:45:33.736 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 21:45:33.912 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 152 ms. Found 6 JPA repository interfaces.
25-05-14 21:45:34.035 [main] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
25-05-14 21:45:34.334 [main] INFO  o.s.j.d.e.EmbeddedDatabaseFactory    - Starting embedded database: url='jdbc:h2:mem:00e02f66-c9d8-4e4c-92ee-2041b8eabbae;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-05-14 21:45:34.909 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 21:45:35.031 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 21:45:35.102 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 21:45:35.636 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 21:45:35.705 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 21:45:35.733 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@52b32b70']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 21:45:37.015 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 21:45:37.038 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 21:45:37.041 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 21:45:37.042 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 21:45:37.043 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 21:45:37.043 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 21:45:37.044 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 21:45:37.044 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 21:45:37.051 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 21:45:37.054 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 21:45:37.057 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 21:45:37.058 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 21:45:37.059 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 21:45:37.060 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 21:45:37.061 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 21:45:37.063 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 21:45:37.064 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 21:45:37.065 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 21:45:37.065 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 21:45:37.068 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 21:45:37.070 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 21:45:37.071 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 21:45:37.073 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 21:45:37.082 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 21:45:37.718 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 21:45:38.353 [main] INFO  c.s.m.d.r.MessageRepositoryTest      - Started MessageRepositoryTest in 6.54 seconds (process running for 8.693)
25-05-14 21:45:39.092 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.117 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 21:45:39.118 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.151 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.166 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.269 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 21:45:39.399 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.402 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 21:45:39.402 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.425 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.441 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.444 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 21:45:39.463 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.467 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 21:45:39.468 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.487 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.502 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.507 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.author_id=?
25-05-14 21:45:39.534 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.536 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 21:45:39.537 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.565 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.580 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.583 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.author_id=?
25-05-14 21:45:39.601 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.604 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 21:45:39.605 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.623 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.639 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.648 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
        and m1_0.created_at<? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 21:45:39.664 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.667 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 21:45:39.668 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.685 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.700 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.705 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 21:45:39.719 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.722 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 21:45:39.723 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.745 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.761 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 21:45:39.770 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=?
25-05-14 21:45:39.781 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        messages 
    where
        id=?
25-05-14 21:45:39.785 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        messages 
    where
        id=?
25-05-14 21:45:39.787 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        messages 
    where
        id=?
25-05-14 21:45:39.789 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-14 21:45:39.800 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 21:45:39.801 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 21:45:39.802 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 21:45:39.804 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 21:45:39.805 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 21:45:39.806 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 21:45:39.808 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 21:45:39.809 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 23:15:12.621 [main] INFO  c.s.m.d.r.ChannelRepositoryTest      - Starting ChannelRepositoryTest using Java 17.0.14 with PID 21624 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-14 23:15:12.622 [main] DEBUG c.s.m.d.r.ChannelRepositoryTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-14 23:15:12.623 [main] INFO  c.s.m.d.r.ChannelRepositoryTest      - The following 1 profile is active: "test"
25-05-14 23:15:13.102 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-14 23:15:13.170 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61 ms. Found 6 JPA repository interfaces.
25-05-14 23:15:13.221 [main] INFO  o.s.b.t.a.j.TestDatabaseAutoConfiguration$EmbeddedDataSourceBeanFactoryPostProcessor - Replacing 'dataSource' DataSource bean with embedded version
25-05-14 23:15:13.387 [main] INFO  o.s.j.d.e.EmbeddedDatabaseFactory    - Starting embedded database: url='jdbc:h2:mem:017f7115-34ca-4e06-aa1c-bac01d6ed23e;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
25-05-14 23:15:13.764 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-14 23:15:13.810 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-14 23:15:13.849 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-14 23:15:14.267 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-14 23:15:14.316 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-14 23:15:14.339 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@5d08976a']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-14 23:15:15.310 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-14 23:15:15.323 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 23:15:15.326 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 23:15:15.327 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 23:15:15.328 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 23:15:15.329 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 23:15:15.330 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 23:15:15.331 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-14 23:15:15.336 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-14 23:15:15.344 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-14 23:15:15.347 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-14 23:15:15.348 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-14 23:15:15.350 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-14 23:15:15.352 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-14 23:15:15.354 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-14 23:15:15.357 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-14 23:15:15.359 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-14 23:15:15.361 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-14 23:15:15.362 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-14 23:15:15.364 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-14 23:15:15.365 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-14 23:15:15.367 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-14 23:15:15.368 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-14 23:15:15.376 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-14 23:15:15.836 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-14 23:15:16.222 [main] INFO  c.s.m.d.r.ChannelRepositoryTest      - Started ChannelRepositoryTest in 4.075 seconds (process running for 5.453)
25-05-14 23:15:16.733 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 23:15:16.753 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.754 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.755 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.755 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.756 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.756 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.756 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.757 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 23:15:16.835 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id in (?) 
        and c1_0.type=?
25-05-14 23:15:16.954 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 23:15:16.956 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.958 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.959 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.960 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.961 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.962 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.963 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.964 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 23:15:16.971 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 23:15:16.984 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 23:15:16.986 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.987 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.988 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.989 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.989 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.990 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.991 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:16.992 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 23:15:17.008 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    order by
        c1_0.name 
    offset
        ? rows 
    fetch
        first ? rows only
25-05-14 23:15:17.017 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(c1_0.id) 
    from
        channels c1_0
25-05-14 23:15:17.034 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 23:15:17.036 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.037 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.038 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.039 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.040 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.040 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.041 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.041 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 23:15:17.050 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        read_statuses rs1_0 
    join
        channels c1_0 
            on c1_0.id=rs1_0.channel_id 
    where
        rs1_0.user_id=?
25-05-14 23:15:17.061 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 23:15:17.063 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.064 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.065 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.065 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.066 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.066 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.067 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.067 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 23:15:17.069 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id in (?) 
        and c1_0.type=?
25-05-14 23:15:17.076 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 23:15:17.078 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.078 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.079 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.080 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.080 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.080 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.081 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.081 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 23:15:17.085 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        read_statuses rs1_0 
    join
        channels c1_0 
            on c1_0.id=rs1_0.channel_id 
    where
        rs1_0.user_id=?
25-05-14 23:15:17.095 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 23:15:17.097 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.097 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.098 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.099 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.100 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.100 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.101 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.101 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 23:15:17.104 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-14 23:15:17.115 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-14 23:15:17.117 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.118 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.119 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.119 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.119 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.120 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.120 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-14 23:15:17.121 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-14 23:15:17.124 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.type=?
25-05-14 23:15:17.126 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.type=?
25-05-14 23:15:17.136 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-14 23:15:17.137 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-14 23:15:17.138 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-14 23:15:17.138 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-14 23:15:17.138 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-14 23:15:17.140 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-14 23:15:17.140 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-14 23:15:17.141 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
