25-05-20 14:57:31.785 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 19064 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-20 14:57:31.792 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-20 14:57:31.793 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-20 14:57:33.095 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-20 14:57:33.174 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 65 ms. Found 6 JPA repository interfaces.
25-05-20 14:57:33.177 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-20 14:57:33.178 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 14:57:33.179 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 14:57:35.073 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-20 14:57:35.117 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-20 14:57:35.254 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-20 14:57:35.333 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-20 14:57:35.792 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-20 14:57:35.835 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-20 14:57:36.086 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-20 14:57:36.099 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-20 14:57:36.149 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-20 14:57:36.177 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-20 14:57:37.830 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-20 14:57:37.850 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 14:57:37.856 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 14:57:37.856 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 14:57:37.857 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 14:57:37.857 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 14:57:37.857 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 14:57:37.857 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 14:57:37.863 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-20 14:57:37.873 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-20 14:57:37.876 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-20 14:57:37.878 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-20 14:57:37.879 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-20 14:57:37.880 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-20 14:57:37.882 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-20 14:57:37.885 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-20 14:57:37.900 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-20 14:57:37.901 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-20 14:57:37.903 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-20 14:57:37.905 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-20 14:57:37.906 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-20 14:57:37.908 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-20 14:57:37.910 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-20 14:57:37.916 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-20 14:57:38.606 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-20 14:57:38.704 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-20 14:57:40.034 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-20 14:57:40.099 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-20 14:57:41.797 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-20 14:57:41.905 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-20 14:57:41.906 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-20 14:57:41.916 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-20 14:57:41.943 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 37 ms
25-05-20 14:57:42.097 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 11.153 seconds (process running for 13.37)
25-05-20 14:57:43.161 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 14:57:43.224 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 14:57:43.300 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 14:57:43.309 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 14:57:43.310 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 14:57:43.404 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 14:57:43.425 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 14:57:43.428 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 14:57:43.433 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 14:57:43.435 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 14:57:43.437 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 14:57:43.438 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 14:57:43.465 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 14:57:43.474 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 14:57:43.490 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 14:57:43.510 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 14:57:43.583 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 14:57:43.584 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 14:57:43.586 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 14:57:43.587 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-20 14:57:43.595 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 메시지 삭제 완료
25-05-20 14:57:43.599 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=?
25-05-20 14:57:43.601 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ReadStatus 삭제 완료
25-05-20 14:57:43.605 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 14:57:43.622 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 완료
25-05-20 14:57:43.673 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 14:57:43.677 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 14:57:43.680 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 14:57:43.682 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 14:57:43.682 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 14:57:43.691 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 14:57:43.693 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 14:57:43.694 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 14:57:43.698 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 14:57:43.702 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 14:57:43.704 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 14:57:43.705 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 14:57:43.714 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 14:57:43.716 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 14:57:43.718 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 14:57:43.720 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 사용자 없음
25-05-20 14:57:43.820 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 14:57:43.823 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 14:57:43.826 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 14:57:43.827 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 14:57:43.828 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 14:57:43.837 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 14:57:43.839 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 14:57:43.840 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 14:57:43.844 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 14:57:43.846 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 14:57:43.849 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 14:57:43.849 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 14:57:43.860 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-20 14:57:43.862 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-20 14:57:43.887 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 14:57:43.890 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 14:57:43.892 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 14:57:43.893 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 14:57:43.895 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 14:57:43.903 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 14:57:43.906 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 14:57:43.907 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 14:57:43.910 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 14:57:43.913 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 14:57:43.915 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 14:57:43.915 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 14:57:43.932 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 14:57:43.934 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 14:57:43.935 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 14:57:43.938 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 14:57:43.948 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-20 14:57:43.958 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-20 14:57:43.964 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-20 14:57:43.964 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-20 14:57:43.966 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 14:57:43.971 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 14:57:43.972 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 14:57:43.973 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 14:57:43.974 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 14:57:44.006 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 14:57:44.010 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 14:57:44.013 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 14:57:44.014 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 14:57:44.015 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 14:57:44.021 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 14:57:44.023 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 14:57:44.024 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 14:57:44.026 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 14:57:44.028 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 14:57:44.030 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 14:57:44.030 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 14:57:44.036 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 14:57:44.039 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 14:57:44.042 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 14:57:44.047 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 14:57:44.058 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 완료
25-05-20 14:57:44.064 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 14:57:44.068 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 14:57:44.088 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 14:57:44.091 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 14:57:44.093 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 14:57:44.095 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 14:57:44.095 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 14:57:44.103 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 14:57:44.104 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 14:57:44.106 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 14:57:44.108 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 14:57:44.110 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 14:57:44.111 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 14:57:44.111 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 14:57:44.117 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-20 14:57:44.119 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-20 14:57:44.138 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 14:57:44.141 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 14:57:44.143 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 14:57:44.144 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 14:57:44.144 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 14:57:44.151 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 14:57:44.153 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 14:57:44.155 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 14:57:44.158 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 14:57:44.161 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 14:57:44.162 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 14:57:44.163 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 14:57:44.169 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 14:57:44.170 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 14:57:44.172 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 14:57:44.174 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 14:57:44.175 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 실패: 존재하지 않는 사용자 ID [d961d2ec-7bbb-4fd1-9e51-198e1b184580] 포함.
25-05-20 14:57:44.230 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 14:57:44.232 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 14:57:44.235 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 14:57:44.235 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 14:57:44.237 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 14:57:44.246 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 14:57:44.247 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 14:57:44.248 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 14:57:44.250 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 14:57:44.252 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 14:57:44.253 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 14:57:44.253 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 14:57:44.259 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 14:57:44.261 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 14:57:44.264 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 14:57:44.269 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 14:57:44.277 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 14:57:44.278 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 14:57:44.280 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 14:57:44.281 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 14:57:44.285 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 14:57:44.288 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-20 14:57:44.291 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-20 14:57:44.294 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-20 14:57:44.294 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-20 14:57:44.297 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 14:57:44.301 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 14:57:44.302 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 14:57:44.302 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 14:57:44.303 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 14:57:44.307 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 14:57:44.311 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.user_id=?
25-05-20 14:57:44.313 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 사용자 채널 목록 확인 완료
25-05-20 14:57:44.315 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.type=?
25-05-20 14:57:44.320 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id in (?) 
        and c1_0.type=?
25-05-20 14:57:44.322 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 조회 완료
25-05-20 14:57:44.324 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 14:57:44.328 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 14:57:44.331 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 14:57:44.334 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 14:57:44.378 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 14:57:44.380 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 14:57:44.382 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 14:57:44.383 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 14:57:44.384 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 14:57:44.390 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 14:57:44.391 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 14:57:44.393 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 14:57:44.395 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 14:57:44.397 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 14:57:44.398 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 14:57:44.398 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 14:57:44.428 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 14:57:44.431 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 14:57:44.433 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 14:57:44.434 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 14:57:44.434 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 14:57:44.439 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 14:57:44.440 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 14:57:44.442 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 14:57:44.444 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 14:57:44.446 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 14:57:44.447 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 14:57:44.447 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 14:57:44.454 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 14:57:44.455 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 14:57:44.458 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 14:57:44.461 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 14:57:44.486 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-20 14:57:44.488 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 14:57:44.493 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 14:57:44.497 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 14:57:44.498 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 14:57:44.502 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 14:57:44.503 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 14:57:44.504 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 14:57:44.508 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-20 14:57:44.513 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-20 15:32:55.287 [main] INFO  c.s.m.d.c.UserControllerTest         - Starting UserControllerTest using Java 17.0.14 with PID 15208 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-20 15:32:55.290 [main] DEBUG c.s.m.d.c.UserControllerTest         - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-20 15:32:55.291 [main] INFO  c.s.m.d.c.UserControllerTest         - The following 1 profile is active: "dev"
25-05-20 15:32:58.955 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-20 15:32:59.767 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-20 15:32:59.768 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-20 15:32:59.772 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 4 ms
25-05-20 15:32:59.854 [main] INFO  c.s.m.d.c.UserControllerTest         - Started UserControllerTest in 6.414 seconds (process running for 10.929)
25-05-20 15:33:19.455 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 5176 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-20 15:33:19.459 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-20 15:33:19.460 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-20 15:33:21.278 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-20 15:33:21.400 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 103 ms. Found 6 JPA repository interfaces.
25-05-20 15:33:21.403 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:33:21.405 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:33:21.405 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:33:24.081 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-20 15:33:24.154 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-20 15:33:24.348 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-20 15:33:24.479 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-20 15:33:25.366 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-20 15:33:25.455 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-20 15:33:25.997 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-20 15:33:26.002 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-20 15:33:26.070 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-20 15:33:26.116 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-20 15:33:28.714 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-20 15:33:28.759 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 15:33:28.769 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 15:33:28.770 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 15:33:28.771 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 15:33:28.772 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 15:33:28.772 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 15:33:28.773 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 15:33:28.781 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-20 15:33:28.798 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-20 15:33:28.805 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-20 15:33:28.808 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-20 15:33:28.811 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-20 15:33:28.814 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-20 15:33:28.816 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-20 15:33:28.823 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-20 15:33:28.856 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-20 15:33:28.860 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-20 15:33:28.862 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-20 15:33:28.866 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-20 15:33:28.869 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-20 15:33:28.872 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-20 15:33:28.875 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-20 15:33:28.886 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-20 15:33:30.033 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-20 15:33:30.170 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-20 15:33:32.273 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-20 15:33:32.390 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-20 15:33:34.684 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-20 15:33:34.848 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-20 15:33:34.849 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-20 15:33:34.869 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-20 15:33:34.918 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 69 ms
25-05-20 15:33:35.120 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 16.855 seconds (process running for 20.193)
25-05-20 15:33:36.899 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:36.988 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:37.097 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:37.108 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:37.108 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:37.242 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:33:37.269 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:37.272 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:37.276 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:37.279 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:37.281 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:37.281 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:37.311 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:33:37.322 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:33:37.344 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:33:37.506 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:33:37.841 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:33:37.843 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:37.844 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:37.849 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-20 15:33:37.869 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 메시지 삭제 완료
25-05-20 15:33:37.880 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=?
25-05-20 15:33:37.883 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ReadStatus 삭제 완료
25-05-20 15:33:37.887 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:33:37.921 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 완료
25-05-20 15:33:37.996 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:38.029 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:38.034 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:38.037 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:38.038 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:38.054 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:33:38.057 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:38.060 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:38.069 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:38.077 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:38.081 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:38.081 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:38.097 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:33:38.099 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:38.102 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:33:38.106 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 사용자 없음
25-05-20 15:33:38.301 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:38.308 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:38.319 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:38.321 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:38.323 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:38.335 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:33:38.337 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:38.339 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:38.348 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:38.353 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:38.356 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:38.357 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:38.381 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-20 15:33:38.384 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-20 15:33:38.415 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:38.422 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:38.426 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:38.429 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:38.429 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:38.442 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:33:38.446 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:38.450 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:38.454 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:38.459 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:38.462 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:38.462 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:38.497 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:33:38.499 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:38.502 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:33:38.505 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:33:38.533 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-20 15:33:38.548 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-20 15:33:38.560 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-20 15:33:38.560 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-20 15:33:38.565 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:33:38.573 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:38.575 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 15:33:38.578 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 15:33:38.580 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:33:38.626 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:38.631 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:38.635 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:38.638 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:38.639 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:38.655 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:33:38.658 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:38.660 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:38.669 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:38.676 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:38.680 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:38.682 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:38.695 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:33:38.699 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:33:38.704 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:33:38.714 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:33:38.733 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 완료
25-05-20 15:33:38.742 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:33:38.749 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:33:38.788 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:38.793 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:38.797 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:38.801 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:38.801 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:38.812 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:33:38.815 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:38.817 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:38.824 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:38.830 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:38.834 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:38.835 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:38.848 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-20 15:33:38.851 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-20 15:33:38.885 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:38.889 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:38.895 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:38.897 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:38.898 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:38.909 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:33:38.912 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:38.915 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:38.919 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:38.922 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:38.925 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:38.928 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:38.955 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:33:38.957 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:38.959 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:33:38.962 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:33:38.970 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-20 15:33:38.974 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-20 15:33:38.978 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-20 15:33:38.978 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-20 15:33:38.984 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:33:38.992 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:38.995 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 15:33:38.998 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 15:33:39.001 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:33:39.013 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 수정 불가
25-05-20 15:33:39.075 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:39.081 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:39.086 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:39.089 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:39.089 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:39.108 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:33:39.110 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:39.112 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:39.116 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:39.122 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:39.124 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:39.125 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:39.141 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:33:39.143 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:39.145 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:33:39.150 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:33:39.154 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 실패: 존재하지 않는 사용자 ID [fcfa0e9c-0bf9-45fa-9e8c-91d42505c3a4] 포함.
25-05-20 15:33:39.195 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:39.199 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:39.202 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:39.204 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:39.205 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:39.218 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:33:39.220 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:39.222 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:39.226 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:39.230 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:39.234 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:39.235 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:39.249 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:33:39.254 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:33:39.261 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:33:39.272 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:33:39.294 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:33:39.297 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:39.301 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:39.304 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:33:39.308 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:33:39.315 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-20 15:33:39.321 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-20 15:33:39.326 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-20 15:33:39.326 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-20 15:33:39.332 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:33:39.347 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:39.350 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 15:33:39.352 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 15:33:39.355 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:33:39.363 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:33:39.371 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.user_id=?
25-05-20 15:33:39.376 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 사용자 채널 목록 확인 완료
25-05-20 15:33:39.382 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.type=?
25-05-20 15:33:39.407 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id in (?) 
        and c1_0.type=?
25-05-20 15:33:39.418 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 조회 완료
25-05-20 15:33:39.432 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:33:39.440 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:33:39.448 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:33:39.455 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:33:39.578 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:39.592 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:39.601 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:39.603 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:39.604 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:39.624 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:33:39.627 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:39.632 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:39.638 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:39.642 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:39.644 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:39.644 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:39.653 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:33:39.658 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:33:39.662 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:33:39.668 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:33:39.680 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:33:39.683 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:39.684 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:39.687 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:33:39.692 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널명 중복
25-05-20 15:33:39.724 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:39.729 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:39.733 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:39.736 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:39.737 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:39.748 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:33:39.750 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:39.751 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:39.755 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:39.759 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:39.761 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:39.762 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:39.828 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:39.832 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:39.836 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:39.839 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:39.841 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:39.862 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:33:39.864 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:33:39.867 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:33:39.880 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:33:39.889 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:33:39.895 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:33:39.897 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:33:39.922 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:33:39.927 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:33:39.934 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:33:39.942 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:33:39.991 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-20 15:33:39.992 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 15:33:39.996 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 15:33:39.999 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 15:33:40.000 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 15:33:40.004 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 15:33:40.005 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 15:33:40.006 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 15:33:40.013 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-20 15:33:40.023 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-20 15:34:47.473 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 20120 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-20 15:34:47.477 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-20 15:34:47.481 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-20 15:34:50.301 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-20 15:34:50.479 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 148 ms. Found 6 JPA repository interfaces.
25-05-20 15:34:50.483 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:34:50.485 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:34:50.486 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:34:55.833 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-20 15:34:55.937 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-20 15:34:56.153 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-20 15:34:56.296 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-20 15:34:57.419 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-20 15:34:57.523 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-20 15:34:58.113 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-20 15:34:58.117 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-20 15:34:58.200 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-20 15:34:58.268 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-20 15:35:01.090 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-20 15:35:01.122 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 15:35:01.129 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 15:35:01.130 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 15:35:01.130 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 15:35:01.130 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 15:35:01.130 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 15:35:01.130 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 15:35:01.137 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-20 15:35:01.150 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-20 15:35:01.153 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-20 15:35:01.155 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-20 15:35:01.157 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-20 15:35:01.160 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-20 15:35:01.162 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-20 15:35:01.167 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-20 15:35:01.191 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-20 15:35:01.194 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-20 15:35:01.197 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-20 15:35:01.200 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-20 15:35:01.202 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-20 15:35:01.205 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-20 15:35:01.207 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-20 15:35:01.216 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-20 15:35:02.162 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-20 15:35:02.307 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-20 15:35:04.242 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-20 15:35:04.335 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-20 15:35:06.690 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-20 15:35:06.861 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-20 15:35:06.861 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-20 15:35:06.880 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-20 15:35:06.924 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 62 ms
25-05-20 15:35:07.120 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 22.442 seconds (process running for 27.591)
25-05-20 15:35:08.754 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:08.835 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:08.943 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:08.953 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:08.954 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:09.097 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:35:09.123 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:09.126 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:09.131 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:09.134 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:09.135 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:09.136 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:09.162 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:35:09.172 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:35:09.194 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:35:09.219 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:35:09.346 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:35:09.348 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:09.350 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:09.352 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-20 15:35:09.362 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 메시지 삭제 완료
25-05-20 15:35:09.369 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=?
25-05-20 15:35:09.373 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ReadStatus 삭제 완료
25-05-20 15:35:09.377 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:35:09.407 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 완료
25-05-20 15:35:09.473 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:09.477 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:09.480 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:09.483 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:09.483 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:09.493 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:35:09.495 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:09.497 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:09.502 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:09.505 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:09.508 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:09.509 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:09.523 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:35:09.525 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:09.527 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:35:09.530 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 사용자 없음
25-05-20 15:35:09.690 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:09.695 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:09.700 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:09.703 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:09.704 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:09.715 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:35:09.718 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:09.720 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:09.725 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:09.730 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:09.732 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:09.733 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:09.756 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-20 15:35:09.760 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-20 15:35:09.797 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:09.802 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:09.809 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:09.812 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:09.812 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:09.827 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:35:09.830 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:09.833 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:09.839 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:09.859 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:09.863 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:09.863 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:09.915 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:35:09.917 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:09.919 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:35:09.923 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:35:09.947 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-20 15:35:09.962 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-20 15:35:09.982 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-20 15:35:09.983 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-20 15:35:09.989 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:35:09.996 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:09.999 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 15:35:10.002 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 15:35:10.002 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:35:10.076 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:10.081 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:10.088 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:10.091 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:10.093 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:10.112 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:35:10.116 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:10.118 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:10.125 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:10.130 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:10.134 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:10.135 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:10.144 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:35:10.149 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:35:10.153 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:35:10.162 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:35:10.176 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 완료
25-05-20 15:35:10.187 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:35:10.194 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:35:10.237 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:10.242 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:10.246 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:10.250 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:10.251 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:10.265 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:35:10.267 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:10.269 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:10.274 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:10.276 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:10.279 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:10.279 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:10.286 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-20 15:35:10.288 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-20 15:35:10.318 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:10.323 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:10.327 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:10.329 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:10.330 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:10.340 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:35:10.343 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:10.345 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:10.348 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:10.352 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:10.354 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:10.355 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:10.375 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:35:10.377 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:10.379 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:35:10.382 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:35:10.389 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-20 15:35:10.394 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-20 15:35:10.397 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-20 15:35:10.397 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-20 15:35:10.402 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:35:10.410 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:10.412 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 15:35:10.414 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 15:35:10.415 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:35:10.426 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 수정 불가
25-05-20 15:35:10.452 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:10.456 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:10.460 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:10.463 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:10.463 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:10.476 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:35:10.478 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:10.482 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:10.487 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:10.491 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:10.499 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:10.499 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:10.511 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:35:10.513 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:10.514 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:35:10.519 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:35:10.521 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 실패: 존재하지 않는 사용자 ID [7ee6ee3d-c048-491e-96a5-3167f55fcf50] 포함.
25-05-20 15:35:10.566 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:10.569 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:10.574 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:10.576 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:10.576 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:10.588 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:35:10.589 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:10.591 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:10.594 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:10.596 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:10.598 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:10.598 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:10.609 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:35:10.613 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:35:10.617 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:35:10.623 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:35:10.632 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:35:10.635 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:10.636 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:10.637 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:35:10.641 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:35:10.646 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-20 15:35:10.652 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-20 15:35:10.655 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-20 15:35:10.655 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-20 15:35:10.661 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:35:10.667 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:10.669 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 15:35:10.671 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 15:35:10.672 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:35:10.681 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:35:10.687 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.user_id=?
25-05-20 15:35:10.691 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 사용자 채널 목록 확인 완료
25-05-20 15:35:10.696 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.type=?
25-05-20 15:35:10.724 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id in (?) 
        and c1_0.type=?
25-05-20 15:35:10.732 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 조회 완료
25-05-20 15:35:10.738 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:35:10.743 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:35:10.749 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:35:10.755 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:35:10.840 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:10.844 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:10.847 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:10.850 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:10.850 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:10.862 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:35:10.864 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:10.867 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:10.870 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:10.873 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:10.874 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:10.875 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:10.887 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:35:10.891 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:35:10.895 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:35:10.901 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:35:10.915 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:35:10.916 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:10.917 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:10.917 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:35:10.920 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널명 중복
25-05-20 15:35:10.940 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:10.944 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:10.946 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:10.947 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:10.947 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:10.954 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:35:10.955 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:10.956 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:10.961 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:10.964 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:10.966 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:10.966 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:11.017 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:11.020 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:11.025 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:11.027 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:11.029 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:11.043 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:35:11.045 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:35:11.046 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:35:11.049 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:35:11.052 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:35:11.053 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:35:11.053 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:35:11.061 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:35:11.064 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:35:11.068 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:35:11.075 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:35:11.112 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-20 15:35:11.114 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 15:35:11.118 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 15:35:11.120 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 15:35:11.122 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 15:35:11.126 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 15:35:11.127 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 15:35:11.130 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 15:35:11.135 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-20 15:35:11.143 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-20 15:35:46.547 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Starting MessageApiIntegrationTest using Java 17.0.14 with PID 7844 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-20 15:35:46.557 [main] DEBUG c.s.m.d.i.MessageApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-20 15:35:46.561 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - The following 1 profile is active: "test"
25-05-20 15:35:48.683 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-20 15:35:48.828 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 117 ms. Found 6 JPA repository interfaces.
25-05-20 15:35:48.831 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:35:48.831 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:35:48.832 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:35:53.984 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-20 15:35:54.080 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-20 15:35:54.294 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-20 15:35:54.387 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-20 15:35:54.952 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-20 15:35:55.282 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-20 15:35:56.365 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-20 15:35:56.371 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-20 15:35:56.464 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-20 15:35:56.563 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-20 15:36:01.737 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-20 15:36:01.847 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 15:36:01.863 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 15:36:01.864 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 15:36:01.865 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 15:36:01.865 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 15:36:01.866 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 15:36:01.867 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 15:36:01.881 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-20 15:36:01.902 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-20 15:36:01.909 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-20 15:36:01.912 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-20 15:36:01.915 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-20 15:36:01.920 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-20 15:36:01.924 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-20 15:36:01.931 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-20 15:36:01.978 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-20 15:36:01.983 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-20 15:36:01.988 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-20 15:36:01.993 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-20 15:36:01.999 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-20 15:36:02.004 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-20 15:36:02.007 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-20 15:36:02.030 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-20 15:36:03.697 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-20 15:36:03.849 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-20 15:36:07.458 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-20 15:36:07.593 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-20 15:36:10.427 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-20 15:36:10.557 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-20 15:36:10.558 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-20 15:36:10.582 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-20 15:36:10.617 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 59 ms
25-05-20 15:36:10.824 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Started MessageApiIntegrationTest in 26.243 seconds (process running for 30.75)
25-05-20 15:36:11.801 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:36:11.897 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:36:12.020 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:36:12.030 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:36:12.031 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:36:12.173 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:36:12.184 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:36:12.204 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:36:12.246 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:36:12.421 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 및 작성자 확인 완료
25-05-20 15:36:12.428 [main] ERROR c.s.m.d.s.basic.BasicMessageService  - 첨부파일 처리 오류
com.sprint.mission.discodeit.exception.file.FileProcessingCustomException: null
	at com.sprint.mission.discodeit.service.basic.BasicMessageService.create(BasicMessageService.java:78)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.sprint.mission.discodeit.service.basic.BasicMessageService$$SpringCGLIB$$0.create(<generated>)
	at com.sprint.mission.discodeit.controller.MessageController.create(MessageController.java:33)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.sprint.mission.discodeit.controller.MessageController$$SpringCGLIB$$0.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.sprint.mission.discodeit.integration.MessageApiIntegrationTest.createMessage_Fail_AttachmentError(MessageApiIntegrationTest.java:292)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:767)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$8(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-20 15:36:12.710 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:36:12.717 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:36:12.724 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:36:12.729 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:36:12.730 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:36:12.744 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:36:12.749 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:36:12.757 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:36:12.764 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:36:12.848 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:36:12.855 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:36:12.860 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:36:12.864 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:36:12.865 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:36:12.878 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:36:12.882 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:36:12.886 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:36:12.895 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:36:12.914 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 및 작성자 확인 완료
25-05-20 15:36:12.914 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 없음
25-05-20 15:36:12.950 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 저장 완료
25-05-20 15:36:13.102 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:36:13.119 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:36:13.121 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:36:13.125 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 15:36:13.145 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-20 15:36:13.162 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 완료
25-05-20 15:36:13.198 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:36:13.204 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:36:13.208 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:36:13.215 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:36:13.216 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:36:13.225 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:36:13.228 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:36:13.233 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:36:13.239 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:36:13.252 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 및 작성자 확인 완료
25-05-20 15:36:13.253 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 없음
25-05-20 15:36:13.255 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 저장 완료
25-05-20 15:36:13.298 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:36:13.303 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:36:13.307 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:36:13.311 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:36:13.311 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:36:13.319 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:36:13.323 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:36:13.328 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:36:13.333 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:36:13.346 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 및 작성자 확인 완료
25-05-20 15:36:13.346 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 없음
25-05-20 15:36:13.349 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 저장 완료
25-05-20 15:36:13.362 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 및 작성자 확인 완료
25-05-20 15:36:13.362 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 없음
25-05-20 15:36:13.365 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 저장 완료
25-05-20 15:36:13.380 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:36:13.382 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:36:13.383 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:36:13.386 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 15:36:13.389 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 15:36:13.391 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-20 15:36:13.401 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:36:13.407 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 조회 완료
25-05-20 15:36:13.465 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:36:13.469 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:36:13.473 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:36:13.475 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:36:13.476 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:36:13.484 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:36:13.488 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:36:13.494 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:36:13.499 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:36:13.514 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 및 작성자 확인 완료
25-05-20 15:36:13.515 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 없음
25-05-20 15:36:13.517 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 저장 완료
25-05-20 15:36:13.541 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 완료
25-05-20 15:36:13.583 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:36:13.588 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:36:13.591 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:36:13.592 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:36:13.593 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:36:13.602 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:36:13.606 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:36:13.612 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:36:13.619 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:36:13.637 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-20 15:36:13.698 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:36:13.702 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:36:13.706 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:36:13.707 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:36:13.708 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:36:13.719 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:36:13.723 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:36:13.729 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:36:13.734 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:36:13.753 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-20 15:36:13.756 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - 메시지 없음
25-05-20 15:36:13.782 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:36:13.787 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:36:13.791 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:36:13.793 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:36:13.793 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:36:13.802 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:36:13.806 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:36:13.810 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:36:13.816 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:36:13.827 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-20 15:36:13.860 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:36:13.864 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:36:13.867 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:36:13.870 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:36:13.870 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:36:13.879 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:36:13.883 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:36:13.889 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:36:13.895 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:36:13.907 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:36:13.944 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:36:13.948 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:36:13.952 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:36:13.954 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:36:13.954 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:36:13.963 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:36:13.966 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:36:13.971 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:36:13.977 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:36:13.988 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 및 작성자 확인 완료
25-05-20 15:36:13.990 [main] ERROR c.s.m.d.s.basic.BasicMessageService  - 첨부파일 처리 오류
java.lang.NullPointerException: Cannot invoke "com.sprint.mission.discodeit.dto.data.BinaryContentDto.id()" because "attachmentDto" is null
	at com.sprint.mission.discodeit.service.basic.BasicMessageService.create(BasicMessageService.java:81)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.sprint.mission.discodeit.service.basic.BasicMessageService$$SpringCGLIB$$0.create(<generated>)
	at com.sprint.mission.discodeit.controller.MessageController.create(MessageController.java:33)
	at jdk.internal.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.sprint.mission.discodeit.controller.MessageController$$SpringCGLIB$$0.create(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor76.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.sprint.mission.discodeit.integration.MessageApiIntegrationTest.createMessage_Success_WithAttachment(MessageApiIntegrationTest.java:197)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:767)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$8(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-20 15:36:14.035 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-20 15:36:14.037 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 15:36:14.043 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 15:36:14.046 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 15:36:14.047 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 15:36:14.050 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 15:36:14.053 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 15:36:14.055 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 15:36:14.062 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-20 15:36:14.071 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-20 15:44:43.743 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Starting MessageApiIntegrationTest using Java 17.0.14 with PID 27564 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-20 15:44:43.746 [main] DEBUG c.s.m.d.i.MessageApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-20 15:44:43.748 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - The following 1 profile is active: "test"
25-05-20 15:44:45.688 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-20 15:44:45.810 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 95 ms. Found 6 JPA repository interfaces.
25-05-20 15:44:45.812 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:44:45.813 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:44:45.814 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:44:50.989 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-20 15:44:51.076 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-20 15:44:51.386 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-20 15:44:51.494 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-20 15:44:51.902 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-20 15:44:51.997 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-20 15:44:52.478 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-20 15:44:52.483 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-20 15:44:52.545 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-20 15:44:52.599 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-20 15:44:54.666 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-20 15:44:54.699 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 15:44:54.709 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 15:44:54.709 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 15:44:54.710 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 15:44:54.710 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 15:44:54.711 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 15:44:54.711 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 15:44:54.718 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-20 15:44:54.731 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-20 15:44:54.736 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-20 15:44:54.738 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-20 15:44:54.740 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-20 15:44:54.742 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-20 15:44:54.743 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-20 15:44:54.747 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-20 15:44:54.769 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-20 15:44:54.771 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-20 15:44:54.773 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-20 15:44:54.776 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-20 15:44:54.778 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-20 15:44:54.781 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-20 15:44:54.783 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-20 15:44:54.792 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-20 15:44:55.760 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-20 15:44:55.843 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-20 15:44:58.377 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-20 15:44:58.527 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-20 15:45:01.172 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-20 15:45:01.324 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-20 15:45:01.325 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-20 15:45:01.343 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-20 15:45:01.389 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 63 ms
25-05-20 15:45:01.600 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Started MessageApiIntegrationTest in 19.134 seconds (process running for 22.446)
25-05-20 15:45:02.497 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:45:02.595 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:45:02.722 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:45:02.733 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:45:02.734 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:45:02.878 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:45:02.896 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:45:02.918 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:45:02.966 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:45:03.132 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 및 작성자 확인 완료
25-05-20 15:45:03.141 [main] ERROR c.s.m.d.s.basic.BasicMessageService  - 첨부파일 처리 오류
com.sprint.mission.discodeit.exception.file.FileProcessingCustomException: null
	at com.sprint.mission.discodeit.service.basic.BasicMessageService.create(BasicMessageService.java:80)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.sprint.mission.discodeit.service.basic.BasicMessageService$$SpringCGLIB$$0.create(<generated>)
	at com.sprint.mission.discodeit.controller.MessageController.create(MessageController.java:33)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.sprint.mission.discodeit.controller.MessageController$$SpringCGLIB$$0.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.sprint.mission.discodeit.integration.MessageApiIntegrationTest.createMessage_Fail_AttachmentError(MessageApiIntegrationTest.java:325)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:767)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$8(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-20 15:45:03.378 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:45:03.389 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:45:03.394 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:45:03.397 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:45:03.398 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:45:03.413 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:45:03.423 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:45:03.426 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:45:03.436 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:45:03.614 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:45:03.633 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:45:03.635 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:45:03.638 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-20 15:45:03.652 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - 채널 없음
25-05-20 15:45:03.698 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:45:03.703 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:45:03.706 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:45:03.710 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:45:03.710 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:45:03.722 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:45:03.725 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:45:03.729 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:45:03.734 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:45:03.752 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 및 작성자 확인 완료
25-05-20 15:45:03.752 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 없음
25-05-20 15:45:03.787 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 저장 완료
25-05-20 15:45:03.825 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:45:03.828 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:45:03.831 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:45:03.833 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 15:45:03.847 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-20 15:45:03.860 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 완료
25-05-20 15:45:03.895 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:45:03.899 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:45:03.903 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:45:03.907 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:45:03.908 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:45:03.918 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:45:03.921 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:45:03.926 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:45:03.936 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:45:03.946 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 및 작성자 확인 완료
25-05-20 15:45:03.947 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 없음
25-05-20 15:45:03.948 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 저장 완료
25-05-20 15:45:03.982 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:45:03.986 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:45:03.993 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:45:03.996 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:45:03.996 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:45:04.005 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:45:04.009 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:45:04.013 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:45:04.020 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:45:04.035 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 및 작성자 확인 완료
25-05-20 15:45:04.036 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 없음
25-05-20 15:45:04.038 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 저장 완료
25-05-20 15:45:04.048 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 및 작성자 확인 완료
25-05-20 15:45:04.048 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 없음
25-05-20 15:45:04.051 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 저장 완료
25-05-20 15:45:04.061 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:45:04.064 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:45:04.066 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:45:04.068 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 15:45:04.071 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-20 15:45:04.072 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-20 15:45:04.084 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:45:04.088 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 조회 완료
25-05-20 15:45:04.142 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:45:04.147 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:45:04.151 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:45:04.153 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:45:04.153 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:45:04.162 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:45:04.166 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:45:04.172 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:45:04.178 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:45:04.191 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 및 작성자 확인 완료
25-05-20 15:45:04.192 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 없음
25-05-20 15:45:04.193 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 저장 완료
25-05-20 15:45:04.213 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 완료
25-05-20 15:45:04.249 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:45:04.254 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:45:04.257 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:45:04.258 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:45:04.260 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:45:04.269 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:45:04.272 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:45:04.276 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:45:04.281 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:45:04.294 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-20 15:45:04.324 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:45:04.329 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:45:04.332 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:45:04.334 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:45:04.334 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:45:04.345 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:45:04.347 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:45:04.353 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:45:04.360 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:45:04.371 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-20 15:45:04.373 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - 메시지 없음
25-05-20 15:45:04.402 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:45:04.406 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:45:04.410 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:45:04.412 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:45:04.412 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:45:04.422 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:45:04.425 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:45:04.428 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:45:04.435 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:45:04.443 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-20 15:45:04.470 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:45:04.474 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:45:04.476 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:45:04.478 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:45:04.478 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:45:04.486 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:45:04.490 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:45:04.495 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:45:04.500 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:45:04.508 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:45:04.542 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:45:04.546 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:45:04.550 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:45:04.553 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:45:04.553 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:45:04.562 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-20 15:45:04.566 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-20 15:45:04.571 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-20 15:45:04.577 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-20 15:45:04.807 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 및 작성자 확인 완료
25-05-20 15:45:04.814 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 저장 완료
25-05-20 15:45:04.815 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 처리 완료
25-05-20 15:45:04.847 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 저장 완료
25-05-20 15:45:04.975 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-20 15:45:04.979 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 15:45:04.985 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 15:45:04.989 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 15:45:04.993 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 15:45:04.999 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 15:45:05.002 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 15:45:05.005 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 15:45:05.017 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-20 15:45:05.027 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-20 15:46:19.529 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Starting UserApiIntegrationTest using Java 17.0.14 with PID 21332 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-20 15:46:19.532 [main] DEBUG c.s.m.d.i.UserApiIntegrationTest     - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-20 15:46:19.534 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - The following 1 profile is active: "test"
25-05-20 15:46:21.785 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-20 15:46:21.934 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 124 ms. Found 6 JPA repository interfaces.
25-05-20 15:46:21.937 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:46:21.938 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:46:21.939 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:46:27.205 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-20 15:46:27.283 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-20 15:46:27.479 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-20 15:46:27.596 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-20 15:46:27.959 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-20 15:46:28.037 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-20 15:46:28.521 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-20 15:46:28.526 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-20 15:46:28.575 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-20 15:46:28.641 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-20 15:46:30.855 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-20 15:46:30.898 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 15:46:30.908 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 15:46:30.910 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 15:46:30.910 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 15:46:30.911 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 15:46:30.911 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 15:46:30.912 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 15:46:30.925 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-20 15:46:30.943 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-20 15:46:30.946 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-20 15:46:30.948 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-20 15:46:30.950 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-20 15:46:30.952 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-20 15:46:30.957 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-20 15:46:30.962 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-20 15:46:30.996 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-20 15:46:31.000 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-20 15:46:31.001 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-20 15:46:31.003 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-20 15:46:31.006 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-20 15:46:31.010 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-20 15:46:31.013 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-20 15:46:31.024 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-20 15:46:31.986 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-20 15:46:32.106 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-20 15:46:34.327 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-20 15:46:34.422 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-20 15:46:36.744 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-20 15:46:36.865 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-20 15:46:36.865 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-20 15:46:36.886 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-20 15:46:36.912 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 46 ms
25-05-20 15:46:37.096 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Started UserApiIntegrationTest in 18.826 seconds (process running for 22.336)
25-05-20 15:46:37.925 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:46:38.018 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:46:38.126 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:46:38.136 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:46:38.137 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:46:38.276 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:46:38.296 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:46:38.300 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:46:38.303 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:46:38.306 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:46:38.309 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:46:38.309 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:46:38.356 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:46:38.359 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:46:38.361 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:46:38.368 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 사용자명 중복
25-05-20 15:46:38.550 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:46:38.555 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:46:38.560 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:46:38.564 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:46:38.565 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:46:38.614 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:46:38.625 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:46:38.631 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:46:38.635 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:46:38.636 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:46:38.646 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:46:38.649 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:46:38.651 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:46:38.657 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:46:38.662 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:46:38.664 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:46:38.665 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:46:38.756 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:46:38.761 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:46:38.770 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:46:38.774 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:46:38.775 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:46:38.787 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:46:38.790 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:46:38.792 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:46:38.798 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:46:38.809 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:46:38.811 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:46:38.812 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:46:38.838 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:46:38.840 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:46:38.842 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-20 15:46:38.874 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 조회 완료
25-05-20 15:46:38.962 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:46:38.967 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:46:38.974 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:46:38.977 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:46:38.977 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:46:38.989 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID '14f3f4fc-7b09-4d21-a2a2-d9ef9bf50c6d'가 작성한 메시지들의 작성자 정보를 null로 변경 시작.
25-05-20 15:46:38.995 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.author_id=?
25-05-20 15:46:39.004 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID '14f3f4fc-7b09-4d21-a2a2-d9ef9bf50c6d'가 작성한 메시지가 없습니다.
25-05-20 15:46:39.005 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 엔티티 삭제 시도
25-05-20 15:46:39.015 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 삭제 완료. ID: '14f3f4fc-7b09-4d21-a2a2-d9ef9bf50c6d'
25-05-20 15:46:39.023 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:46:39.025 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:46:39.033 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        user_statuses 
    where
        id=?
25-05-20 15:46:39.041 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        users 
    where
        id=?
25-05-20 15:46:39.042 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-20 15:46:39.044 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 조회 완료
25-05-20 15:46:39.076 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:46:39.103 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:46:39.108 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:46:39.113 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:46:39.114 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:46:39.114 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:46:39.128 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:46:39.130 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:46:39.132 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:46:39.134 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 유효성 검사 실패: 이메일 'duplicate@naver.com'은(는) 이미 존재합니다.
25-05-20 15:46:39.165 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:46:39.169 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:46:39.173 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:46:39.175 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:46:39.176 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:46:39.187 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:46:39.188 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:46:39.190 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:46:39.193 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:46:39.194 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 유효성 검사 실패: 사용자명 'duplicateUser'은(는) 이미 존재합니다.
25-05-20 15:46:39.222 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:46:39.226 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:46:39.230 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:46:39.231 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:46:39.232 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:46:39.245 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:46:39.246 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:46:39.248 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:46:39.248 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자명 변경 완료
25-05-20 15:46:39.264 [main] DEBUG org.hibernate.SQL                    - 
    update
        users 
    set
        email=?,
        password=?,
        profile_id=?,
        updated_at=?,
        username=? 
    where
        id=?
25-05-20 15:46:39.275 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:46:39.279 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 이메일 변경 완료
25-05-20 15:46:39.280 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 비밀번호 변경 완료
25-05-20 15:46:39.284 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:46:39.284 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 업데이트 완료
25-05-20 15:46:39.295 [main] DEBUG org.hibernate.SQL                    - 
    update
        users 
    set
        email=?,
        password=?,
        profile_id=?,
        updated_at=?,
        username=? 
    where
        id=?
25-05-20 15:46:39.297 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-20 15:46:39.299 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 조회 완료
25-05-20 15:46:39.371 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:46:39.376 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:46:39.379 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:46:39.382 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:46:39.383 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:46:39.430 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-20 15:46:39.433 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 15:46:39.439 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 15:46:39.442 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 15:46:39.444 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 15:46:39.448 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 15:46:39.450 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 15:46:39.452 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 15:46:39.461 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-20 15:46:39.474 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-20 15:48:03.947 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Starting UserApiIntegrationTest using Java 17.0.14 with PID 7296 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-20 15:48:03.950 [main] DEBUG c.s.m.d.i.UserApiIntegrationTest     - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-20 15:48:03.953 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - The following 1 profile is active: "test"
25-05-20 15:48:06.075 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-20 15:48:06.226 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 124 ms. Found 6 JPA repository interfaces.
25-05-20 15:48:06.230 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:48:06.231 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:48:06.231 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:48:11.001 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-20 15:48:11.078 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-20 15:48:11.318 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-20 15:48:11.418 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-20 15:48:11.802 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-20 15:48:11.888 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-20 15:48:12.341 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-20 15:48:12.346 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-20 15:48:12.391 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-20 15:48:12.439 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-20 15:48:14.643 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-20 15:48:14.692 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 15:48:14.705 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 15:48:14.706 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 15:48:14.707 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 15:48:14.707 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 15:48:14.708 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 15:48:14.708 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 15:48:14.719 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-20 15:48:14.737 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-20 15:48:14.743 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-20 15:48:14.748 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-20 15:48:14.751 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-20 15:48:14.756 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-20 15:48:14.760 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-20 15:48:14.766 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-20 15:48:14.789 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-20 15:48:14.792 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-20 15:48:14.795 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-20 15:48:14.797 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-20 15:48:14.799 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-20 15:48:14.801 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-20 15:48:14.803 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-20 15:48:14.816 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-20 15:48:15.829 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-20 15:48:15.964 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-20 15:48:18.280 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-20 15:48:18.414 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-20 15:48:21.016 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-20 15:48:21.171 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-20 15:48:21.172 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-20 15:48:21.194 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-20 15:48:21.233 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 61 ms
25-05-20 15:48:21.462 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Started UserApiIntegrationTest in 18.871 seconds (process running for 22.284)
25-05-20 15:48:22.444 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:48:22.548 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:48:22.695 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:48:22.707 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:48:22.708 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:48:22.854 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:48:22.882 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:48:22.885 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:48:22.889 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:48:22.892 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:48:22.894 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:48:22.895 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:48:22.949 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:48:22.952 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:48:22.954 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:48:22.959 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 사용자명 중복
25-05-20 15:48:23.147 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:48:23.152 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:48:23.156 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:48:23.159 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:48:23.160 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:48:23.192 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:48:23.197 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:48:23.202 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:48:23.207 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:48:23.207 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:48:23.218 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:48:23.221 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:48:23.223 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:48:23.228 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:48:23.231 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:48:23.234 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:48:23.234 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:48:23.247 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:48:23.250 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:48:23.252 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:48:23.254 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자명 변경 완료
25-05-20 15:48:23.269 [main] DEBUG org.hibernate.SQL                    - 
    update
        users 
    set
        email=?,
        password=?,
        profile_id=?,
        updated_at=?,
        username=? 
    where
        id=?
25-05-20 15:48:23.280 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:48:23.283 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 이메일 중복
25-05-20 15:48:23.317 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:48:23.321 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:48:23.327 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:48:23.328 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:48:23.329 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:48:23.342 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:48:23.345 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:48:23.346 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:48:23.351 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:48:23.355 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:48:23.357 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:48:23.357 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:48:23.385 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:48:23.387 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:48:23.390 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-20 15:48:23.427 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 조회 완료
25-05-20 15:48:23.519 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:48:23.523 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:48:23.528 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:48:23.531 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:48:23.531 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:48:23.542 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID 'e6ba5f51-5871-4fc9-951d-f8330312705d'가 작성한 메시지들의 작성자 정보를 null로 변경 시작.
25-05-20 15:48:23.550 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.author_id=?
25-05-20 15:48:23.558 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID 'e6ba5f51-5871-4fc9-951d-f8330312705d'가 작성한 메시지가 없습니다.
25-05-20 15:48:23.558 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 엔티티 삭제 시도
25-05-20 15:48:23.566 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 삭제 완료. ID: 'e6ba5f51-5871-4fc9-951d-f8330312705d'
25-05-20 15:48:23.577 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:48:23.581 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:48:23.587 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        user_statuses 
    where
        id=?
25-05-20 15:48:23.598 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        users 
    where
        id=?
25-05-20 15:48:23.601 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-20 15:48:23.607 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 조회 완료
25-05-20 15:48:23.641 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 15:48:23.672 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:48:23.677 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:48:23.681 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:48:23.684 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:48:23.685 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:48:23.696 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:48:23.698 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:48:23.700 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:48:23.701 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 유효성 검사 실패: 이메일 'duplicate@naver.com'은(는) 이미 존재합니다.
25-05-20 15:48:23.733 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:48:23.736 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:48:23.741 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:48:23.743 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:48:23.744 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:48:23.756 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:48:23.759 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:48:23.761 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:48:23.764 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:48:23.766 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 유효성 검사 실패: 사용자명 'duplicateUser'은(는) 이미 존재합니다.
25-05-20 15:48:23.794 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:48:23.798 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:48:23.802 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:48:23.803 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:48:23.804 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:48:23.818 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 15:48:23.819 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 15:48:23.822 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:48:23.823 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자명 변경 완료
25-05-20 15:48:23.827 [main] DEBUG org.hibernate.SQL                    - 
    update
        users 
    set
        email=?,
        password=?,
        profile_id=?,
        updated_at=?,
        username=? 
    where
        id=?
25-05-20 15:48:23.829 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:48:23.830 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 이메일 변경 완료
25-05-20 15:48:23.830 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 비밀번호 변경 완료
25-05-20 15:48:23.837 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:48:23.837 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 업데이트 완료
25-05-20 15:48:23.848 [main] DEBUG org.hibernate.SQL                    - 
    update
        users 
    set
        email=?,
        password=?,
        profile_id=?,
        updated_at=?,
        username=? 
    where
        id=?
25-05-20 15:48:23.850 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-20 15:48:23.851 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 조회 완료
25-05-20 15:48:23.921 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:48:23.927 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:48:23.932 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:48:23.934 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:48:23.934 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:48:23.984 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-20 15:48:23.986 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 15:48:23.991 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 15:48:23.993 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 15:48:23.994 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 15:48:23.998 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 15:48:24.000 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 15:48:24.002 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 15:48:24.009 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-20 15:48:24.017 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-20 15:49:55.804 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Starting UserApiIntegrationTest using Java 17.0.14 with PID 1932 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-20 15:49:55.807 [main] DEBUG c.s.m.d.i.UserApiIntegrationTest     - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-20 15:49:55.810 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - The following 1 profile is active: "test"
25-05-20 15:49:57.867 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-20 15:49:58.008 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 110 ms. Found 6 JPA repository interfaces.
25-05-20 15:49:58.011 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:49:58.013 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:49:58.014 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:50:02.302 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-20 15:50:02.371 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-20 15:50:02.502 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-20 15:50:02.586 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-20 15:50:02.870 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-20 15:50:02.952 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-20 15:50:03.318 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-20 15:50:03.322 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-20 15:50:03.362 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-20 15:50:03.409 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-20 15:50:05.235 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-20 15:50:05.268 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 15:50:05.276 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 15:50:05.276 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 15:50:05.277 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 15:50:05.277 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 15:50:05.278 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 15:50:05.279 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 15:50:05.287 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-20 15:50:05.305 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-20 15:50:05.310 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-20 15:50:05.313 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-20 15:50:05.314 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-20 15:50:05.316 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-20 15:50:05.318 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-20 15:50:05.324 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-20 15:50:05.348 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-20 15:50:05.351 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-20 15:50:05.354 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-20 15:50:05.356 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-20 15:50:05.358 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-20 15:50:05.360 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-20 15:50:05.362 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-20 15:50:05.369 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-20 15:50:06.442 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-20 15:50:06.553 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-20 15:50:08.564 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-20 15:50:08.682 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-20 15:50:12.474 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-20 15:50:12.728 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-20 15:50:12.730 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-20 15:50:12.761 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-20 15:50:12.844 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 112 ms
25-05-20 15:50:13.248 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Started UserApiIntegrationTest in 19.352 seconds (process running for 22.791)
25-05-20 15:50:14.288 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:50:14.398 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:50:14.511 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:50:14.522 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:50:14.523 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:50:14.698 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-20 15:50:14.700 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 15:50:14.705 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 15:50:14.707 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 15:50:14.709 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 15:50:14.714 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 15:50:14.716 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 15:50:14.718 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 15:50:14.725 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-20 15:50:14.734 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-20 15:54:56.013 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Starting UserApiIntegrationTest using Java 17.0.14 with PID 22352 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-20 15:54:56.018 [main] DEBUG c.s.m.d.i.UserApiIntegrationTest     - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-20 15:54:56.021 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - The following 1 profile is active: "test"
25-05-20 15:54:57.659 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-20 15:54:57.745 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74 ms. Found 6 JPA repository interfaces.
25-05-20 15:54:57.748 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:54:57.749 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:54:57.750 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:55:00.391 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-20 15:55:00.444 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-20 15:55:00.559 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-20 15:55:00.619 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-20 15:55:00.916 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-20 15:55:00.997 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-20 15:55:01.409 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-20 15:55:01.414 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-20 15:55:01.458 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-20 15:55:01.509 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-20 15:55:03.367 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-20 15:55:03.394 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 15:55:03.399 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 15:55:03.400 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 15:55:03.401 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 15:55:03.401 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 15:55:03.402 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 15:55:03.402 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 15:55:03.409 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-20 15:55:03.423 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-20 15:55:03.426 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-20 15:55:03.427 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-20 15:55:03.430 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-20 15:55:03.434 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-20 15:55:03.436 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-20 15:55:03.440 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-20 15:55:03.465 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-20 15:55:03.467 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-20 15:55:03.472 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-20 15:55:03.474 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-20 15:55:03.477 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-20 15:55:03.479 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-20 15:55:03.482 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-20 15:55:03.491 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-20 15:55:04.262 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-20 15:55:04.338 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-20 15:55:05.890 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-20 15:55:05.966 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-20 15:55:07.693 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-20 15:55:07.791 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-20 15:55:07.791 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-20 15:55:07.807 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-20 15:55:07.834 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 43 ms
25-05-20 15:55:07.966 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Started UserApiIntegrationTest in 12.804 seconds (process running for 15.295)
25-05-20 15:55:08.650 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:55:08.714 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:55:08.797 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:55:08.806 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:55:08.807 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:55:08.910 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-20 15:55:08.911 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 15:55:08.914 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 15:55:08.916 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 15:55:08.917 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 15:55:08.921 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 15:55:08.922 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 15:55:08.924 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 15:55:08.928 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-20 15:55:08.933 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-20 15:56:57.177 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Starting UserApiIntegrationTest using Java 17.0.14 with PID 31004 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-20 15:56:57.179 [main] DEBUG c.s.m.d.i.UserApiIntegrationTest     - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-20 15:56:57.180 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - The following 1 profile is active: "test"
25-05-20 15:56:58.347 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-20 15:56:58.414 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 54 ms. Found 6 JPA repository interfaces.
25-05-20 15:56:58.416 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:56:58.417 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:56:58.418 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:57:01.298 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-20 15:57:01.344 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-20 15:57:01.463 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-20 15:57:01.539 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-20 15:57:01.767 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-20 15:57:01.830 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-20 15:57:02.087 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-20 15:57:02.089 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-20 15:57:02.122 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-20 15:57:02.158 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-20 15:57:03.445 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-20 15:57:03.462 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 15:57:03.467 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 15:57:03.467 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 15:57:03.467 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 15:57:03.467 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 15:57:03.467 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 15:57:03.468 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 15:57:03.474 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-20 15:57:03.482 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-20 15:57:03.488 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-20 15:57:03.489 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-20 15:57:03.490 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-20 15:57:03.491 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-20 15:57:03.493 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-20 15:57:03.499 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-20 15:57:03.515 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-20 15:57:03.517 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-20 15:57:03.518 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-20 15:57:03.520 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-20 15:57:03.521 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-20 15:57:03.522 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-20 15:57:03.523 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-20 15:57:03.529 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-20 15:57:04.144 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-20 15:57:04.206 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-20 15:57:05.619 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-20 15:57:05.712 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-20 15:57:07.451 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-20 15:57:07.555 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-20 15:57:07.556 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-20 15:57:07.569 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-20 15:57:07.598 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 41 ms
25-05-20 15:57:07.746 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Started UserApiIntegrationTest in 11.372 seconds (process running for 13.341)
25-05-20 15:57:08.358 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:57:08.421 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:57:08.423 [main] DEBUG c.s.m.d.s.basic.BasicUserService     - Initial profileImageFile object: null
25-05-20 15:57:08.507 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 15:57:08.515 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 15:57:08.515 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 15:57:08.633 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-20 15:57:08.634 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 15:57:08.638 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 15:57:08.640 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 15:57:08.642 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 15:57:08.644 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 15:57:08.646 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 15:57:08.648 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 15:57:08.653 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-20 15:57:08.658 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-20 15:58:28.285 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Starting UserApiIntegrationTest using Java 17.0.14 with PID 3704 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-20 15:58:28.288 [main] DEBUG c.s.m.d.i.UserApiIntegrationTest     - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-20 15:58:28.290 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - The following 1 profile is active: "test"
25-05-20 15:58:30.264 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-20 15:58:30.407 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 120 ms. Found 6 JPA repository interfaces.
25-05-20 15:58:30.411 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:58:30.412 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:58:30.413 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 15:58:34.321 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-20 15:58:34.419 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-20 15:58:34.668 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-20 15:58:34.937 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-20 15:58:35.561 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-20 15:58:35.693 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-20 15:58:36.490 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-20 15:58:36.497 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-20 15:58:36.640 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-20 15:58:36.787 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-20 15:58:39.273 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-20 15:58:39.308 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 15:58:39.316 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 15:58:39.317 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 15:58:39.318 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 15:58:39.318 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 15:58:39.318 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 15:58:39.319 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 15:58:39.330 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-20 15:58:39.342 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-20 15:58:39.347 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-20 15:58:39.349 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-20 15:58:39.350 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-20 15:58:39.353 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-20 15:58:39.355 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-20 15:58:39.360 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-20 15:58:39.386 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-20 15:58:39.390 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-20 15:58:39.392 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-20 15:58:39.395 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-20 15:58:39.397 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-20 15:58:39.399 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-20 15:58:39.400 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-20 15:58:39.410 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-20 15:58:40.030 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-20 15:58:40.067 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-20 15:58:41.213 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-20 15:58:41.275 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-20 15:58:42.910 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-20 15:58:43.064 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-20 15:58:43.065 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-20 15:58:43.087 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-20 15:58:43.121 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 53 ms
25-05-20 15:58:43.323 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Started UserApiIntegrationTest in 16.21 seconds (process running for 18.857)
25-05-20 15:58:44.328 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 15:58:44.425 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 15:58:44.428 [main] DEBUG c.s.m.d.s.basic.BasicUserService     - Initial profileImageFile object: org.springframework.mock.web.MockMultipartFile@76eabed6
25-05-20 15:58:44.428 [main] DEBUG c.s.m.d.s.basic.BasicUserService     - profileImageFile is not null. isEmpty(): false
25-05-20 15:58:44.428 [main] DEBUG c.s.m.d.s.basic.BasicUserService     - Attempting to process profile image: error_profile.jpg
25-05-20 15:58:44.438 [main] ERROR c.s.m.d.s.basic.BasicUserService     - Profile image processing error in service, exception type: com.sprint.mission.discodeit.exception.file.FileProcessingCustomException, message: null
com.sprint.mission.discodeit.exception.file.FileProcessingCustomException: null
	at com.sprint.mission.discodeit.service.basic.BasicUserService.create(BasicUserService.java:64)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.sprint.mission.discodeit.service.basic.BasicUserService$$SpringCGLIB$$0.create(<generated>)
	at com.sprint.mission.discodeit.controller.UserController.create(UserController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.sprint.mission.discodeit.controller.UserController$$SpringCGLIB$$0.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.sprint.mission.discodeit.integration.UserApiIntegrationTest.createUser_Fail_ProfileImageError(UserApiIntegrationTest.java:182)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:767)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$8(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-20 15:58:44.792 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-20 15:58:44.796 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 15:58:44.799 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 15:58:44.802 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 15:58:44.805 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 15:58:44.809 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 15:58:44.811 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 15:58:44.813 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 15:58:44.820 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-20 15:58:44.829 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-20 16:03:08.494 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Starting UserApiIntegrationTest using Java 17.0.14 with PID 21252 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-20 16:03:08.498 [main] DEBUG c.s.m.d.i.UserApiIntegrationTest     - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-20 16:03:08.499 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - The following 1 profile is active: "test"
25-05-20 16:03:11.682 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-20 16:03:11.913 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 197 ms. Found 6 JPA repository interfaces.
25-05-20 16:03:11.918 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-20 16:03:11.920 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 16:03:11.921 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 16:03:18.647 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-20 16:03:18.777 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-20 16:03:19.054 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-20 16:03:19.205 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-20 16:03:19.668 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-20 16:03:19.808 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-20 16:03:20.431 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-20 16:03:20.436 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-20 16:03:20.504 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-20 16:03:20.573 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-20 16:03:23.272 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-20 16:03:23.309 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 16:03:23.317 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 16:03:23.318 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 16:03:23.318 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 16:03:23.319 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 16:03:23.319 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 16:03:23.319 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 16:03:23.327 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-20 16:03:23.344 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-20 16:03:23.349 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-20 16:03:23.352 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-20 16:03:23.354 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-20 16:03:23.356 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-20 16:03:23.359 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-20 16:03:23.364 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-20 16:03:23.388 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-20 16:03:23.391 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-20 16:03:23.396 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-20 16:03:23.398 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-20 16:03:23.400 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-20 16:03:23.403 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-20 16:03:23.406 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-20 16:03:23.417 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-20 16:03:24.580 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-20 16:03:24.703 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-20 16:03:27.246 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-20 16:03:27.371 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-20 16:03:30.100 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-20 16:03:30.271 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-20 16:03:30.272 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-20 16:03:30.295 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-20 16:03:30.343 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 71 ms
25-05-20 16:03:30.558 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Started UserApiIntegrationTest in 23.778 seconds (process running for 27.274)
25-05-20 16:03:31.438 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:03:31.531 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:03:31.663 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:03:31.674 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:03:31.675 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:03:31.834 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:03:31.863 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:03:31.865 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:03:31.869 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:03:31.873 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:03:31.876 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:03:31.878 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:03:31.931 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:03:31.933 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:03:31.936 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:03:31.942 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 사용자명 중복
25-05-20 16:03:32.164 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:03:32.168 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:03:32.174 [main] DEBUG c.s.m.d.s.basic.BasicUserService     - Attempting to process profile image for user user: profile.jpg
25-05-20 16:03:32.232 [main] DEBUG c.s.m.d.s.basic.BasicUserService     - Profile DTO created: null
25-05-20 16:03:32.233 [main] ERROR c.s.m.d.s.basic.BasicUserService     - Profile image processing error for user user, file profile.jpg: Cannot invoke "com.sprint.mission.discodeit.dto.data.BinaryContentDto.id()" because "profileDto" is null
java.lang.NullPointerException: Cannot invoke "com.sprint.mission.discodeit.dto.data.BinaryContentDto.id()" because "profileDto" is null
	at com.sprint.mission.discodeit.service.basic.BasicUserService.processProfileImage(BasicUserService.java:86)
	at com.sprint.mission.discodeit.service.basic.BasicUserService.create(BasicUserService.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.sprint.mission.discodeit.service.basic.BasicUserService$$SpringCGLIB$$0.create(<generated>)
	at com.sprint.mission.discodeit.controller.UserController.create(UserController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.sprint.mission.discodeit.controller.UserController$$SpringCGLIB$$0.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.sprint.mission.discodeit.integration.UserApiIntegrationTest.createUser_Success(UserApiIntegrationTest.java:103)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:767)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$8(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-20 16:03:32.327 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:03:32.330 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:03:32.337 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:03:32.344 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:03:32.345 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:03:32.365 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:03:32.368 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:03:32.370 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:03:32.374 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:03:32.377 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:03:32.380 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:03:32.381 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:03:32.394 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:03:32.397 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:03:32.401 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:03:32.406 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자명 변경 완료
25-05-20 16:03:32.422 [main] DEBUG org.hibernate.SQL                    - 
    update
        users 
    set
        email=?,
        password=?,
        profile_id=?,
        updated_at=?,
        username=? 
    where
        id=?
25-05-20 16:03:32.434 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:03:32.436 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 이메일 중복
25-05-20 16:03:32.464 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:03:32.469 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:03:32.473 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:03:32.475 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:03:32.476 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:03:32.486 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:03:32.489 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:03:32.492 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:03:32.496 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:03:32.499 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:03:32.501 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:03:32.501 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:03:32.526 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:03:32.528 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:03:32.529 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-20 16:03:32.554 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 조회 완료
25-05-20 16:03:32.624 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:03:32.628 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:03:32.633 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:03:32.635 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:03:32.635 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:03:32.645 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID '2c68d118-0b4b-4901-ab12-95a88dfe9934'가 작성한 메시지들의 작성자 정보를 null로 변경 시작.
25-05-20 16:03:32.652 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.author_id=?
25-05-20 16:03:32.661 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID '2c68d118-0b4b-4901-ab12-95a88dfe9934'가 작성한 메시지가 없습니다.
25-05-20 16:03:32.661 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 엔티티 삭제 시도
25-05-20 16:03:32.670 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 삭제 완료. ID: '2c68d118-0b4b-4901-ab12-95a88dfe9934'
25-05-20 16:03:32.680 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:03:32.683 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:03:32.687 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        user_statuses 
    where
        id=?
25-05-20 16:03:32.692 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        users 
    where
        id=?
25-05-20 16:03:32.695 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-20 16:03:32.698 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 조회 완료
25-05-20 16:03:32.730 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 16:03:32.772 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:03:32.776 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:03:32.780 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:03:32.785 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:03:32.786 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:03:32.795 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:03:32.796 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:03:32.797 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:03:32.798 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 유효성 검사 실패: 이메일 'duplicate@naver.com'은(는) 이미 존재합니다.
25-05-20 16:03:32.823 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:03:32.826 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:03:32.829 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:03:32.831 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:03:32.831 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:03:32.841 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:03:32.843 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:03:32.845 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:03:32.849 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:03:32.850 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 유효성 검사 실패: 사용자명 'duplicateUser'은(는) 이미 존재합니다.
25-05-20 16:03:32.871 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:03:32.875 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:03:32.880 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:03:32.882 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:03:32.883 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:03:32.894 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:03:32.896 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:03:32.898 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:03:32.899 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자명 변경 완료
25-05-20 16:03:32.902 [main] DEBUG org.hibernate.SQL                    - 
    update
        users 
    set
        email=?,
        password=?,
        profile_id=?,
        updated_at=?,
        username=? 
    where
        id=?
25-05-20 16:03:32.903 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:03:32.904 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 이메일 변경 완료
25-05-20 16:03:32.904 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 비밀번호 변경 완료
25-05-20 16:03:32.909 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:03:32.909 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 업데이트 완료
25-05-20 16:03:32.922 [main] DEBUG org.hibernate.SQL                    - 
    update
        users 
    set
        email=?,
        password=?,
        profile_id=?,
        updated_at=?,
        username=? 
    where
        id=?
25-05-20 16:03:32.925 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-20 16:03:32.927 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 조회 완료
25-05-20 16:03:32.967 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:03:32.972 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:03:32.974 [main] DEBUG c.s.m.d.s.basic.BasicUserService     - Attempting to process profile image for user imageErrorUser: error_profile.jpg
25-05-20 16:03:32.981 [main] ERROR c.s.m.d.s.basic.BasicUserService     - Profile image processing error for user imageErrorUser, file error_profile.jpg: 파일 처리 중 오류가 발생했습니다.
com.sprint.mission.discodeit.exception.file.FileProcessingCustomException: 파일 처리 중 오류가 발생했습니다.
	at com.sprint.mission.discodeit.service.basic.BasicUserService.processProfileImage(BasicUserService.java:84)
	at com.sprint.mission.discodeit.service.basic.BasicUserService.create(BasicUserService.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.sprint.mission.discodeit.service.basic.BasicUserService$$SpringCGLIB$$0.create(<generated>)
	at com.sprint.mission.discodeit.controller.UserController.create(UserController.java:36)
	at jdk.internal.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.sprint.mission.discodeit.controller.UserController$$SpringCGLIB$$0.create(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.sprint.mission.discodeit.integration.UserApiIntegrationTest.createUser_Fail_ProfileImageError(UserApiIntegrationTest.java:182)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:767)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$8(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-20 16:03:33.024 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-20 16:03:33.026 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 16:03:33.030 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 16:03:33.032 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 16:03:33.034 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 16:03:33.039 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 16:03:33.041 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 16:03:33.043 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 16:03:33.050 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-20 16:03:33.058 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-20 16:05:26.085 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Starting UserApiIntegrationTest using Java 17.0.14 with PID 12276 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-20 16:05:26.091 [main] DEBUG c.s.m.d.i.UserApiIntegrationTest     - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-20 16:05:26.093 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - The following 1 profile is active: "test"
25-05-20 16:05:28.279 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-20 16:05:28.427 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 118 ms. Found 6 JPA repository interfaces.
25-05-20 16:05:28.432 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-20 16:05:28.433 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 16:05:28.434 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 16:05:33.432 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-20 16:05:33.526 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-20 16:05:33.758 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-20 16:05:33.898 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-20 16:05:34.245 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-20 16:05:34.329 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-20 16:05:34.801 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-20 16:05:34.806 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-20 16:05:34.852 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-20 16:05:34.912 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-20 16:05:37.121 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-20 16:05:37.160 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 16:05:37.166 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 16:05:37.167 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 16:05:37.168 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 16:05:37.168 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 16:05:37.168 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 16:05:37.168 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 16:05:37.178 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-20 16:05:37.195 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-20 16:05:37.202 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-20 16:05:37.205 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-20 16:05:37.207 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-20 16:05:37.209 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-20 16:05:37.213 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-20 16:05:37.219 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-20 16:05:37.246 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-20 16:05:37.249 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-20 16:05:37.252 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-20 16:05:37.254 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-20 16:05:37.259 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-20 16:05:37.261 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-20 16:05:37.264 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-20 16:05:37.274 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-20 16:05:38.440 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-20 16:05:38.544 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-20 16:05:40.721 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-20 16:05:40.969 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-20 16:05:43.724 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-20 16:05:43.864 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-20 16:05:43.865 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-20 16:05:43.888 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-20 16:05:43.929 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 64 ms
25-05-20 16:05:44.163 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Started UserApiIntegrationTest in 19.436 seconds (process running for 22.748)
25-05-20 16:05:45.028 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:05:45.121 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:05:45.244 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:05:45.255 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:05:45.256 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:05:45.391 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:05:45.419 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:05:45.420 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:05:45.425 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:05:45.428 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:05:45.430 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:05:45.430 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:05:45.474 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:05:45.476 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:05:45.477 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:05:45.482 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 사용자명 중복
25-05-20 16:05:45.710 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:05:45.713 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:05:45.714 [main] DEBUG c.s.m.d.s.basic.BasicUserService     - Attempting to process profile image for user user: profile.jpg
25-05-20 16:05:45.723 [main] DEBUG c.s.m.d.s.basic.BasicUserService     - Profile DTO created: BinaryContentDto[id=a59d9be0-41df-460b-ad30-5bf7db64893b, fileName=profile.jpg, size=18, contentType=image/jpeg]
25-05-20 16:05:45.731 [main] DEBUG org.hibernate.SQL                    - 
    select
        bc1_0.id,
        bc1_0.content_type,
        bc1_0.created_at,
        bc1_0.file_name,
        bc1_0.size 
    from
        binary_contents bc1_0 
    where
        bc1_0.id=?
25-05-20 16:05:45.751 [main] ERROR c.s.m.d.s.basic.BasicUserService     - 저장된 프로필 이미지 메타데이터를 찾을 수 없습니다. ID: a59d9be0-41df-460b-ad30-5bf7db64893b
25-05-20 16:05:45.755 [main] ERROR c.s.m.d.s.basic.BasicUserService     - Profile image processing error for user user, file profile.jpg: 파일 처리 중 오류가 발생했습니다.
com.sprint.mission.discodeit.exception.file.FileProcessingCustomException: 파일 처리 중 오류가 발생했습니다.
	at com.sprint.mission.discodeit.service.basic.BasicUserService.lambda$processProfileImage$0(BasicUserService.java:90)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.sprint.mission.discodeit.service.basic.BasicUserService.processProfileImage(BasicUserService.java:87)
	at com.sprint.mission.discodeit.service.basic.BasicUserService.create(BasicUserService.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.sprint.mission.discodeit.service.basic.BasicUserService$$SpringCGLIB$$0.create(<generated>)
	at com.sprint.mission.discodeit.controller.UserController.create(UserController.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.sprint.mission.discodeit.controller.UserController$$SpringCGLIB$$0.create(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.sprint.mission.discodeit.integration.UserApiIntegrationTest.createUser_Success(UserApiIntegrationTest.java:114)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:767)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$8(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-20 16:05:45.813 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:05:45.817 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:05:45.821 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:05:45.823 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:05:45.824 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:05:45.834 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:05:45.835 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:05:45.836 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:05:45.840 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:05:45.845 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:05:45.848 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:05:45.848 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:05:45.857 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:05:45.859 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:05:45.861 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:05:45.864 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자명 변경 완료
25-05-20 16:05:45.878 [main] DEBUG org.hibernate.SQL                    - 
    update
        users 
    set
        email=?,
        password=?,
        profile_id=?,
        updated_at=?,
        username=? 
    where
        id=?
25-05-20 16:05:45.888 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:05:45.890 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 이메일 중복
25-05-20 16:05:45.922 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:05:45.926 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:05:45.929 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:05:45.931 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:05:45.932 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:05:45.942 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:05:45.944 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:05:45.946 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:05:45.950 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:05:45.953 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:05:45.955 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:05:45.955 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:05:45.979 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:05:45.981 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:05:45.982 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-20 16:05:45.990 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 조회 완료
25-05-20 16:05:46.053 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:05:46.056 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:05:46.059 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:05:46.062 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:05:46.062 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:05:46.067 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID '0b1b9d8e-1730-4689-aaac-42b1f5c140d0'가 작성한 메시지들의 작성자 정보를 null로 변경 시작.
25-05-20 16:05:46.071 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.author_id=?
25-05-20 16:05:46.080 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID '0b1b9d8e-1730-4689-aaac-42b1f5c140d0'가 작성한 메시지가 없습니다.
25-05-20 16:05:46.080 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 엔티티 삭제 시도
25-05-20 16:05:46.089 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 삭제 완료. ID: '0b1b9d8e-1730-4689-aaac-42b1f5c140d0'
25-05-20 16:05:46.099 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:05:46.100 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:05:46.105 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        user_statuses 
    where
        id=?
25-05-20 16:05:46.110 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        users 
    where
        id=?
25-05-20 16:05:46.111 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-20 16:05:46.113 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 조회 완료
25-05-20 16:05:46.137 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 16:05:46.166 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:05:46.171 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:05:46.174 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:05:46.178 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:05:46.178 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:05:46.191 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:05:46.192 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:05:46.193 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:05:46.194 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 유효성 검사 실패: 이메일 'duplicate@naver.com'은(는) 이미 존재합니다.
25-05-20 16:05:46.217 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:05:46.221 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:05:46.225 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:05:46.226 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:05:46.226 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:05:46.235 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:05:46.237 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:05:46.238 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:05:46.242 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:05:46.243 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 유효성 검사 실패: 사용자명 'duplicateUser'은(는) 이미 존재합니다.
25-05-20 16:05:46.265 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:05:46.268 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:05:46.272 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:05:46.275 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:05:46.275 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:05:46.284 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:05:46.286 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:05:46.287 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:05:46.288 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자명 변경 완료
25-05-20 16:05:46.291 [main] DEBUG org.hibernate.SQL                    - 
    update
        users 
    set
        email=?,
        password=?,
        profile_id=?,
        updated_at=?,
        username=? 
    where
        id=?
25-05-20 16:05:46.293 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:05:46.295 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 이메일 변경 완료
25-05-20 16:05:46.295 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 비밀번호 변경 완료
25-05-20 16:05:46.300 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:05:46.301 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 업데이트 완료
25-05-20 16:05:46.310 [main] DEBUG org.hibernate.SQL                    - 
    update
        users 
    set
        email=?,
        password=?,
        profile_id=?,
        updated_at=?,
        username=? 
    where
        id=?
25-05-20 16:05:46.311 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-20 16:05:46.313 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 조회 완료
25-05-20 16:05:46.347 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:05:46.350 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:05:46.352 [main] DEBUG c.s.m.d.s.basic.BasicUserService     - Attempting to process profile image for user imageErrorUser: error_profile.jpg
25-05-20 16:05:46.354 [main] ERROR c.s.m.d.s.basic.BasicUserService     - Profile image processing error for user imageErrorUser, file error_profile.jpg: 파일 처리 중 오류가 발생했습니다.
com.sprint.mission.discodeit.exception.file.FileProcessingCustomException: 파일 처리 중 오류가 발생했습니다.
	at com.sprint.mission.discodeit.service.basic.BasicUserService.processProfileImage(BasicUserService.java:84)
	at com.sprint.mission.discodeit.service.basic.BasicUserService.create(BasicUserService.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.sprint.mission.discodeit.service.basic.BasicUserService$$SpringCGLIB$$0.create(<generated>)
	at com.sprint.mission.discodeit.controller.UserController.create(UserController.java:36)
	at jdk.internal.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.sprint.mission.discodeit.controller.UserController$$SpringCGLIB$$0.create(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.sprint.mission.discodeit.integration.UserApiIntegrationTest.createUser_Fail_ProfileImageError(UserApiIntegrationTest.java:193)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:767)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$8(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-20 16:05:46.393 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-20 16:05:46.395 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 16:05:46.400 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 16:05:46.402 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 16:05:46.403 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 16:05:46.408 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 16:05:46.411 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 16:05:46.413 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 16:05:46.420 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-20 16:05:46.430 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-20 16:08:22.010 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Starting UserApiIntegrationTest using Java 17.0.14 with PID 6476 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-20 16:08:22.013 [main] DEBUG c.s.m.d.i.UserApiIntegrationTest     - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-20 16:08:22.015 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - The following 1 profile is active: "test"
25-05-20 16:08:24.170 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-20 16:08:24.331 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 132 ms. Found 6 JPA repository interfaces.
25-05-20 16:08:24.335 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-20 16:08:24.337 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 16:08:24.338 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-20 16:08:29.272 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-20 16:08:29.360 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-20 16:08:29.546 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-20 16:08:29.666 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-20 16:08:30.059 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-20 16:08:30.151 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-20 16:08:30.536 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-20 16:08:30.540 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-20 16:08:30.590 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-20 16:08:30.629 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-20 16:08:32.524 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-20 16:08:32.557 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 16:08:32.567 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 16:08:32.568 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 16:08:32.569 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 16:08:32.571 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 16:08:32.573 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 16:08:32.573 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 16:08:32.587 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-20 16:08:32.607 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-20 16:08:32.614 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-20 16:08:32.616 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-20 16:08:32.618 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-20 16:08:32.621 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-20 16:08:32.623 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-20 16:08:32.628 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-20 16:08:32.654 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-20 16:08:32.657 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-20 16:08:32.659 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-20 16:08:32.661 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-20 16:08:32.663 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-20 16:08:32.667 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-20 16:08:32.671 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-20 16:08:32.683 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-20 16:08:33.673 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-20 16:08:33.783 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-20 16:08:35.879 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-20 16:08:35.985 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-20 16:08:38.608 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-20 16:08:38.752 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-20 16:08:38.752 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-20 16:08:38.781 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-20 16:08:38.830 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 77 ms
25-05-20 16:08:39.051 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Started UserApiIntegrationTest in 18.327 seconds (process running for 23.146)
25-05-20 16:08:40.040 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:08:40.148 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:08:40.278 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:08:40.290 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:08:40.291 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:08:40.525 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:08:40.582 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:08:40.586 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:08:40.594 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:08:40.603 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:08:40.605 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:08:40.606 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:08:40.678 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:08:40.681 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:08:40.683 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:08:40.688 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 사용자명 중복
25-05-20 16:08:41.110 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:08:41.116 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:08:41.119 [main] DEBUG c.s.m.d.s.basic.BasicUserService     - Attempting to process profile image for user user: profile.jpg
25-05-20 16:08:41.134 [main] DEBUG c.s.m.d.s.basic.BasicUserService     - Profile DTO created: BinaryContentDto[id=0bdba34c-c07d-4d76-bd1b-93e732e2cd63, fileName=profile.jpg, size=18, contentType=image/jpeg]
25-05-20 16:08:41.164 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:08:41.167 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:08:41.170 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:08:41.234 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:08:41.240 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:08:41.248 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:08:41.253 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:08:41.254 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:08:41.266 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:08:41.268 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:08:41.271 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:08:41.277 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:08:41.282 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:08:41.285 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:08:41.286 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:08:41.304 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:08:41.306 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:08:41.308 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:08:41.311 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자명 변경 완료
25-05-20 16:08:41.335 [main] DEBUG org.hibernate.SQL                    - 
    update
        users 
    set
        email=?,
        password=?,
        profile_id=?,
        updated_at=?,
        username=? 
    where
        id=?
25-05-20 16:08:41.351 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:08:41.353 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 이메일 중복
25-05-20 16:08:41.399 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:08:41.403 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:08:41.407 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:08:41.410 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:08:41.410 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:08:41.423 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:08:41.426 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:08:41.428 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:08:41.433 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:08:41.437 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:08:41.440 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:08:41.440 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:08:41.477 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:08:41.481 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:08:41.485 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-20 16:08:41.525 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 조회 완료
25-05-20 16:08:41.643 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:08:41.647 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:08:41.653 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:08:41.658 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:08:41.659 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:08:41.678 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID '6f558aa4-878b-4808-af8e-9d2907374078'가 작성한 메시지들의 작성자 정보를 null로 변경 시작.
25-05-20 16:08:41.693 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.author_id=?
25-05-20 16:08:41.704 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID '6f558aa4-878b-4808-af8e-9d2907374078'가 작성한 메시지가 없습니다.
25-05-20 16:08:41.706 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 엔티티 삭제 시도
25-05-20 16:08:41.718 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 삭제 완료. ID: '6f558aa4-878b-4808-af8e-9d2907374078'
25-05-20 16:08:41.732 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:08:41.737 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:08:41.748 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        user_statuses 
    where
        id=?
25-05-20 16:08:41.754 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        users 
    where
        id=?
25-05-20 16:08:41.757 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-20 16:08:41.761 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 조회 완료
25-05-20 16:08:41.794 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-20 16:08:41.845 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:08:41.852 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:08:41.858 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:08:41.880 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:08:41.883 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:08:41.927 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:08:41.932 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:08:41.938 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:08:41.951 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 유효성 검사 실패: 이메일 'duplicate@naver.com'은(는) 이미 존재합니다.
25-05-20 16:08:42.028 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:08:42.040 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:08:42.046 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:08:42.048 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:08:42.048 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:08:42.061 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:08:42.065 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:08:42.067 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:08:42.072 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:08:42.074 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 유효성 검사 실패: 사용자명 'duplicateUser'은(는) 이미 존재합니다.
25-05-20 16:08:42.120 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:08:42.128 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:08:42.137 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:08:42.138 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-20 16:08:42.138 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-20 16:08:42.164 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-20 16:08:42.171 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-20 16:08:42.173 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:08:42.176 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자명 변경 완료
25-05-20 16:08:42.184 [main] DEBUG org.hibernate.SQL                    - 
    update
        users 
    set
        email=?,
        password=?,
        profile_id=?,
        updated_at=?,
        username=? 
    where
        id=?
25-05-20 16:08:42.190 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:08:42.193 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 이메일 변경 완료
25-05-20 16:08:42.193 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 비밀번호 변경 완료
25-05-20 16:08:42.201 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-20 16:08:42.202 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 업데이트 완료
25-05-20 16:08:42.218 [main] DEBUG org.hibernate.SQL                    - 
    update
        users 
    set
        email=?,
        password=?,
        profile_id=?,
        updated_at=?,
        username=? 
    where
        id=?
25-05-20 16:08:42.221 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-20 16:08:42.224 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 조회 완료
25-05-20 16:08:42.274 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-20 16:08:42.278 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-20 16:08:42.280 [main] DEBUG c.s.m.d.s.basic.BasicUserService     - Attempting to process profile image for user imageErrorUser: error_profile.jpg
25-05-20 16:08:42.282 [main] ERROR c.s.m.d.s.basic.BasicUserService     - Profile image processing error for user imageErrorUser, file error_profile.jpg: 파일 처리 중 오류가 발생했습니다.
com.sprint.mission.discodeit.exception.file.FileProcessingCustomException: 파일 처리 중 오류가 발생했습니다.
	at com.sprint.mission.discodeit.service.basic.BasicUserService.processProfileImage(BasicUserService.java:84)
	at com.sprint.mission.discodeit.service.basic.BasicUserService.create(BasicUserService.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.sprint.mission.discodeit.service.basic.BasicUserService$$SpringCGLIB$$0.create(<generated>)
	at com.sprint.mission.discodeit.controller.UserController.create(UserController.java:36)
	at jdk.internal.reflect.GeneratedMethodAccessor70.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:727)
	at com.sprint.mission.discodeit.controller.UserController$$SpringCGLIB$$0.create(<generated>)
	at jdk.internal.reflect.GeneratedMethodAccessor70.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1088)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:978)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at org.springframework.test.web.servlet.TestDispatcherServlet.service(TestDispatcherServlet.java:72)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.springframework.mock.web.MockFilterChain$ServletFilterProxy.doFilter(MockFilterChain.java:165)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:114)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.test.web.servlet.setup.MockMvcFilterDecorator.doFilter(MockMvcFilterDecorator.java:162)
	at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:132)
	at org.springframework.test.web.servlet.MockMvc.perform(MockMvc.java:201)
	at com.sprint.mission.discodeit.integration.UserApiIntegrationTest.createUser_Fail_ProfileImageError(UserApiIntegrationTest.java:214)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:767)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$8(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
25-05-20 16:08:42.347 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-20 16:08:42.350 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-20 16:08:42.355 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-20 16:08:42.357 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-20 16:08:42.358 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-20 16:08:42.363 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-20 16:08:42.365 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-20 16:08:42.367 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-20 16:08:42.375 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-20 16:08:42.384 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-20 16:22:04.687 [main] INFO  c.s.m.d.c.ChannelControllerTest      - Starting ChannelControllerTest using Java 17.0.14 with PID 12888 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-20 16:22:04.692 [main] DEBUG c.s.m.d.c.ChannelControllerTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-20 16:22:04.694 [main] INFO  c.s.m.d.c.ChannelControllerTest      - The following 1 profile is active: "dev"
25-05-20 16:22:09.602 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-20 16:22:10.659 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-20 16:22:10.660 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-20 16:22:10.664 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 3 ms
25-05-20 16:22:10.747 [main] INFO  c.s.m.d.c.ChannelControllerTest      - Started ChannelControllerTest in 8.447 seconds (process running for 13.06)
25-05-20 16:22:22.747 [main] INFO  c.s.m.d.c.MessageControllerTest      - Starting MessageControllerTest using Java 17.0.14 with PID 4736 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-20 16:22:22.748 [main] DEBUG c.s.m.d.c.MessageControllerTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-20 16:22:22.749 [main] INFO  c.s.m.d.c.MessageControllerTest      - The following 1 profile is active: "test"
25-05-20 16:22:26.651 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-20 16:22:27.508 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-20 16:22:27.508 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-20 16:22:27.511 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 2 ms
25-05-20 16:22:27.575 [main] INFO  c.s.m.d.c.MessageControllerTest      - Started MessageControllerTest in 6.366 seconds (process running for 9.8)
25-05-20 16:22:42.601 [main] INFO  c.s.m.d.c.UserControllerTest         - Starting UserControllerTest using Java 17.0.14 with PID 26992 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-20 16:22:42.603 [main] DEBUG c.s.m.d.c.UserControllerTest         - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-20 16:22:42.605 [main] INFO  c.s.m.d.c.UserControllerTest         - The following 1 profile is active: "dev"
25-05-20 16:22:46.296 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-20 16:22:47.035 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-20 16:22:47.036 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-20 16:22:47.040 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 2 ms
25-05-20 16:22:47.091 [main] INFO  c.s.m.d.c.UserControllerTest         - Started UserControllerTest in 5.963 seconds (process running for 9.259)
25-05-20 16:23:36.985 [main] INFO  c.s.m.d.c.UserControllerTest         - Starting UserControllerTest using Java 17.0.14 with PID 18848 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-20 16:23:36.989 [main] DEBUG c.s.m.d.c.UserControllerTest         - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-20 16:23:36.991 [main] INFO  c.s.m.d.c.UserControllerTest         - The following 1 profile is active: "test"
25-05-20 16:23:42.903 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-20 16:23:43.977 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-20 16:23:43.979 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-20 16:23:43.985 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 4 ms
25-05-20 16:23:44.079 [main] INFO  c.s.m.d.c.UserControllerTest         - Started UserControllerTest in 9.523 seconds (process running for 13.403)
25-05-20 16:37:40.922 [main] INFO  c.s.m.d.c.UserControllerTest         - Starting UserControllerTest using Java 17.0.14 with PID 11040 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-20 16:37:40.926 [main] DEBUG c.s.m.d.c.UserControllerTest         - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-20 16:37:40.927 [main] INFO  c.s.m.d.c.UserControllerTest         - The following 1 profile is active: "test"
25-05-20 16:37:44.651 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-20 16:37:45.393 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-20 16:37:45.393 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-20 16:37:45.398 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 4 ms
25-05-20 16:37:45.504 [main] INFO  c.s.m.d.c.UserControllerTest         - Started UserControllerTest in 6.217 seconds (process running for 10.275)
