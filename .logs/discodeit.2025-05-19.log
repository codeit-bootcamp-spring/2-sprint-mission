25-05-19 18:32:51.913 [main] INFO  c.s.m.d.c.ChannelControllerTest      - Starting ChannelControllerTest using Java 17.0.14 with PID 27048 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 18:32:51.930 [main] DEBUG c.s.m.d.c.ChannelControllerTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 18:32:51.933 [main] INFO  c.s.m.d.c.ChannelControllerTest      - The following 1 profile is active: "dev"
25-05-19 18:32:55.498 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 18:32:56.276 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 18:32:56.280 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 18:32:56.284 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 4 ms
25-05-19 18:32:56.369 [main] INFO  c.s.m.d.c.ChannelControllerTest      - Started ChannelControllerTest in 5.649 seconds (process running for 9.125)
25-05-19 18:33:38.309 [main] INFO  c.s.m.d.c.MessageControllerTest      - Starting MessageControllerTest using Java 17.0.14 with PID 1816 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 18:33:38.312 [main] DEBUG c.s.m.d.c.MessageControllerTest      - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 18:33:38.314 [main] INFO  c.s.m.d.c.MessageControllerTest      - The following 1 profile is active: "test"
25-05-19 18:33:43.086 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 18:33:43.906 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 18:33:43.907 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 18:33:43.912 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 5 ms
25-05-19 18:33:43.987 [main] INFO  c.s.m.d.c.MessageControllerTest      - Started MessageControllerTest in 8.585 seconds (process running for 12.346)
25-05-19 19:00:21.019 [main] INFO  c.s.m.d.c.UserControllerTest         - Starting UserControllerTest using Java 17.0.14 with PID 8316 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 19:00:21.030 [main] DEBUG c.s.m.d.c.UserControllerTest         - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 19:00:21.034 [main] INFO  c.s.m.d.c.UserControllerTest         - The following 1 profile is active: "dev"
25-05-19 19:00:25.725 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 19:00:26.461 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 19:00:26.462 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 19:00:26.467 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 3 ms
25-05-19 19:00:26.560 [main] INFO  c.s.m.d.c.UserControllerTest         - Started UserControllerTest in 7.807 seconds (process running for 13.731)
25-05-19 19:03:13.181 [main] INFO  c.s.m.d.c.UserControllerTest         - Starting UserControllerTest using Java 17.0.14 with PID 3612 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 19:03:13.183 [main] DEBUG c.s.m.d.c.UserControllerTest         - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 19:03:13.184 [main] INFO  c.s.m.d.c.UserControllerTest         - The following 1 profile is active: "dev"
25-05-19 19:03:15.743 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 19:03:16.465 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 19:03:16.465 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 19:03:16.467 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 2 ms
25-05-19 19:03:16.522 [main] INFO  c.s.m.d.c.UserControllerTest         - Started UserControllerTest in 4.47 seconds (process running for 7.05)
25-05-19 19:03:59.787 [main] INFO  c.s.m.d.c.UserControllerTest         - Starting UserControllerTest using Java 17.0.14 with PID 9596 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 19:03:59.789 [main] DEBUG c.s.m.d.c.UserControllerTest         - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 19:03:59.791 [main] INFO  c.s.m.d.c.UserControllerTest         - The following 1 profile is active: "dev"
25-05-19 19:04:02.196 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 19:04:02.712 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 19:04:02.713 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 19:04:02.716 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 3 ms
25-05-19 19:04:02.761 [main] INFO  c.s.m.d.c.UserControllerTest         - Started UserControllerTest in 3.961 seconds (process running for 6.122)
25-05-19 19:05:03.585 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 20648 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 19:05:03.587 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 19:05:03.588 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-19 19:05:04.713 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-19 19:05:04.787 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 61 ms. Found 6 JPA repository interfaces.
25-05-19 19:05:04.790 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:05:04.790 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:05:04.790 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:05:06.623 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-19 19:05:06.915 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-19 19:05:06.918 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-19 19:05:07.102 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-19 19:05:07.173 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-19 19:05:07.350 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-19 19:05:07.456 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-19 19:05:08.041 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-19 19:05:08.119 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-19 19:05:08.152 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-19 19:05:10.011 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-19 19:05:10.042 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:05:10.046 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:05:10.050 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:05:10.053 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:05:10.055 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:05:10.057 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:05:10.059 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:05:10.069 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-19 19:05:10.073 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-19 19:05:10.077 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-19 19:05:10.079 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-19 19:05:10.080 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-19 19:05:10.081 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-19 19:05:10.084 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-19 19:05:10.086 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-19 19:05:10.088 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-19 19:05:10.090 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-19 19:05:10.092 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-19 19:05:10.093 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-19 19:05:10.095 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-19 19:05:10.097 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-19 19:05:10.099 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-19 19:05:10.108 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:05:11.181 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-19 19:05:11.308 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-19 19:05:12.897 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-19 19:05:12.987 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 19:05:14.640 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-19 19:05:14.773 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 19:05:14.774 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 19:05:14.795 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-19 19:05:14.834 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 59 ms
25-05-19 19:05:15.115 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 12.297 seconds (process running for 14.397)
25-05-19 19:05:16.477 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:05:16.572 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:05:16.679 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:05:16.689 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:05:16.690 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:05:16.825 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:05:16.841 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:05:16.843 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:05:16.847 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:05:16.849 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:05:16.851 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:05:16.851 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:05:16.870 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:05:16.877 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:05:16.897 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:05:16.928 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:05:17.051 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:05:17.053 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:05:17.055 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:05:17.057 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 19:05:17.068 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 메시지 삭제 완료
25-05-19 19:05:17.074 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=?
25-05-19 19:05:17.077 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ReadStatus 삭제 완료
25-05-19 19:05:17.082 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:05:17.103 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 완료
25-05-19 19:05:17.164 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:05:17.168 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:05:17.171 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:05:17.172 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:05:17.173 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:05:17.184 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:05:17.186 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:05:17.187 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:05:17.190 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:05:17.193 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:05:17.196 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:05:17.196 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:05:17.208 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:05:17.209 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:05:17.211 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 19:05:17.213 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 사용자 없음
25-05-19 19:05:17.357 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:05:17.361 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:05:17.365 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:05:17.367 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:05:17.368 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:05:17.377 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:05:17.378 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:05:17.380 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:05:17.384 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:05:17.387 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:05:17.388 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:05:17.389 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:05:17.402 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 19:05:17.407 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-19 19:05:17.433 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:05:17.437 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:05:17.441 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:05:17.442 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:05:17.442 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:05:17.452 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:05:17.455 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:05:17.456 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:05:17.460 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:05:17.463 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:05:17.465 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:05:17.465 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:05:17.505 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:05:17.507 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:05:17.508 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:05:17.519 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-19 19:05:17.524 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:05:17.535 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-19 19:05:17.535 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-19 19:05:17.539 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:05:17.545 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:05:17.546 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:05:17.548 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:05:17.549 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:05:17.582 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:05:17.587 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:05:17.590 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:05:17.592 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:05:17.593 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:05:17.602 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:05:17.604 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:05:17.606 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:05:17.610 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:05:17.611 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:05:17.612 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:05:17.613 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:05:17.621 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:05:17.624 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:05:17.628 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:05:17.633 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:05:17.643 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 완료
25-05-19 19:05:17.650 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:05:17.654 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:05:17.677 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:05:17.679 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:05:17.683 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:05:17.685 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:05:17.685 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:05:17.694 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:05:17.696 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:05:17.697 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:05:17.701 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:05:17.704 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:05:17.706 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:05:17.707 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:05:17.715 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 19:05:17.717 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-19 19:05:17.744 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:05:17.747 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:05:17.750 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:05:17.751 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:05:17.752 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:05:17.761 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:05:17.763 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:05:17.765 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:05:17.768 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:05:17.771 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:05:17.772 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:05:17.772 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:05:17.783 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:05:17.785 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:05:17.787 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:05:17.790 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 실패: 존재하지 않는 사용자 ID가 포함되어 있습니다: [1fe7fe39-4259-4819-b188-24eb52250d2f]
25-05-19 19:05:17.814 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:05:17.818 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:05:17.821 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:05:17.823 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:05:17.823 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:05:17.833 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:05:17.835 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:05:17.836 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:05:17.838 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:05:17.840 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:05:17.841 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:05:17.841 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:05:17.848 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:05:17.849 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:05:17.852 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:05:17.859 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:05:17.870 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:05:17.873 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:05:17.874 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:05:17.876 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:05:17.880 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-19 19:05:17.885 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:05:17.888 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-19 19:05:17.889 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-19 19:05:17.893 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:05:17.899 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:05:17.900 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:05:17.901 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:05:17.902 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:05:17.908 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 19:05:17.912 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.user_id=?
25-05-19 19:05:17.914 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 사용자 채널 목록 확인 완료
25-05-19 19:05:17.916 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.type=?
25-05-19 19:05:17.921 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id in (?) 
        and c1_0.type=?
25-05-19 19:05:17.923 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 조회 완료
25-05-19 19:05:17.926 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:05:17.928 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:05:17.932 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:05:17.938 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:05:17.999 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:05:18.002 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:05:18.005 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:05:18.006 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:05:18.007 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:05:18.016 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:05:18.017 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:05:18.019 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:05:18.023 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:05:18.025 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:05:18.027 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:05:18.027 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:05:18.073 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:05:18.077 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:05:18.080 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:05:18.080 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:05:18.082 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:05:18.090 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:05:18.093 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:05:18.095 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:05:18.098 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:05:18.101 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:05:18.103 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:05:18.103 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:05:18.109 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:05:18.111 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:05:18.114 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:05:18.119 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:05:18.152 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:05:18.154 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:05:18.155 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:05:18.157 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:05:18.158 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:05:18.162 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:05:18.164 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:05:18.165 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:05:18.172 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-19 19:05:18.180 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-19 19:06:15.059 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 5468 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 19:06:15.061 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 19:06:15.063 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-19 19:06:16.349 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-19 19:06:16.441 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 76 ms. Found 6 JPA repository interfaces.
25-05-19 19:06:16.444 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:06:16.445 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:06:16.446 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:06:18.315 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-19 19:06:18.695 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-19 19:06:18.700 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-19 19:06:18.908 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-19 19:06:18.966 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-19 19:06:19.097 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-19 19:06:19.177 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-19 19:06:19.610 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-19 19:06:19.694 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-19 19:06:19.741 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-19 19:06:22.335 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-19 19:06:22.369 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:06:22.374 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:06:22.376 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:06:22.377 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:06:22.378 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:06:22.379 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:06:22.380 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:06:22.395 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-19 19:06:22.400 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-19 19:06:22.405 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-19 19:06:22.407 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-19 19:06:22.408 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-19 19:06:22.410 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-19 19:06:22.413 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-19 19:06:22.416 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-19 19:06:22.418 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-19 19:06:22.421 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-19 19:06:22.422 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-19 19:06:22.425 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-19 19:06:22.428 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-19 19:06:22.431 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-19 19:06:22.433 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-19 19:06:22.443 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:06:23.182 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-19 19:06:23.294 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-19 19:06:24.745 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-19 19:06:24.810 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 19:06:26.454 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-19 19:06:26.557 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 19:06:26.558 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 19:06:26.575 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-19 19:06:26.601 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 43 ms
25-05-19 19:06:26.737 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 12.601 seconds (process running for 15.148)
25-05-19 19:06:45.710 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:06:45.814 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:06:45.965 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:06:45.979 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:06:45.980 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:06:46.154 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:06:46.182 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:06:46.185 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:06:46.190 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:06:46.194 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:06:46.196 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:06:46.196 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:06:46.232 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:06:46.245 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:06:46.277 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:06:46.313 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:06:46.525 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:06:46.528 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:06:46.530 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:06:46.532 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 19:06:46.544 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 메시지 삭제 완료
25-05-19 19:06:46.549 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=?
25-05-19 19:06:46.552 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ReadStatus 삭제 완료
25-05-19 19:06:46.557 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:06:46.580 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 완료
25-05-19 19:06:46.643 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:06:46.646 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:06:46.651 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:06:46.653 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:06:46.653 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:06:46.664 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:06:46.667 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:06:46.669 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:06:46.673 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:06:46.677 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:06:46.680 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:06:46.681 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:06:46.694 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:06:46.697 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:06:46.699 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 19:06:46.702 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 사용자 없음
25-05-19 19:06:46.911 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:06:46.925 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:06:46.952 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:06:46.957 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:06:46.959 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:06:46.970 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:06:46.974 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:06:46.980 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:06:46.985 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:06:46.989 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:06:46.991 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:06:46.991 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:06:47.013 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 19:06:47.017 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-19 19:06:47.054 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:06:47.060 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:06:47.064 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:06:47.066 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:06:47.067 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:06:47.080 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:06:47.083 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:06:47.086 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:06:47.091 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:06:47.095 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:06:47.097 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:06:47.098 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:06:47.150 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:06:47.152 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:06:47.155 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:06:47.167 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-19 19:06:47.177 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:06:47.202 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-19 19:06:47.207 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-19 19:06:47.217 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:06:47.263 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:06:47.265 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:06:47.267 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:06:47.269 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:06:47.336 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:06:47.340 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:06:47.345 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:06:47.354 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:06:47.355 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:06:47.375 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:06:47.379 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:06:47.381 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:06:47.390 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:06:47.393 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:06:47.395 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:06:47.395 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:06:47.413 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:06:47.418 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:06:47.422 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:06:47.438 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:06:47.454 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 완료
25-05-19 19:06:47.464 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:06:47.475 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:06:47.528 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:06:47.535 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:06:47.538 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:06:47.539 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:06:47.540 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:06:47.549 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:06:47.551 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:06:47.554 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:06:47.559 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:06:47.562 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:06:47.566 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:06:47.566 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:06:47.577 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 19:06:47.579 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-19 19:06:47.624 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:06:47.634 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:06:47.641 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:06:47.643 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:06:47.643 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:06:47.655 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:06:47.658 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:06:47.660 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:06:47.666 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:06:47.671 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:06:47.674 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:06:47.674 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:06:47.696 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:06:47.698 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:06:47.700 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:06:47.706 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 실패: 존재하지 않는 사용자 ID가 포함되어 있습니다: [53f200d5-a8b6-4cc6-bce9-34d07e0d45a4]
25-05-19 19:06:47.751 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:06:47.760 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:06:47.764 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:06:47.767 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:06:47.767 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:06:47.786 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:06:47.789 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:06:47.790 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:06:47.793 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:06:47.796 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:06:47.797 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:06:47.797 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:06:47.806 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:06:47.809 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:06:47.812 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:06:47.817 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:06:47.826 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:06:47.827 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:06:47.828 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:06:47.830 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:06:47.833 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-19 19:06:47.836 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:06:47.841 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-19 19:06:47.842 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-19 19:06:47.845 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:06:47.853 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:06:47.855 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:06:47.857 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:06:47.859 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:06:47.867 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 19:06:47.873 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.user_id=?
25-05-19 19:06:47.877 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 사용자 채널 목록 확인 완료
25-05-19 19:06:47.885 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.type=?
25-05-19 19:06:47.896 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id in (?) 
        and c1_0.type=?
25-05-19 19:06:47.900 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 조회 완료
25-05-19 19:06:47.905 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:06:47.913 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:06:47.919 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:06:47.926 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:06:48.038 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:06:48.041 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:06:48.050 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:06:48.052 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:06:48.052 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:06:48.066 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:06:48.067 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:06:48.069 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:06:48.072 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:06:48.075 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:06:48.077 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:06:48.078 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:06:48.137 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:06:48.143 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:06:48.149 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:06:48.151 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:06:48.151 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:06:48.169 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:06:48.176 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:06:48.178 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:06:48.181 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:06:48.184 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:06:48.186 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:06:48.186 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:06:48.197 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:06:48.200 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:06:48.207 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:06:48.215 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:06:48.262 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:06:48.263 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:06:48.265 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:06:48.266 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:06:48.268 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:06:48.272 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:06:48.273 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:06:48.274 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:06:48.279 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-19 19:06:48.290 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-19 19:40:18.947 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 26260 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 19:40:18.948 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 19:40:18.949 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-19 19:40:19.716 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-19 19:40:19.762 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 34 ms. Found 6 JPA repository interfaces.
25-05-19 19:40:19.764 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:40:19.764 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:40:19.765 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:40:20.802 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-19 19:40:20.992 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-19 19:40:20.995 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-19 19:40:21.104 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-19 19:40:21.131 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-19 19:40:21.190 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-19 19:40:21.231 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-19 19:40:21.501 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-19 19:40:21.553 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-19 19:40:21.578 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-19 19:40:22.668 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-19 19:40:22.687 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:40:22.689 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:40:22.691 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:40:22.691 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:40:22.692 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:40:22.693 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:40:22.695 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:40:22.702 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-19 19:40:22.705 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-19 19:40:22.707 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-19 19:40:22.709 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-19 19:40:22.710 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-19 19:40:22.710 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-19 19:40:22.711 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-19 19:40:22.712 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-19 19:40:22.713 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-19 19:40:22.713 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-19 19:40:22.714 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-19 19:40:22.716 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-19 19:40:22.718 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-19 19:40:22.719 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-19 19:40:22.720 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-19 19:40:22.726 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:40:23.193 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-19 19:40:23.264 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-19 19:40:24.072 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-19 19:40:24.099 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 19:40:24.989 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-19 19:40:25.067 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 19:40:25.067 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 19:40:25.077 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-19 19:40:25.100 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 33 ms
25-05-19 19:40:25.196 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 6.669 seconds (process running for 7.834)
25-05-19 19:40:25.949 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:40:25.985 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:40:26.036 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:40:26.042 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:40:26.042 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:40:26.094 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:40:26.106 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:40:26.107 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:40:26.109 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:40:26.110 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:40:26.111 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:40:26.111 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:40:26.121 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:40:26.125 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:40:26.132 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:40:26.145 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:40:26.207 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:40:26.209 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:40:26.210 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:40:26.212 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 19:40:26.218 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 메시지 삭제 완료
25-05-19 19:40:26.221 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=?
25-05-19 19:40:26.223 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ReadStatus 삭제 완료
25-05-19 19:40:26.226 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:40:26.241 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 완료
25-05-19 19:40:26.272 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:40:26.274 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:40:26.276 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:40:26.277 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:40:26.277 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:40:26.284 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:40:26.285 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:40:26.286 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:40:26.288 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:40:26.289 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:40:26.290 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:40:26.290 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:40:26.297 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:40:26.298 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:40:26.299 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 19:40:26.300 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 사용자 없음
25-05-19 19:40:26.381 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:40:26.382 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:40:26.384 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:40:26.384 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:40:26.384 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:40:26.389 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:40:26.390 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:40:26.391 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:40:26.394 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:40:26.396 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:40:26.397 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:40:26.398 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:40:26.407 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 19:40:26.409 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-19 19:40:26.427 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:40:26.429 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:40:26.432 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:40:26.434 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:40:26.434 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:40:26.442 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:40:26.443 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:40:26.445 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:40:26.447 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:40:26.450 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:40:26.452 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:40:26.452 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:40:26.473 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:40:26.475 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:40:26.476 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:40:26.483 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-19 19:40:26.485 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:40:26.491 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-19 19:40:26.491 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-19 19:40:26.494 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:40:26.499 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:40:26.500 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:40:26.501 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:40:26.501 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:40:26.518 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:40:26.520 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:40:26.522 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:40:26.522 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:40:26.522 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:40:26.528 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:40:26.529 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:40:26.530 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:40:26.532 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:40:26.533 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:40:26.534 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:40:26.534 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:40:26.539 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:40:26.541 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:40:26.542 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:40:26.546 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:40:26.553 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 완료
25-05-19 19:40:26.557 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:40:26.561 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:40:26.576 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:40:26.579 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:40:26.581 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:40:26.582 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:40:26.582 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:40:26.588 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:40:26.589 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:40:26.590 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:40:26.593 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:40:26.594 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:40:26.594 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:40:26.594 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:40:26.598 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 19:40:26.599 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-19 19:40:26.611 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:40:26.613 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:40:26.615 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:40:26.616 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:40:26.617 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:40:26.622 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:40:26.624 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:40:26.625 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:40:26.627 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:40:26.629 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:40:26.630 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:40:26.630 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:40:26.635 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:40:26.636 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:40:26.637 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:40:26.638 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 실패: 존재하지 않는 사용자 ID가 포함되어 있습니다: [d48ee578-2f34-4620-9478-abc63fe810a1]
25-05-19 19:40:26.651 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:40:26.652 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:40:26.654 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:40:26.655 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:40:26.655 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:40:26.661 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:40:26.662 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:40:26.663 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:40:26.664 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:40:26.665 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:40:26.666 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:40:26.666 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:40:26.669 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:40:26.671 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:40:26.672 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:40:26.674 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:40:26.680 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:40:26.682 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:40:26.683 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:40:26.684 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:40:26.686 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-19 19:40:26.687 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:40:26.688 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-19 19:40:26.688 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-19 19:40:26.690 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:40:26.693 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:40:26.694 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:40:26.695 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:40:26.695 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:40:26.699 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 19:40:26.703 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.user_id=?
25-05-19 19:40:26.704 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 사용자 채널 목록 확인 완료
25-05-19 19:40:26.706 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.type=?
25-05-19 19:40:26.712 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id in (?) 
        and c1_0.type=?
25-05-19 19:40:26.714 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 조회 완료
25-05-19 19:40:26.717 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:40:26.719 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:40:26.722 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:40:26.725 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:40:26.754 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:40:26.757 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:40:26.758 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:40:26.759 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:40:26.760 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:40:26.765 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:40:26.765 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:40:26.766 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:40:26.769 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:40:26.770 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:40:26.771 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:40:26.771 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:40:26.795 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:40:26.796 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:40:26.798 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:40:26.798 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:40:26.798 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:40:26.802 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:40:26.802 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:40:26.803 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:40:26.804 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:40:26.805 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:40:26.805 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:40:26.805 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:40:26.810 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:40:26.811 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:40:26.813 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:40:26.815 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:40:26.827 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:40:26.828 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:40:26.828 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:40:26.829 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:40:26.829 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:40:26.830 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:40:26.830 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:40:26.830 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:40:26.832 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-19 19:40:26.835 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-19 19:43:50.729 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 28772 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 19:43:50.731 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 19:43:50.733 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-19 19:43:51.638 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-19 19:43:51.730 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 75 ms. Found 6 JPA repository interfaces.
25-05-19 19:43:51.732 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:43:51.733 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:43:51.733 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:43:52.943 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-19 19:43:53.147 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-19 19:43:53.150 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-19 19:43:53.250 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-19 19:43:53.274 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-19 19:43:53.329 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-19 19:43:53.386 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-19 19:43:53.706 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-19 19:43:53.773 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-19 19:43:53.794 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-19 19:43:54.822 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-19 19:43:54.840 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:43:54.843 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:43:54.844 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:43:54.845 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:43:54.846 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:43:54.846 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:43:54.847 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:43:54.854 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-19 19:43:54.856 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-19 19:43:54.857 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-19 19:43:54.858 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-19 19:43:54.859 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-19 19:43:54.860 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-19 19:43:54.861 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-19 19:43:54.863 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-19 19:43:54.864 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-19 19:43:54.866 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-19 19:43:54.867 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-19 19:43:54.869 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-19 19:43:54.870 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-19 19:43:54.871 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-19 19:43:54.872 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-19 19:43:54.878 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:43:55.337 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-19 19:43:55.387 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-19 19:43:56.177 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-19 19:43:56.216 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 19:43:57.166 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-19 19:43:57.223 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 19:43:57.224 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 19:43:57.233 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-19 19:43:57.248 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 24 ms
25-05-19 19:43:57.319 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 7.072 seconds (process running for 8.244)
25-05-19 19:43:58.019 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:43:58.050 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:43:58.091 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:43:58.096 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:43:58.096 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:43:58.160 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:43:58.174 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:43:58.175 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:43:58.178 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:43:58.179 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:43:58.180 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:43:58.181 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:43:58.218 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:43:58.219 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:43:58.220 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 19:43:58.224 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 사용자 없음
25-05-19 19:43:58.274 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:43:58.276 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:43:58.278 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:43:58.279 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:43:58.280 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:43:58.282 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:43:58.283 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:43:58.283 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:43:58.285 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-19 19:43:58.289 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-19 19:44:34.717 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 4024 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 19:44:34.719 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 19:44:34.720 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-19 19:44:35.448 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-19 19:44:35.509 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 51 ms. Found 6 JPA repository interfaces.
25-05-19 19:44:35.512 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:44:35.512 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:44:35.512 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:44:36.670 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-19 19:44:36.886 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-19 19:44:36.888 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-19 19:44:37.048 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-19 19:44:37.083 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-19 19:44:37.191 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-19 19:44:37.236 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-19 19:44:37.640 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-19 19:44:37.706 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-19 19:44:37.732 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-19 19:44:38.766 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-19 19:44:38.778 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:44:38.779 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:44:38.780 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:44:38.781 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:44:38.781 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:44:38.781 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:44:38.782 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:44:38.788 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-19 19:44:38.790 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-19 19:44:38.792 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-19 19:44:38.793 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-19 19:44:38.794 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-19 19:44:38.794 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-19 19:44:38.795 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-19 19:44:38.796 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-19 19:44:38.797 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-19 19:44:38.797 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-19 19:44:38.798 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-19 19:44:38.798 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-19 19:44:38.800 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-19 19:44:38.802 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-19 19:44:38.803 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-19 19:44:38.808 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:44:39.226 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-19 19:44:39.299 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-19 19:44:40.122 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-19 19:44:40.165 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 19:44:41.080 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-19 19:44:41.159 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 19:44:41.160 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 19:44:41.171 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-19 19:44:41.193 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 32 ms
25-05-19 19:44:41.295 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 7.01 seconds (process running for 8.202)
25-05-19 19:44:42.237 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:44:42.288 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:44:42.350 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:44:42.357 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:44:42.357 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:44:42.440 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:44:42.457 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:44:42.459 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:44:42.463 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:44:42.465 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:44:42.465 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:44:42.466 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:44:42.532 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:44:42.534 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:44:42.535 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 19:44:42.541 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 사용자 없음
25-05-19 19:44:42.653 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:44:42.654 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:44:42.655 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:44:42.657 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:44:42.658 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:44:42.660 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:44:42.661 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:44:42.663 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:44:42.667 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-19 19:44:42.671 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-19 19:47:13.044 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 31616 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 19:47:13.047 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 19:47:13.048 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-19 19:47:14.274 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-19 19:47:14.346 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 6 JPA repository interfaces.
25-05-19 19:47:14.348 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:47:14.349 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:47:14.349 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:47:16.200 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-19 19:47:16.589 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-19 19:47:16.593 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-19 19:47:16.824 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-19 19:47:16.888 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-19 19:47:17.025 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-19 19:47:17.117 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-19 19:47:17.654 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-19 19:47:17.723 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-19 19:47:17.750 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-19 19:47:19.381 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-19 19:47:19.409 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:47:19.415 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:47:19.418 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:47:19.419 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:47:19.420 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:47:19.422 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:47:19.424 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:47:19.434 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-19 19:47:19.436 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-19 19:47:19.438 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-19 19:47:19.439 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-19 19:47:19.440 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-19 19:47:19.441 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-19 19:47:19.443 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-19 19:47:19.446 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-19 19:47:19.448 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-19 19:47:19.451 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-19 19:47:19.453 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-19 19:47:19.455 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-19 19:47:19.457 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-19 19:47:19.460 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-19 19:47:19.462 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-19 19:47:19.471 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:47:20.091 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-19 19:47:20.191 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-19 19:47:21.584 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-19 19:47:21.656 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 19:47:23.278 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-19 19:47:23.386 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 19:47:23.386 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 19:47:23.405 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-19 19:47:23.435 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 49 ms
25-05-19 19:47:23.575 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 11.28 seconds (process running for 13.549)
25-05-19 19:47:24.783 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:47:24.845 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:47:24.921 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:47:24.929 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:47:24.929 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:47:25.025 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:47:25.043 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:47:25.045 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:47:25.049 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:47:25.051 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:47:25.052 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:47:25.053 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:47:25.077 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:47:25.087 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:47:25.102 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:47:25.119 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:47:25.180 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:47:25.182 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:47:25.183 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:47:25.185 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 19:47:25.192 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 메시지 삭제 완료
25-05-19 19:47:25.197 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=?
25-05-19 19:47:25.199 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ReadStatus 삭제 완료
25-05-19 19:47:25.203 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:47:25.222 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 완료
25-05-19 19:47:25.271 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:47:25.275 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:47:25.279 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:47:25.281 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:47:25.282 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:47:25.291 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:47:25.293 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:47:25.296 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:47:25.299 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:47:25.303 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:47:25.305 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:47:25.306 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:47:25.316 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:47:25.318 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:47:25.319 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 19:47:25.321 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 사용자 없음
25-05-19 19:47:25.420 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:47:25.423 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:47:25.425 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:47:25.427 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:47:25.427 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:47:25.434 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:47:25.436 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:47:25.438 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:47:25.440 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:47:25.442 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:47:25.442 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:47:25.442 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:47:25.469 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 19:47:25.472 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-19 19:47:25.505 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:47:25.507 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:47:25.509 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:47:25.510 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:47:25.511 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:47:25.516 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:47:25.518 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:47:25.519 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:47:25.522 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:47:25.525 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:47:25.527 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:47:25.528 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:47:25.560 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:47:25.561 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:47:25.562 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:47:25.572 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-19 19:47:25.575 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:47:25.584 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-19 19:47:25.585 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-19 19:47:25.589 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:47:25.594 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:47:25.597 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:47:25.599 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:47:25.600 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:47:25.631 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:47:25.634 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:47:25.638 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:47:25.641 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:47:25.641 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:47:25.650 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:47:25.651 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:47:25.653 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:47:25.656 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:47:25.658 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:47:25.660 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:47:25.660 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:47:25.668 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:47:25.671 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:47:25.674 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:47:25.679 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:47:25.691 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 완료
25-05-19 19:47:25.697 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:47:25.701 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:47:25.724 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:47:25.726 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:47:25.728 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:47:25.729 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:47:25.730 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:47:25.737 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:47:25.739 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:47:25.740 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:47:25.743 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:47:25.745 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:47:25.746 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:47:25.746 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:47:25.754 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 19:47:25.755 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-19 19:47:25.779 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:47:25.782 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:47:25.785 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:47:25.786 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:47:25.786 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:47:25.794 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:47:25.796 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:47:25.797 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:47:25.801 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:47:25.803 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:47:25.805 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:47:25.805 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:47:25.816 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:47:25.817 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:47:25.819 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:47:25.822 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 실패: 존재하지 않는 사용자 ID가 포함되어 있습니다: [4e632609-aed5-4db3-8161-b14f751c508b]
25-05-19 19:47:25.845 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:47:25.848 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:47:25.851 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:47:25.851 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:47:25.851 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:47:25.860 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:47:25.861 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:47:25.862 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:47:25.865 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:47:25.866 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:47:25.867 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:47:25.867 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:47:25.873 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:47:25.875 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:47:25.878 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:47:25.881 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:47:25.890 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:47:25.892 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:47:25.894 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:47:25.895 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:47:25.897 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-19 19:47:25.900 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:47:25.902 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-19 19:47:25.902 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-19 19:47:25.905 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:47:25.908 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:47:25.908 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:47:25.909 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:47:25.910 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:47:25.915 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 19:47:25.918 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.user_id=?
25-05-19 19:47:25.920 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 사용자 채널 목록 확인 완료
25-05-19 19:47:25.922 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.type=?
25-05-19 19:47:25.927 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id in (?) 
        and c1_0.type=?
25-05-19 19:47:25.929 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 조회 완료
25-05-19 19:47:25.931 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:47:25.935 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:47:25.938 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:47:25.941 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:47:25.978 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:47:25.981 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:47:25.983 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:47:25.984 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:47:25.985 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:47:25.991 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:47:25.993 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:47:25.994 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:47:25.997 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:47:25.999 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:47:25.999 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:47:26.000 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:47:26.033 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:47:26.036 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:47:26.039 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:47:26.040 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:47:26.040 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:47:26.048 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:47:26.050 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:47:26.051 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:47:26.054 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:47:26.056 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:47:26.057 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:47:26.057 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:47:26.065 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:47:26.066 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:47:26.069 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:47:26.074 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:47:26.104 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:47:26.106 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:47:26.107 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:47:26.108 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:47:26.110 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:47:26.113 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:47:26.114 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:47:26.116 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:47:26.120 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-19 19:47:26.126 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-19 19:49:41.802 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 26176 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 19:49:41.804 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 19:49:41.804 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-19 19:49:42.590 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-19 19:49:42.650 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 48 ms. Found 6 JPA repository interfaces.
25-05-19 19:49:42.652 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:49:42.652 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:49:42.652 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:49:43.706 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-19 19:49:43.884 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-19 19:49:43.885 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-19 19:49:44.004 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-19 19:49:44.040 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-19 19:49:44.093 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-19 19:49:44.130 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-19 19:49:44.417 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-19 19:49:44.458 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-19 19:49:44.472 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-19 19:49:45.507 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-19 19:49:45.519 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:49:45.523 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:49:45.523 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:49:45.524 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:49:45.524 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:49:45.525 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:49:45.525 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:49:45.529 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-19 19:49:45.531 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-19 19:49:45.532 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-19 19:49:45.533 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-19 19:49:45.533 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-19 19:49:45.534 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-19 19:49:45.535 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-19 19:49:45.536 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-19 19:49:45.537 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-19 19:49:45.538 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-19 19:49:45.539 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-19 19:49:45.539 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-19 19:49:45.541 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-19 19:49:45.543 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-19 19:49:45.543 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-19 19:49:45.549 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:49:45.997 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-19 19:49:46.074 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-19 19:49:46.840 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-19 19:49:46.887 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 19:49:47.799 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-19 19:49:47.854 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 19:49:47.854 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 19:49:47.860 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-19 19:49:47.883 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 29 ms
25-05-19 19:49:47.948 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 6.604 seconds (process running for 7.882)
25-05-19 19:49:48.666 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:49:48.705 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:49:48.748 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:49:48.754 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:49:48.755 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:49:48.823 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:49:48.839 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:49:48.841 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:49:48.843 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:49:48.845 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:49:48.845 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:49:48.845 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:49:48.858 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 19:49:48.871 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-19 19:49:48.964 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:49:48.965 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:49:48.966 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:49:48.967 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:49:48.968 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:49:48.969 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:49:48.970 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:49:48.971 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:49:48.973 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-19 19:49:48.976 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-19 19:49:58.698 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 22728 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 19:49:58.699 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 19:49:58.700 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-19 19:49:59.445 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-19 19:49:59.496 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 43 ms. Found 6 JPA repository interfaces.
25-05-19 19:49:59.499 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:49:59.506 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:49:59.507 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:50:00.646 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-19 19:50:00.858 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-19 19:50:00.860 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-19 19:50:00.988 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-19 19:50:01.010 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-19 19:50:01.079 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-19 19:50:01.122 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-19 19:50:01.427 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-19 19:50:01.482 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-19 19:50:01.506 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-19 19:50:02.601 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-19 19:50:02.616 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:50:02.620 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:50:02.623 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:50:02.623 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:50:02.624 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:50:02.624 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:50:02.625 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:50:02.629 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-19 19:50:02.631 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-19 19:50:02.632 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-19 19:50:02.633 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-19 19:50:02.634 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-19 19:50:02.636 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-19 19:50:02.637 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-19 19:50:02.638 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-19 19:50:02.639 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-19 19:50:02.641 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-19 19:50:02.644 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-19 19:50:02.646 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-19 19:50:02.648 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-19 19:50:02.649 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-19 19:50:02.650 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-19 19:50:02.658 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:50:03.174 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-19 19:50:03.258 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-19 19:50:04.129 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-19 19:50:04.168 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 19:50:05.216 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-19 19:50:05.295 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 19:50:05.296 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 19:50:05.304 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-19 19:50:05.328 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 32 ms
25-05-19 19:50:05.421 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 7.173 seconds (process running for 8.541)
25-05-19 19:50:06.324 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:06.373 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:06.434 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:06.440 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:06.441 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:06.513 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:06.530 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:06.533 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:06.536 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:06.538 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:06.540 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:06.540 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:06.561 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:50:06.568 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:50:06.582 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:50:06.603 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:50:06.666 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:06.667 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:06.667 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:06.668 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 19:50:06.674 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 메시지 삭제 완료
25-05-19 19:50:06.677 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=?
25-05-19 19:50:06.678 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ReadStatus 삭제 완료
25-05-19 19:50:06.680 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:50:06.692 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 완료
25-05-19 19:50:06.725 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:06.727 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:06.730 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:06.731 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:06.731 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:06.738 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:06.739 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:06.741 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:06.743 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:06.745 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:06.747 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:06.748 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:06.754 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:06.755 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:06.756 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 19:50:06.757 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 사용자 없음
25-05-19 19:50:06.847 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:06.850 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:06.853 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:06.854 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:06.855 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:06.861 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:06.863 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:06.864 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:06.866 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:06.867 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:06.867 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:06.867 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:06.873 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 19:50:06.875 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-19 19:50:06.887 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:06.890 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:06.893 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:06.894 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:06.894 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:06.901 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:06.903 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:06.904 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:06.907 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:06.910 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:06.911 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:06.911 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:06.932 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:06.933 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:06.934 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:50:06.940 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-19 19:50:06.943 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:50:06.951 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-19 19:50:06.952 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-19 19:50:06.955 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:50:06.960 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:06.962 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:50:06.963 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:50:06.964 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:50:06.984 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:06.986 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:06.988 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:06.989 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:06.990 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:06.996 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:06.997 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:06.997 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:06.999 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:07.001 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:07.002 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:07.002 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:07.008 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:50:07.010 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:50:07.013 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:50:07.016 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:50:07.024 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 완료
25-05-19 19:50:07.028 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:50:07.032 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:50:07.048 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:07.050 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:07.052 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:07.053 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:07.054 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:07.059 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:07.061 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:07.062 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:07.064 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:07.066 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:07.067 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:07.067 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:07.073 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 19:50:07.074 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-19 19:50:07.099 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:07.101 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:07.104 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:07.105 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:07.105 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:07.111 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:07.112 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:07.113 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:07.114 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:07.116 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:07.117 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:07.117 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:07.124 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:07.125 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:07.126 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:50:07.127 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 실패: 존재하지 않는 사용자 ID가 포함되어 있습니다: [87365c0e-7746-4015-a7e9-24c552c8f295]
25-05-19 19:50:07.144 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:07.147 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:07.150 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:07.151 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:07.151 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:07.159 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:07.160 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:07.160 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:07.162 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:07.163 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:07.164 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:07.164 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:07.184 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:50:07.187 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:50:07.190 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:50:07.194 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:50:07.202 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:07.203 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:07.204 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:07.205 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:50:07.207 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-19 19:50:07.208 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:50:07.210 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-19 19:50:07.210 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-19 19:50:07.212 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:50:07.216 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:07.217 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:50:07.218 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:50:07.219 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:50:07.224 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 19:50:07.228 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.user_id=?
25-05-19 19:50:07.230 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 사용자 채널 목록 확인 완료
25-05-19 19:50:07.233 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.type=?
25-05-19 19:50:07.238 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id in (?) 
        and c1_0.type=?
25-05-19 19:50:07.240 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 조회 완료
25-05-19 19:50:07.243 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:50:07.246 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:50:07.250 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:50:07.253 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:50:07.293 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:07.295 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:07.296 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:07.297 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:07.297 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:07.302 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:07.304 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:07.304 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:07.306 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:07.308 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:07.308 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:07.308 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:07.334 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:07.336 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:07.338 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:07.340 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:07.340 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:07.347 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:07.348 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:07.348 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:07.350 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:07.352 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:07.352 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:07.352 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:07.357 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:50:07.359 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:50:07.362 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:50:07.365 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:50:07.387 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:50:07.389 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:50:07.390 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:50:07.391 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:50:07.391 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:50:07.394 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:50:07.395 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:50:07.395 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:50:07.399 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-19 19:50:07.403 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-19 19:50:44.131 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 10716 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 19:50:44.133 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 19:50:44.134 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-19 19:50:44.929 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-19 19:50:44.995 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 55 ms. Found 6 JPA repository interfaces.
25-05-19 19:50:44.997 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:50:44.997 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:50:44.998 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:50:46.299 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-19 19:50:46.552 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-19 19:50:46.555 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-19 19:50:46.716 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-19 19:50:46.747 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-19 19:50:46.826 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-19 19:50:46.877 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-19 19:50:47.243 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-19 19:50:47.295 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-19 19:50:47.315 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-19 19:50:48.320 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-19 19:50:48.335 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:50:48.338 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:50:48.338 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:50:48.339 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:50:48.339 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:50:48.339 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:50:48.340 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:50:48.344 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-19 19:50:48.346 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-19 19:50:48.348 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-19 19:50:48.349 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-19 19:50:48.350 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-19 19:50:48.351 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-19 19:50:48.352 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-19 19:50:48.353 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-19 19:50:48.354 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-19 19:50:48.355 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-19 19:50:48.355 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-19 19:50:48.356 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-19 19:50:48.357 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-19 19:50:48.359 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-19 19:50:48.359 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-19 19:50:48.366 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:50:48.781 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-19 19:50:48.844 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-19 19:50:49.617 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-19 19:50:49.647 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 19:50:50.521 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-19 19:50:50.578 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 19:50:50.578 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 19:50:50.589 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-19 19:50:50.608 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 30 ms
25-05-19 19:50:50.690 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 7.015 seconds (process running for 8.289)
25-05-19 19:50:51.376 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:51.428 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:51.468 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:51.473 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:51.473 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:51.516 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:51.529 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:51.530 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:51.533 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:51.535 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:51.535 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:51.535 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:51.550 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:50:51.554 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:50:51.561 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:50:51.572 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:50:51.624 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:51.625 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:51.626 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:51.628 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 19:50:51.635 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 메시지 삭제 완료
25-05-19 19:50:51.638 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=?
25-05-19 19:50:51.640 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ReadStatus 삭제 완료
25-05-19 19:50:51.642 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:50:51.656 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 완료
25-05-19 19:50:51.686 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:51.688 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:51.690 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:51.691 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:51.692 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:51.697 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:51.697 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:51.698 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:51.699 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:51.700 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:51.701 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:51.701 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:51.705 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:51.707 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:51.708 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 19:50:51.709 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 사용자 없음
25-05-19 19:50:51.773 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:51.775 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:51.777 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:51.778 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:51.779 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:51.785 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:51.787 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:51.788 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:51.790 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:51.792 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:51.794 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:51.794 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:51.801 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 19:50:51.802 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-19 19:50:51.814 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:51.817 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:51.819 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:51.820 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:51.820 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:51.825 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:51.826 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:51.827 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:51.828 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:51.830 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:51.831 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:51.831 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:51.848 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:51.849 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:51.850 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:50:51.857 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-19 19:50:51.859 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:50:51.867 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-19 19:50:51.868 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-19 19:50:51.871 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:50:51.875 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:51.876 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:50:51.877 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:50:51.878 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:50:51.896 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:51.898 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:51.899 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:51.899 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:51.899 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:51.903 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:51.904 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:51.904 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:51.906 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:51.907 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:51.907 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:51.907 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:51.911 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:50:51.912 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:50:51.914 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:50:51.916 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:50:51.921 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 완료
25-05-19 19:50:51.923 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:50:51.925 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:50:51.940 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:51.943 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:51.945 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:51.946 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:51.946 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:51.953 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:51.954 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:51.955 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:51.958 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:51.959 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:51.960 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:51.960 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:51.965 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 19:50:51.967 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-19 19:50:51.981 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:51.984 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:51.985 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:51.986 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:51.986 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:51.991 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:51.992 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:51.993 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:51.994 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:51.995 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:51.995 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:51.995 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:52.000 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:52.001 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:52.002 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:50:52.003 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 실패: 존재하지 않는 사용자 ID가 포함되어 있습니다: [cfe08c7d-1537-405f-8153-616cf5a3ad65]
25-05-19 19:50:52.025 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:52.028 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:52.029 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:52.030 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:52.030 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:52.036 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:52.037 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:52.037 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:52.039 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:52.041 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:52.042 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:52.042 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:52.048 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:50:52.050 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:50:52.051 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:50:52.054 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:50:52.058 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:52.059 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:52.059 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:52.060 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:50:52.061 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-19 19:50:52.063 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:50:52.066 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-19 19:50:52.066 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-19 19:50:52.069 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:50:52.072 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:52.074 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:50:52.075 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 19:50:52.075 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:50:52.080 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 19:50:52.083 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.user_id=?
25-05-19 19:50:52.085 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 사용자 채널 목록 확인 완료
25-05-19 19:50:52.088 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.type=?
25-05-19 19:50:52.092 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id in (?) 
        and c1_0.type=?
25-05-19 19:50:52.095 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 조회 완료
25-05-19 19:50:52.097 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:50:52.101 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:50:52.104 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:50:52.107 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:50:52.146 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:52.148 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:52.150 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:52.151 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:52.151 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:52.157 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:52.158 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:52.159 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:52.162 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:52.163 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:52.164 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:52.164 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:52.186 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:52.187 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:52.188 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:52.188 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:52.188 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:52.194 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:50:52.195 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:50:52.196 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:50:52.198 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:50:52.200 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:50:52.201 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:50:52.201 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:50:52.206 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 19:50:52.208 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 19:50:52.211 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 19:50:52.215 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 19:50:52.237 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:50:52.238 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:50:52.239 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:50:52.240 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:50:52.241 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:50:52.243 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:50:52.243 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:50:52.244 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:50:52.247 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-19 19:50:52.252 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-19 19:53:03.710 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 21560 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 19:53:03.711 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 19:53:03.712 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-19 19:53:04.488 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-19 19:53:04.541 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 46 ms. Found 6 JPA repository interfaces.
25-05-19 19:53:04.542 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:53:04.543 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:53:04.543 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:53:05.727 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-19 19:53:05.949 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-19 19:53:05.952 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-19 19:53:06.075 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-19 19:53:06.106 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-19 19:53:06.174 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-19 19:53:06.213 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-19 19:53:06.531 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-19 19:53:06.600 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-19 19:53:06.619 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-19 19:53:07.674 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-19 19:53:07.686 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:53:07.689 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:53:07.691 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:53:07.692 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:53:07.693 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:53:07.694 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:53:07.695 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:53:07.701 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-19 19:53:07.704 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-19 19:53:07.706 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-19 19:53:07.707 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-19 19:53:07.708 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-19 19:53:07.709 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-19 19:53:07.710 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-19 19:53:07.712 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-19 19:53:07.713 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-19 19:53:07.715 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-19 19:53:07.716 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-19 19:53:07.717 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-19 19:53:07.719 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-19 19:53:07.720 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-19 19:53:07.721 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-19 19:53:07.728 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:53:08.187 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-19 19:53:08.257 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-19 19:53:09.327 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-19 19:53:09.373 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 19:53:10.319 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-19 19:53:10.389 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 19:53:10.390 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 19:53:10.399 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-19 19:53:10.418 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 28 ms
25-05-19 19:53:10.513 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 7.246 seconds (process running for 8.468)
25-05-19 19:53:11.278 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:53:11.329 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:53:11.376 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:53:11.381 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:53:11.383 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:53:11.450 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:53:11.464 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:53:11.465 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:53:11.468 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:53:11.470 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:53:11.470 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:53:11.471 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:53:11.502 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:53:11.503 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:53:11.504 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:53:11.521 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 실패: 존재하지 않는 사용자 ID가 포함되어 있습니다: [32d9dbd3-fe2e-49ef-afc3-8021787eeeaf]
25-05-19 19:53:11.627 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:53:11.628 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:53:11.629 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:53:11.630 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:53:11.631 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:53:11.633 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:53:11.634 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:53:11.634 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:53:11.637 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-19 19:53:11.641 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-19 19:54:16.906 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 18408 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 19:54:16.907 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 19:54:16.908 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-19 19:54:17.670 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-19 19:54:17.738 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 59 ms. Found 6 JPA repository interfaces.
25-05-19 19:54:17.739 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:54:17.739 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:54:17.740 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:54:18.809 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-19 19:54:19.044 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-19 19:54:19.046 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-19 19:54:19.174 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-19 19:54:19.202 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-19 19:54:19.277 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-19 19:54:19.328 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-19 19:54:19.836 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-19 19:54:19.886 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-19 19:54:19.909 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-19 19:54:20.934 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-19 19:54:20.946 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:54:20.948 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:54:20.949 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:54:20.950 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:54:20.950 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:54:20.951 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:54:20.952 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:54:20.956 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-19 19:54:20.959 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-19 19:54:20.961 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-19 19:54:20.961 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-19 19:54:20.962 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-19 19:54:20.962 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-19 19:54:20.963 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-19 19:54:20.964 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-19 19:54:20.965 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-19 19:54:20.965 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-19 19:54:20.967 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-19 19:54:20.968 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-19 19:54:20.968 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-19 19:54:20.969 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-19 19:54:20.971 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-19 19:54:20.975 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:54:21.375 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-19 19:54:21.433 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-19 19:54:22.295 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-19 19:54:22.339 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 19:54:23.351 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-19 19:54:23.398 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 19:54:23.398 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 19:54:23.404 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-19 19:54:23.425 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 27 ms
25-05-19 19:54:23.511 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 7.098 seconds (process running for 8.336)
25-05-19 19:54:24.288 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:54:24.339 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:54:24.385 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:54:24.389 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:54:24.390 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:54:24.449 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:54:24.461 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:54:24.462 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:54:24.464 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:54:24.466 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:54:24.467 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:54:24.467 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:54:24.498 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:54:24.499 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:54:24.500 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 19:54:24.515 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 실패: 존재하지 않는 사용자 ID가 포함되어 있습니다: [c4a22204-ce5e-4985-a9cc-103df8397f14]
25-05-19 19:54:24.610 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:54:24.612 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:54:24.612 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:54:24.613 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:54:24.614 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:54:24.615 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:54:24.615 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:54:24.616 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:54:24.618 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-19 19:54:24.621 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-19 19:55:38.442 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 18988 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 19:55:38.443 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 19:55:38.444 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-19 19:55:39.819 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-19 19:55:39.927 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 91 ms. Found 6 JPA repository interfaces.
25-05-19 19:55:39.930 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:55:39.931 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:55:39.931 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 19:55:42.063 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-19 19:55:42.421 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-19 19:55:42.424 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-19 19:55:42.617 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-19 19:55:42.678 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-19 19:55:42.814 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-19 19:55:42.897 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-19 19:55:43.382 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-19 19:55:43.442 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-19 19:55:43.471 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-19 19:55:44.956 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-19 19:55:44.977 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:55:44.982 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:55:44.984 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:55:44.985 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:55:44.986 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:55:44.987 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:55:44.988 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:55:44.994 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-19 19:55:44.996 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-19 19:55:44.998 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-19 19:55:44.999 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-19 19:55:45.000 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-19 19:55:45.002 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-19 19:55:45.004 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-19 19:55:45.008 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-19 19:55:45.009 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-19 19:55:45.011 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-19 19:55:45.013 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-19 19:55:45.015 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-19 19:55:45.017 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-19 19:55:45.019 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-19 19:55:45.020 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-19 19:55:45.025 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:55:45.675 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-19 19:55:45.779 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-19 19:55:47.071 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-19 19:55:47.133 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 19:55:48.717 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-19 19:55:48.805 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 19:55:48.805 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 19:55:48.821 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-19 19:55:48.855 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 49 ms
25-05-19 19:55:49.001 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 11.261 seconds (process running for 12.624)
25-05-19 19:55:50.108 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:55:50.174 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:55:50.256 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:55:50.264 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:55:50.264 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:55:50.362 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:55:50.385 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:55:50.388 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 19:55:50.391 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 19:55:50.394 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 19:55:50.396 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 19:55:50.397 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 19:55:50.474 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 19:55:50.476 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 19:55:50.477 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 19:55:50.485 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 19:55:50.486 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 실패: 존재하지 않는 사용자 ID가 포함되어 있습니다: e6d0d75d-66a0-420f-a516-1356882ce90d
25-05-19 19:55:50.636 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-19 19:55:50.637 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 19:55:50.639 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 19:55:50.641 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 19:55:50.642 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 19:55:50.647 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 19:55:50.648 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 19:55:50.650 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 19:55:50.655 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-19 19:55:50.662 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-19 20:05:30.224 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Starting UserApiIntegrationTest using Java 17.0.14 with PID 9568 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 20:05:30.225 [main] DEBUG c.s.m.d.i.UserApiIntegrationTest     - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 20:05:30.225 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - The following 1 profile is active: "test"
25-05-19 20:05:31.154 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-19 20:05:31.222 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 57 ms. Found 6 JPA repository interfaces.
25-05-19 20:05:31.226 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-19 20:05:31.226 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 20:05:31.226 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 20:05:32.570 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-19 20:05:32.821 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-19 20:05:32.824 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-19 20:05:32.994 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-19 20:05:33.032 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-19 20:05:33.124 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-19 20:05:33.182 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-19 20:05:33.596 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-19 20:05:33.656 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-19 20:05:33.681 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-19 20:05:34.979 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-19 20:05:34.997 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 20:05:34.999 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 20:05:35.000 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 20:05:35.000 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 20:05:35.000 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 20:05:35.001 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 20:05:35.001 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 20:05:35.005 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-19 20:05:35.008 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-19 20:05:35.011 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-19 20:05:35.012 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-19 20:05:35.014 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-19 20:05:35.015 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-19 20:05:35.017 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-19 20:05:35.020 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-19 20:05:35.022 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-19 20:05:35.023 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-19 20:05:35.025 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-19 20:05:35.026 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-19 20:05:35.027 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-19 20:05:35.028 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-19 20:05:35.029 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-19 20:05:35.036 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-19 20:05:35.550 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-19 20:05:35.612 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-19 20:05:36.567 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-19 20:05:36.616 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 20:05:37.755 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-19 20:05:37.825 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 20:05:37.826 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 20:05:37.838 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-19 20:05:37.860 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 34 ms
25-05-19 20:05:37.946 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Started UserApiIntegrationTest in 8.244 seconds (process running for 9.794)
25-05-19 20:05:38.865 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:05:38.924 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:05:38.993 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:05:39.000 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:05:39.000 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:05:39.125 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:05:39.128 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:05:39.130 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:05:39.132 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:05:39.132 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:05:39.171 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:05:39.187 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:05:39.189 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:05:39.192 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:05:39.194 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:05:39.195 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:05:39.196 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:05:39.211 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:05:39.212 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:05:39.213 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-19 20:05:39.224 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 조회 완료
25-05-19 20:05:39.263 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:05:39.266 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:05:39.269 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:05:39.271 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:05:39.271 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:05:39.283 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID '5ba8a656-c0e8-42d8-9213-fd2708a12fd1'가 작성한 메시지들의 작성자 정보를 null로 변경 시작.
25-05-19 20:05:39.287 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.author_id=?
25-05-19 20:05:39.289 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 ID '5ba8a656-c0e8-42d8-9213-fd2708a12fd1'가 작성한 메시지가 없습니다.
25-05-19 20:05:39.289 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 엔티티 삭제 시도
25-05-19 20:05:39.295 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 삭제 완료. ID: '5ba8a656-c0e8-42d8-9213-fd2708a12fd1'
25-05-19 20:05:39.301 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:05:39.302 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:05:39.304 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        user_statuses 
    where
        id=?
25-05-19 20:05:39.307 [main] DEBUG org.hibernate.SQL                    - 
    delete 
    from
        users 
    where
        id=?
25-05-19 20:05:39.308 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-19 20:05:39.309 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 조회 완료
25-05-19 20:05:39.332 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 20:05:39.362 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:05:39.365 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:05:39.368 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:05:39.369 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:05:39.370 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:05:39.376 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:05:39.377 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:05:39.378 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:05:39.379 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 유효성 검사 실패: 이메일 'duplicate@naver.com'은(는) 이미 존재합니다.
25-05-19 20:05:39.409 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:05:39.413 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:05:39.415 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:05:39.416 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:05:39.416 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:05:39.423 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:05:39.424 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:05:39.425 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:05:39.425 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자명 변경 완료
25-05-19 20:05:39.430 [main] DEBUG org.hibernate.SQL                    - 
    update
        users 
    set
        email=?,
        password=?,
        profile_id=?,
        updated_at=?,
        username=? 
    where
        id=?
25-05-19 20:05:39.436 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:05:39.437 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 이메일 변경 완료
25-05-19 20:05:39.437 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 비밀번호 변경 완료
25-05-19 20:05:39.440 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:05:39.441 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 업데이트 완료
25-05-19 20:05:39.447 [main] DEBUG org.hibernate.SQL                    - 
    update
        users 
    set
        email=?,
        password=?,
        profile_id=?,
        updated_at=?,
        username=? 
    where
        id=?
25-05-19 20:05:39.448 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
25-05-19 20:05:39.450 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 조회 완료
25-05-19 20:05:39.474 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-19 20:05:39.475 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 20:05:39.476 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 20:05:39.477 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 20:05:39.478 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 20:05:39.480 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 20:05:39.481 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 20:05:39.482 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 20:05:39.485 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-19 20:05:39.489 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-19 20:07:10.337 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Starting UserApiIntegrationTest using Java 17.0.14 with PID 13028 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 20:07:10.339 [main] DEBUG c.s.m.d.i.UserApiIntegrationTest     - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 20:07:10.341 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - The following 1 profile is active: "test"
25-05-19 20:07:12.310 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-19 20:07:12.440 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 109 ms. Found 6 JPA repository interfaces.
25-05-19 20:07:12.445 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-19 20:07:12.446 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 20:07:12.447 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 20:07:15.209 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-19 20:07:15.667 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-19 20:07:15.672 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-19 20:07:15.952 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-19 20:07:16.036 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-19 20:07:16.216 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-19 20:07:16.318 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-19 20:07:17.056 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-19 20:07:17.144 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-19 20:07:17.196 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-19 20:07:19.545 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-19 20:07:19.571 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 20:07:19.576 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 20:07:19.578 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 20:07:19.580 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 20:07:19.581 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 20:07:19.583 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 20:07:19.585 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 20:07:19.594 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-19 20:07:19.598 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-19 20:07:19.601 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-19 20:07:19.602 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-19 20:07:19.605 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-19 20:07:19.606 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-19 20:07:19.607 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-19 20:07:19.610 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-19 20:07:19.612 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-19 20:07:19.615 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-19 20:07:19.617 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-19 20:07:19.619 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-19 20:07:19.622 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-19 20:07:19.624 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-19 20:07:19.626 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-19 20:07:19.636 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-19 20:07:20.561 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-19 20:07:20.711 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-19 20:07:22.754 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-19 20:07:22.849 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 20:07:25.095 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-19 20:07:25.236 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 20:07:25.237 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 20:07:25.258 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-19 20:07:25.299 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 62 ms
25-05-19 20:07:25.512 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Started UserApiIntegrationTest in 16.602 seconds (process running for 20.318)
25-05-19 20:07:27.046 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:07:27.132 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:07:27.231 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:07:27.242 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:07:27.243 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:07:27.381 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:07:27.409 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:07:27.413 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:07:27.416 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 유효성 검사 실패: 이메일 'duplicate@naver.com'은(는) 이미 존재합니다.
25-05-19 20:07:27.582 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-19 20:07:27.584 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 20:07:27.587 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 20:07:27.590 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 20:07:27.594 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 20:07:27.600 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 20:07:27.602 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 20:07:27.604 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 20:07:27.611 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-19 20:07:27.620 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-19 20:10:54.878 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Starting UserApiIntegrationTest using Java 17.0.14 with PID 25144 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 20:10:54.881 [main] DEBUG c.s.m.d.i.UserApiIntegrationTest     - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 20:10:54.883 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - The following 1 profile is active: "test"
25-05-19 20:10:56.806 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-19 20:10:56.928 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 103 ms. Found 6 JPA repository interfaces.
25-05-19 20:10:56.933 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-19 20:10:56.934 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 20:10:56.934 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 20:10:59.240 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-19 20:10:59.761 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-19 20:10:59.768 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-19 20:11:00.150 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-19 20:11:00.286 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-19 20:11:00.464 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-19 20:11:00.567 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-19 20:11:01.317 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-19 20:11:01.417 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-19 20:11:01.454 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-19 20:11:03.951 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-19 20:11:03.982 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 20:11:03.987 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 20:11:03.989 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 20:11:03.991 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 20:11:03.993 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 20:11:03.995 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 20:11:03.999 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 20:11:04.013 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-19 20:11:04.020 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-19 20:11:04.023 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-19 20:11:04.025 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-19 20:11:04.028 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-19 20:11:04.032 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-19 20:11:04.035 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-19 20:11:04.037 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-19 20:11:04.039 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-19 20:11:04.040 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-19 20:11:04.044 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-19 20:11:04.047 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-19 20:11:04.052 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-19 20:11:04.055 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-19 20:11:04.056 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-19 20:11:04.066 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-19 20:11:05.060 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-19 20:11:05.207 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-19 20:11:07.161 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-19 20:11:07.241 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 20:11:09.533 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-19 20:11:09.672 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 20:11:09.673 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 20:11:09.692 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-19 20:11:09.743 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 69 ms
25-05-19 20:11:09.949 [main] INFO  c.s.m.d.i.UserApiIntegrationTest     - Started UserApiIntegrationTest in 16.633 seconds (process running for 21.396)
25-05-19 20:11:11.475 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:11:11.572 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:11:11.691 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:11:11.702 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:11:11.703 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:11:11.835 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:11:11.858 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:11:11.859 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:11:11.864 [main] WARN  c.s.m.d.s.basic.BasicUserService     - 유효성 검사 실패: 이메일 'duplicate@naver.com'은(는) 이미 존재합니다.
25-05-19 20:11:12.051 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-19 20:11:12.053 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 20:11:12.056 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 20:11:12.058 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 20:11:12.059 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 20:11:12.063 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 20:11:12.066 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 20:11:12.068 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 20:11:12.074 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-19 20:11:12.082 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-19 20:23:44.032 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Starting ChannelApiIntegrationTest using Java 17.0.14 with PID 22876 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 20:23:44.035 [main] DEBUG c.s.m.d.i.ChannelApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 20:23:44.037 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - The following 1 profile is active: "test"
25-05-19 20:23:45.641 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-19 20:23:45.771 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 104 ms. Found 6 JPA repository interfaces.
25-05-19 20:23:45.775 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-19 20:23:45.776 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 20:23:45.777 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 20:23:48.662 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-19 20:23:49.255 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-19 20:23:49.261 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-19 20:23:49.569 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-19 20:23:49.665 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-19 20:23:49.843 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-19 20:23:49.968 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-19 20:23:50.861 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-19 20:23:50.986 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-19 20:23:51.025 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-19 20:23:53.925 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-19 20:23:53.963 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 20:23:53.968 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 20:23:53.970 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 20:23:53.973 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 20:23:53.975 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 20:23:53.977 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 20:23:53.981 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 20:23:53.993 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-19 20:23:53.997 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-19 20:23:54.001 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-19 20:23:54.003 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-19 20:23:54.006 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-19 20:23:54.008 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-19 20:23:54.011 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-19 20:23:54.014 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-19 20:23:54.016 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-19 20:23:54.018 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-19 20:23:54.021 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-19 20:23:54.024 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-19 20:23:54.025 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-19 20:23:54.028 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-19 20:23:54.029 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-19 20:23:54.039 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-19 20:23:55.101 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-19 20:23:55.254 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-19 20:23:57.325 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-19 20:23:57.415 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 20:23:59.551 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-19 20:23:59.707 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 20:23:59.707 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 20:23:59.726 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-19 20:23:59.778 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 69 ms
25-05-19 20:23:59.959 [main] INFO  c.s.m.d.i.ChannelApiIntegrationTest  - Started ChannelApiIntegrationTest in 16.972 seconds (process running for 19.897)
25-05-19 20:24:01.777 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:01.875 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:01.978 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:01.987 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:01.988 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:02.113 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:24:02.134 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:02.136 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:02.140 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:02.142 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:02.143 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:02.143 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:02.165 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 20:24:02.176 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 20:24:02.193 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 20:24:02.220 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 20:24:02.406 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:24:02.408 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:02.411 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:02.416 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 20:24:02.427 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 메시지 삭제 완료
25-05-19 20:24:02.433 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=?
25-05-19 20:24:02.436 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 ReadStatus 삭제 완료
25-05-19 20:24:02.440 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 20:24:02.462 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 삭제 완료
25-05-19 20:24:02.530 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:02.535 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:02.537 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:02.539 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:02.540 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:02.550 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:24:02.553 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:02.555 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:02.558 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:02.562 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:02.566 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:02.566 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:02.580 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:24:02.582 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:02.584 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 20:24:02.587 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 사용자 없음
25-05-19 20:24:02.747 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:02.751 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:02.755 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:02.757 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:02.757 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:02.768 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:24:02.771 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:02.773 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:02.778 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:02.781 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:02.783 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:02.784 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:02.806 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 20:24:02.810 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-19 20:24:02.843 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:02.848 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:02.853 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:02.854 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:02.855 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:02.867 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:24:02.869 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:02.872 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:02.875 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:02.880 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:02.884 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:02.884 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:02.912 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:24:02.914 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:02.916 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 20:24:02.919 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 20:24:02.939 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 20:24:02.951 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-19 20:24:02.964 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-19 20:24:02.965 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-19 20:24:02.968 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 20:24:02.975 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:02.977 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 20:24:02.979 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 20:24:02.980 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 20:24:03.018 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:03.023 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:03.026 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:03.027 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:03.027 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:03.036 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:24:03.037 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:03.039 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:03.044 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:03.047 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:03.049 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:03.050 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:03.061 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 20:24:03.065 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 20:24:03.070 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 20:24:03.077 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 20:24:03.096 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 업데이트 완료
25-05-19 20:24:03.104 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 20:24:03.111 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 20:24:03.143 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:03.147 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:03.151 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:03.153 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:03.153 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:03.163 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:24:03.166 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:03.167 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:03.170 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:03.175 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:03.177 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:03.178 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:03.188 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 20:24:03.190 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 채널 없음
25-05-19 20:24:03.219 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:03.221 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:03.224 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:03.225 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:03.225 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:03.233 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:24:03.235 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:03.237 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:03.242 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:03.246 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:03.249 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:03.250 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:03.261 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:24:03.264 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:03.266 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 20:24:03.269 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 20:24:03.270 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 실패: 존재하지 않는 사용자 ID [efa5dbce-cf69-4955-9047-c756263693af] 포함. UserNotFoundException 발생 예정.
25-05-19 20:24:03.271 [main] WARN  c.s.m.d.s.basic.BasicChannelService  - 발생시킬 UserNotFoundException details: {userId=efa5dbce-cf69-4955-9047-c756263693af}
25-05-19 20:24:03.295 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:03.299 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:03.301 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:03.302 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:03.302 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:03.314 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:24:03.316 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:03.317 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:03.321 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:03.323 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:03.326 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:03.326 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:03.334 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 20:24:03.337 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 20:24:03.342 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 20:24:03.346 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 20:24:03.357 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:24:03.360 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:03.361 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:03.363 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 20:24:03.366 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 20:24:03.369 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id in (?, ?)
25-05-19 20:24:03.373 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 기본 정보 저장 완료
25-05-19 20:24:03.375 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - ReadStatus 저장 완료
25-05-19 20:24:03.375 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 비공개 채널 생성 완료
25-05-19 20:24:03.378 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 20:24:03.382 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:03.383 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 20:24:03.384 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        read_statuses
        (channel_id, created_at, last_read_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 20:24:03.385 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 20:24:03.391 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
25-05-19 20:24:03.396 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.user_id=?
25-05-19 20:24:03.399 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 사용자 채널 목록 확인 완료
25-05-19 20:24:03.402 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.type=?
25-05-19 20:24:03.408 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id in (?) 
        and c1_0.type=?
25-05-19 20:24:03.411 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 채널 조회 완료
25-05-19 20:24:03.414 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 20:24:03.418 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 20:24:03.422 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 20:24:03.429 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 20:24:03.485 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:03.488 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:03.491 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:03.493 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:03.494 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:03.501 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:24:03.503 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:03.504 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:03.507 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:03.509 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:03.511 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:03.512 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:03.557 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:03.561 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:03.564 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:03.565 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:03.565 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:03.573 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:24:03.575 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:03.576 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:03.579 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:03.582 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:03.584 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:03.584 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:03.592 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 20:24:03.594 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 20:24:03.598 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 20:24:03.603 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 20:24:03.640 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-19 20:24:03.642 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 20:24:03.646 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 20:24:03.648 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 20:24:03.649 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 20:24:03.654 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 20:24:03.656 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 20:24:03.657 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 20:24:03.662 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-19 20:24:03.669 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-19 20:24:15.945 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Starting MessageApiIntegrationTest using Java 17.0.14 with PID 14124 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 20:24:15.948 [main] DEBUG c.s.m.d.i.MessageApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 20:24:15.949 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - The following 1 profile is active: "test"
25-05-19 20:24:17.782 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-19 20:24:17.912 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 109 ms. Found 6 JPA repository interfaces.
25-05-19 20:24:17.915 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-19 20:24:17.916 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 20:24:17.917 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 20:24:20.578 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-19 20:24:21.146 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-19 20:24:21.151 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-19 20:24:21.491 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-19 20:24:21.572 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-19 20:24:21.741 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-19 20:24:21.835 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-19 20:24:22.529 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-19 20:24:22.651 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-19 20:24:22.693 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-19 20:24:25.073 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-19 20:24:25.111 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 20:24:25.116 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 20:24:25.119 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 20:24:25.119 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 20:24:25.121 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 20:24:25.122 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 20:24:25.124 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 20:24:25.134 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-19 20:24:25.138 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-19 20:24:25.142 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-19 20:24:25.144 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-19 20:24:25.146 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-19 20:24:25.147 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-19 20:24:25.151 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-19 20:24:25.155 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-19 20:24:25.157 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-19 20:24:25.159 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-19 20:24:25.162 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-19 20:24:25.166 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-19 20:24:25.169 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-19 20:24:25.172 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-19 20:24:25.175 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-19 20:24:25.184 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-19 20:24:26.788 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-19 20:24:27.129 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-19 20:24:31.519 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-19 20:24:31.632 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 20:24:33.804 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-19 20:24:33.915 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 20:24:33.916 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 20:24:33.930 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-19 20:24:33.966 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 50 ms
25-05-19 20:24:34.132 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Started MessageApiIntegrationTest in 19.364 seconds (process running for 22.642)
25-05-19 20:24:35.579 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:35.686 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:35.825 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:35.835 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:35.835 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:35.960 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 20:24:35.971 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 20:24:35.998 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 20:24:36.048 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 20:24:36.198 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:36.200 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:36.204 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:36.206 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:36.206 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:36.215 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 20:24:36.218 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 20:24:36.222 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 20:24:36.228 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 20:24:36.286 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 및 작성자 확인 완료
25-05-19 20:24:36.287 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 없음
25-05-19 20:24:36.314 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 저장 완료
25-05-19 20:24:36.443 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:24:36.465 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:36.469 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:36.477 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 20:24:36.499 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-19 20:24:36.521 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 삭제 완료
25-05-19 20:24:36.554 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:36.557 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:36.562 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:36.565 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:36.566 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:36.577 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 20:24:36.580 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 20:24:36.582 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 20:24:36.587 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 20:24:36.597 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 및 작성자 확인 완료
25-05-19 20:24:36.597 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 없음
25-05-19 20:24:36.599 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 저장 완료
25-05-19 20:24:36.736 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:36.740 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:36.744 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:36.747 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:36.748 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:36.757 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 20:24:36.759 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 20:24:36.762 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 20:24:36.772 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 20:24:36.785 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 및 작성자 확인 완료
25-05-19 20:24:36.785 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 없음
25-05-19 20:24:36.788 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 저장 완료
25-05-19 20:24:36.796 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 및 작성자 확인 완료
25-05-19 20:24:36.796 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 없음
25-05-19 20:24:36.801 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 저장 완료
25-05-19 20:24:36.814 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:24:36.816 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:36.818 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:24:36.819 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 20:24:36.821 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        messages
        (author_id, channel_id, text, created_at, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?)
25-05-19 20:24:36.822 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 20:24:36.832 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 20:24:36.836 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 조회 완료
25-05-19 20:24:36.901 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:36.907 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:36.912 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:36.915 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:36.915 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:36.926 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 20:24:36.931 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 20:24:36.936 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 20:24:36.944 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 20:24:36.956 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 및 작성자 확인 완료
25-05-19 20:24:36.956 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 없음
25-05-19 20:24:36.958 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 저장 완료
25-05-19 20:24:36.983 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 업데이트 완료
25-05-19 20:24:37.022 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:37.026 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:37.030 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:37.034 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:37.034 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:37.045 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 20:24:37.049 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 20:24:37.055 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 20:24:37.062 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 20:24:37.077 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-19 20:24:37.136 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:37.139 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:37.142 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:37.144 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:37.145 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:37.153 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 20:24:37.156 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 20:24:37.159 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 20:24:37.198 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 20:24:37.212 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        messages m1_0 
    where
        m1_0.id=?
25-05-19 20:24:37.213 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - 메시지 없음
25-05-19 20:24:37.233 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:37.237 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:37.241 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:37.242 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:37.242 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:37.255 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 20:24:37.257 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 20:24:37.260 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 20:24:37.264 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 20:24:37.275 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.type 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 20:24:37.300 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:24:37.304 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:24:37.307 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:24:37.309 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:24:37.310 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:24:37.318 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 20:24:37.321 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 20:24:37.325 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 20:24:37.330 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 20:24:37.339 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 채널 및 작성자 확인 완료
25-05-19 20:24:37.341 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 파일 메타데이터 생성 및 저장 시작. 파일명: 'test.txt', 크기: 12 bytes, 타입: 'text/plain'
25-05-19 20:24:37.348 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 파일 메타데이터 DB 저장 완료. ID: '5b406b05-3eb4-44ee-a2cf-c0c528ab5bfd', 파일명: 'test.txt'
25-05-19 20:24:37.349 [main] DEBUG c.s.m.d.r.LocalBinaryContentStorage  - 파일 저장 시도: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget\5b406b05-3eb4-44ee-a2cf-c0c528ab5bfd
25-05-19 20:24:37.352 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 파일 저장 성공: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget\5b406b05-3eb4-44ee-a2cf-c0c528ab5bfd
25-05-19 20:24:37.353 [main] INFO  c.s.m.d.s.b.BasicBinaryContentService - 실제 파일 저장 완료. 저장소 ID: '5b406b05-3eb4-44ee-a2cf-c0c528ab5bfd' (메타데이터 ID와 동일)
25-05-19 20:24:37.356 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 저장 완료
25-05-19 20:24:37.357 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 첨부파일 처리 완료
25-05-19 20:24:37.361 [main] INFO  c.s.m.d.s.basic.BasicMessageService  - 메시지 저장 완료
25-05-19 20:24:37.400 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-19 20:24:37.402 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 20:24:37.404 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 20:24:37.407 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 20:24:37.409 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 20:24:37.414 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 20:24:37.416 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 20:24:37.417 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 20:24:37.425 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-19 20:24:37.433 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
25-05-19 20:27:35.435 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Starting MessageApiIntegrationTest using Java 17.0.14 with PID 25184 (started by ych61 in C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission)
25-05-19 20:27:35.438 [main] DEBUG c.s.m.d.i.MessageApiIntegrationTest  - Running with Spring Boot v3.4.0, Spring v6.2.0
25-05-19 20:27:35.439 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - The following 1 profile is active: "test"
25-05-19 20:27:39.478 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
25-05-19 20:27:39.727 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 203 ms. Found 6 JPA repository interfaces.
25-05-19 20:27:39.735 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'jpaAuditingHandler' with an equivalent definition: replacing [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.auditing.AuditingHandler; scope=; abstract=false; lazyInit=null; autowireMode=2; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=from; initMethodNames=null; destroyMethodNames=null]
25-05-19 20:27:39.736 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingEntityListener; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 20:27:39.739 [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor' with an equivalent definition: replacing [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null] with [Root bean: class=org.springframework.data.jpa.domain.support.AuditingBeanFactoryPostProcessor; scope=; abstract=false; lazyInit=null; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; fallback=false; factoryBeanName=null; factoryMethodName=null; initMethodNames=null; destroyMethodNames=null]
25-05-19 20:27:43.459 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Starting...
25-05-19 20:27:44.038 [main] INFO  com.zaxxer.hikari.pool.HikariPool    - HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:testdb user=SA
25-05-19 20:27:44.042 [main] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Start completed.
25-05-19 20:27:44.318 [main] INFO  o.s.c.i.s.PathMatchingResourcePatternResolver - Skipping search for files matching pattern [**/*.class]: directory [C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\out\test\classes\com\sprint\mission\discodeit\entity] does not exist
25-05-19 20:27:44.383 [main] INFO  o.h.jpa.internal.util.LogHelper      - HHH000204: Processing PersistenceUnitInfo [name: default]
25-05-19 20:27:44.548 [main] INFO  org.hibernate.Version                - HHH000412: Hibernate ORM core version 6.6.2.Final
25-05-19 20:27:44.659 [main] INFO  o.h.c.i.RegionFactoryInitiator       - HHH000026: Second-level cache disabled
25-05-19 20:27:45.383 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo  - No LoadTimeWeaver setup: ignoring JPA class transformer
25-05-19 20:27:45.483 [main] WARN  org.hibernate.orm.deprecation        - HHH90000025: H2Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
25-05-19 20:27:45.528 [main] INFO  o.hibernate.orm.connections.pooling  - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
25-05-19 20:27:47.910 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator   - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
25-05-19 20:27:47.942 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 20:27:47.947 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 20:27:47.949 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 20:27:47.950 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 20:27:47.951 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 20:27:47.952 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 20:27:47.953 [main] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 20:27:47.963 [main] DEBUG org.hibernate.SQL                    - 
    create table binary_contents (
        created_at timestamp(6) with time zone not null,
        size bigint,
        id uuid not null,
        content_type varchar(255),
        file_name varchar(255),
        primary key (id)
    )
25-05-19 20:27:47.967 [main] DEBUG org.hibernate.SQL                    - 
    create table channels (
        created_at timestamp(6) with time zone not null,
        id uuid not null,
        description varchar(255),
        name varchar(255) not null unique,
        type enum ('PRIVATE','PUBLIC') not null,
        primary key (id)
    )
25-05-19 20:27:47.971 [main] DEBUG org.hibernate.SQL                    - 
    create table message_attachments (
        attachment_id uuid not null unique,
        message_id uuid not null
    )
25-05-19 20:27:47.973 [main] DEBUG org.hibernate.SQL                    - 
    create table messages (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        author_id uuid,
        channel_id uuid not null,
        id uuid not null,
        text clob,
        primary key (id)
    )
25-05-19 20:27:47.975 [main] DEBUG org.hibernate.SQL                    - 
    create table read_statuses (
        created_at timestamp(6) with time zone not null,
        last_read_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        channel_id uuid not null,
        id uuid not null,
        user_id uuid not null,
        primary key (id)
    )
25-05-19 20:27:47.977 [main] DEBUG org.hibernate.SQL                    - 
    create table user_statuses (
        created_at timestamp(6) with time zone not null,
        last_active_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        user_id uuid not null unique,
        primary key (id)
    )
25-05-19 20:27:47.979 [main] DEBUG org.hibernate.SQL                    - 
    create table users (
        created_at timestamp(6) with time zone not null,
        updated_at timestamp(6) with time zone,
        id uuid not null,
        profile_id uuid unique,
        email varchar(255) not null unique,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (id)
    )
25-05-19 20:27:47.985 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKsd1m8rb8jcpbcnb7rpdue7ctc 
       foreign key (attachment_id) 
       references binary_contents
25-05-19 20:27:47.988 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists message_attachments 
       add constraint FKj7twd218e2gqw9cmlhwvo1rth 
       foreign key (message_id) 
       references messages
25-05-19 20:27:47.991 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FKowtlim26svclkatusptbgi7u1 
       foreign key (author_id) 
       references users
25-05-19 20:27:47.994 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists messages 
       add constraint FK3u3ckbhwq9se1cmopk2pq05b2 
       foreign key (channel_id) 
       references channels
25-05-19 20:27:47.997 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKa38ri44ml4gfdpklx4ahqr8gd 
       foreign key (channel_id) 
       references channels
25-05-19 20:27:48.001 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists read_statuses 
       add constraint FKml3k4wr9sj5yxrmj6d0aoib2e 
       foreign key (user_id) 
       references users
25-05-19 20:27:48.004 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists user_statuses 
       add constraint FK4lfl3ei2ubchgcxrrpo3pw4mm 
       foreign key (user_id) 
       references users
25-05-19 20:27:48.007 [main] DEBUG org.hibernate.SQL                    - 
    alter table if exists users 
       add constraint FKtbudycgrip49xdptogmhfqnso 
       foreign key (profile_id) 
       references binary_contents
25-05-19 20:27:48.020 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
25-05-19 20:27:49.024 [main] INFO  c.s.m.d.r.LocalBinaryContentStorage  - 저장소 디렉토리 생성 완료: C:\Users\ych61\IdeaProjects\codeit_sprint\2-sprint-mission\discodeit-storaget
25-05-19 20:27:49.167 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
25-05-19 20:27:51.482 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
25-05-19 20:27:51.614 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
25-05-19 20:27:54.437 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
25-05-19 20:27:54.578 [main] INFO  o.s.b.t.m.w.SpringBootMockServletContext - Initializing Spring TestDispatcherServlet ''
25-05-19 20:27:54.579 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Initializing Servlet ''
25-05-19 20:27:54.601 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver  - Exposing 4 endpoints beneath base path '/actuator'
25-05-19 20:27:54.649 [main] INFO  o.s.t.w.s.TestDispatcherServlet      - Completed initialization in 70 ms
25-05-19 20:27:54.871 [main] INFO  c.s.m.d.i.MessageApiIntegrationTest  - Started MessageApiIntegrationTest in 21.096 seconds (process running for 25.576)
25-05-19 20:27:56.844 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.email=? 
    fetch
        first ? rows only
25-05-19 20:27:56.945 [main] DEBUG org.hibernate.SQL                    - 
    select
        u1_0.id 
    from
        users u1_0 
    where
        u1_0.username=? 
    fetch
        first ? rows only
25-05-19 20:27:57.065 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 정보 저장 완료
25-05-19 20:27:57.077 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 상태 정보 생성 완료
25-05-19 20:27:57.078 [main] INFO  c.s.m.d.s.basic.BasicUserService     - 사용자 생성 완료
25-05-19 20:27:57.202 [main] DEBUG org.hibernate.SQL                    - 
    select
        c1_0.id 
    from
        channels c1_0 
    where
        c1_0.name=? 
    fetch
        first ? rows only
25-05-19 20:27:57.216 [main] INFO  c.s.m.d.s.basic.BasicChannelService  - 공개 채널 생성 완료
25-05-19 20:27:57.238 [main] DEBUG org.hibernate.SQL                    - 
    select
        m1_0.id,
        m1_0.author_id,
        m1_0.channel_id,
        m1_0.text,
        m1_0.created_at,
        m1_0.updated_at 
    from
        messages m1_0 
    where
        m1_0.channel_id=? 
    order by
        m1_0.created_at desc 
    fetch
        first ? rows only
25-05-19 20:27:57.285 [main] DEBUG org.hibernate.SQL                    - 
    select
        rs1_0.id,
        rs1_0.channel_id,
        rs1_0.created_at,
        rs1_0.last_read_at,
        rs1_0.updated_at,
        rs1_0.user_id 
    from
        read_statuses rs1_0 
    where
        rs1_0.channel_id=?
25-05-19 20:27:57.474 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        users
        (created_at, email, password, profile_id, updated_at, username, id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
25-05-19 20:27:57.491 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        user_statuses
        (created_at, last_active_at, updated_at, user_id, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:27:57.493 [main] DEBUG org.hibernate.SQL                    - 
    insert 
    into
        channels
        (created_at, description, name, type, id) 
    values
        (?, ?, ?, ?, ?)
25-05-19 20:27:57.497 [main] DEBUG org.hibernate.SQL                    - 
    select
        count(*) 
    from
        channels c1_0 
    where
        c1_0.id=?
25-05-19 20:27:57.509 [main] WARN  c.s.m.d.s.basic.BasicMessageService  - 채널 없음
25-05-19 20:27:57.741 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
25-05-19 20:27:57.744 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists binary_contents cascade 
25-05-19 20:27:57.747 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists channels cascade 
25-05-19 20:27:57.750 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists message_attachments cascade 
25-05-19 20:27:57.752 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists messages cascade 
25-05-19 20:27:57.755 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists read_statuses cascade 
25-05-19 20:27:57.757 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists user_statuses cascade 
25-05-19 20:27:57.759 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL                    - 
    drop table if exists users cascade 
25-05-19 20:27:57.766 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown initiated...
25-05-19 20:27:57.773 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource   - HikariPool-1 - Shutdown completed.
