plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'

}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

group = 'com.sprint.mission'
version = '3.0-M12'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //security 설치
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // jwt 토큰
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
    implementation 'com.nimbusds:nimbus-jose-jwt:10.3'

    //캐시
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //캐시 가시화
//    implementation 'io.micrometer:micrometer-registry-prometheus'

    //AWS SDK 설치
    implementation 'software.amazon.awssdk:s3:2.31.7'

    //비동기 작업을 위한 micrometer 설치
    implementation 'org.springframework.retry:spring-retry'
    implementation 'io.micrometer:context-propagation:1.1.3'

    //비동기 작업을 위한 WebClient 사용
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'io.projectreactor:reactor-core:3.6.5'
    //JPA 설치
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //웹 소캣
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    //querl dsl
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //PostGre SQL 설치
    runtimeOnly 'org.postgresql:postgresql'

    //테스트용 H2 DB 설치
    runtimeOnly 'com.h2database:h2'

    //MapStruct
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //모니터링
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    //Swagger UI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
