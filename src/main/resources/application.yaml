spring:
  profiles:
    active: dev
  application:
    name: discodeit
  datasource:
    url: jdbc:postgresql://localhost:5432/discodeit
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  data:
    web:
      pageable:
        default-page-size: 50


discodeit:
  storage:
    type: ${STORAGE_TYPE:local}
    local:
      root-path: ${STORAGE_LOCAL_ROOT_PATH:.discodeit/storage}
      s3:
        access-key: ${AWS_S3_ACCESS_KEY}
        secret-key: ${AWS_S3_SECRET_KEY}
        region: ${AWS_S3_REGION}
        bucket: ${AWS_S3_BUCKET}
        presigned-url-expiration: ${AWS_S3_PRESIGNED_URL_EXPIRATION:600} # (기본값: 10분)

logging:
  level:
    root: info
    com.sprint.mission.discodeit: info
    org.hibernate.SQL: debug
    org.hibernate.type.descriptor.sql: trace

# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,loggers
  endpoint:
    health:
      show-details: always
    info:
      enabled: true
  info:
    app:
      name: Discodeit
      version: 1.7.0
      java:
        version: 17
      spring-boot:
        version: 3.4.0
    env:
      datasource:
        url: ${spring.datasource.url}
        driver-class-name: ${spring.datasource.driver-class-name}
      jpa:
        ddl-auto: ${spring.jpa.hibernate.ddl-auto}
      storage:
        type: local
        path: ./data
      multipart:
        max-file-size: ${spring.servlet.multipart.max-file-size}
        max-request-size: ${spring.servlet.multipart.max-request-size}

