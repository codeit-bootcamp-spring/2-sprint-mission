spring:
  application:
    name: discodeit
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:prod} # dev:8080 or prod:80
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
  datasource:
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 60000
  jpa:
    hibernate:
      ddl-auto: none
    defer-datasource-initialization: true
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false
  sql:
    init:
      mode: always

logging.level.org:
      hibernate:
        SQL: debug
        orm.jdbc.bind: trace
      springframework.data: debug

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    csrf:
      enabled: true

discodeit:
  storage:
    type: local
    local:
      root-path: .discodeit

# Actuator 설정
management:
  info:
    env:
      enabled: true # info 세부정보를 표시하기위해 해당 설정 필요
  endpoints:
    web:
      exposure:
        # include: "*" // 모든 endpoint 노출
        # 또는 특정 엔드포인트만 활성화
        include: health, info, metrics, loggers
info: # Actuator info 설정
  app:
    name: "Discodeit"
    version: "1.7.0"
    java_version: "17"
    spring_boot_version: "3.4.0"
    setting_info:
      datasource:
        url: "${spring.datasource.url}"
        driver-class-name: "${spring.datasource.driver-class-name}"
      jpa:
        ddl-auto: "${spring.jpa.hibernate.ddl-auto}"
      storage:
        type: "${discodeit.storage.type}"
        path: "${discodeit.storage.local.root-path}"
      multipart:
        max-file-size: "${spring.servlet.multipart.max-file-size}"
        max-request-size: "${spring.servlet.multipart.max-request-size}"