spring:
    application:
        name: discodeit
    profiles:
        active: dev
    boot:
        admin:
            client:
                instance:
                    name: discodeit

discodeit:
    storage:
        type: ${STORAGE_TYPE:local}
        local:
            root-path: ${STORAGE_LOCAL_ROOT_PATH:.discodeit/storage}
        s3:
            access-key: ${AWS_S3_ACCESS_KEY}
            secret-key: ${AWS_S3_SECRET_KEY}
            region: ${AWS_S3_REGION}
            bucket: ${AWS_S3_BUCKET}
            presigned-url-expiration: ${AWS_S3_PRESIGNED_URL_EXPIRATION:600}

    admin:
        username: ${ADMIN_NAME:admin}
        password: ${ADMIN_PASSWORD:admin123@}
        email: ${ADMIN_EMAIL:admin@discodeit.com}

    rememberme:
        key: discodeitRememberKey
        token-validity-day: 30

    jwt:
        secret: d9f8e4a2b6c7d5e9f1a3b8c2d7e4f0a1
        access-token-validity-minutes: 15
        refresh-token-validity-minutes: 120

management:
    endpoints:
        web:
            exposure:
                include: health, info, metrics, loggers
    info:
        env:
            enabled: true

info:
    app:
        name: Discodeit
        version: 1.7.0
    java:
        version: 17
    spring-boot:
        version: 3.4.0
    datasource:
        url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:discodeit}
        driver-class-name: org.postgresql.Driver
    jpa:
        ddl-auto: update
    storage:
        type: local
        path: ./upload
    multipart:
        max-file-size: 10MB
        max-request-size: 10MB

springdoc:
    api-docs:
        enabled: true
        version: openapi_3_1

logging:
    level:
        root: info