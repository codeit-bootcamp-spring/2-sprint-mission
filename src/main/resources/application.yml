spring:
  application:
    name: discodeit
  datasource:
    url: jdbc:postgresql://localhost:5432/discodeit
    username: discodeit_user
    password: discodeit1234
    driver-class-name: org.postgresql.Driver
    #  profiles:
    #    active: dev # dev | prod

  jpa:
    hibernate:
      ddl-auto: validate # or update / none
    show-sql: true       # 콘솔에 SQL 출력
    properties:
      format_sql: true # SQL 예쁘게 출력
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 30MB

discodeit:
  repository:
    type: jcf   # jcf | file
    file-directory: output/
  storage:
    type: local
    local:
      root-path: ./binary-storage

logging:
  level:
    root: info
    com.sprint.mission.discodeit: info
    org.springframework.security: trace

# Actuator 엔드포인트 설정
management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, loggers
    health:
      show-details: always
  # 명시적으로 info에 나타날 정보 활성화
  info:
    os:
      enabled: true
    java:
      enabled: true
    env:
      enabled: true

info:
  app:
    name: Discodeit
    version: 1.7.0
    java:
      version: 17
    spring:
      boot:
        version: 3.4.0
  settings:
    datasource:
      url: ${spring.datasource.url}
      driver-class-name: ${spring.datasource.driver-class-name}
    jpa:
      ddl-auto: ${spring.jpa.hibernate.ddl-auto}
    storage:
      type: ${discodeit.storage.type}
      path: ${discodeit.storage.local.root-path}
    multipart:
      max-file-size: ${spring.servlet.multipart.max-file-size}
      max-request-size: ${spring.servlet.multipart.max-request-size}