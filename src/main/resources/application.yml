discodeit:
  storage:
    type: ${STORAGE_TYPE:local} # local | s3
    local:
      root-path: ${STORAGE_LOCAL_ROOT_PATH:.discodeit/storage}
    s3:
      access-key: ${AWS_S3_ACCESS_KEY}
      secret-key: ${AWS_S3_SECRET_KEY}
      region: ${AWS_S3_REGION}
      bucket: ${AWS_S3_BUCKET}
      presigned-url-expiration: ${AWS_S3_PRESIGNED_URL_EXPIRATION:600} # (기본값: 10분

spring:
  profiles:
    active: dev
  application:
    name: discodeit
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 10MB
  boot:
    admin:
      client:
        url: http://localhost:9090
  cache:
    type: simple
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: discodeit-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  data:
    redis:
      host: localhost
      port: 6379

  jpa:
    hibernate:
      ddl-auto: none
    defer-datasource-initialization: true
    show-sql: true
    properties:
      hibernate:
        default_batch_fetch_size: 100
        format_sql: true
        use_sql_comments: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false

  sql:
    init:
      mode: never

  logging:
    level:
      root: INFO
      org.hibernate.SQL: INFO
      com.sprint.mission.discodeit: INFO

sprint:
  admin:
    username: ${SPRINT_ADMIN_USERNAME}
    email: ${SPRINT_ADMIN_EMAIL}
    password: ${SPRINT_ADMIN_PASSWORD}

security:
  remember-me:
    key: ${SECURITY_REMEMBER_ME_KEY}
    token-validity-seconds: ${SECURITY_REMEMBER_ME_TOKEN_VALIDITY_SECONDS}

app:
  jwt:
    secret: ${JWT_SECRET_KEY}
    access-token-expiration: 1800000   # 30
    refresh-token-expiration: 1209600000 # 14
    issuer: ${JWT_ISSUER}


info:
  app:
    name: Discodeit
    version: 1.7.0
  java:
    version: 17
  spring-boot:
    version: 3.4.0
  datasource:
    url: ${spring.datasource.url}
    driver-class-name: ${spring.datasource.driver-class-name}
  jpa:
    ddl-auto: ${spring.jpa.hibernate.ddl-auto}
  storage:
    type: ${discodeit.storage.type}
    path: ${discodeit.storage.local.root-path}
  multipart:
    max-file-size: ${spring.servlet.multipart.maxFileSize}
    max-request-size: ${spring.servlet.multipart.maxRequestSize}






